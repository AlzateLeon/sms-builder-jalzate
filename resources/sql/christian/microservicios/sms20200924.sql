-- MariaDB dump 10.17  Distrib 10.5.5-MariaDB, for osx10.15 (x86_64)
--
-- Host: localhost    Database: sms
-- ------------------------------------------------------
-- Server version	10.5.5-MariaDB

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `ATRIBUTOCALIDAD`
--

DROP TABLE IF EXISTS `ATRIBUTOCALIDAD`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ATRIBUTOCALIDAD` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `DESCRIPCION` varchar(255) NOT NULL,
  `REVISION_ID` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_ATRIBUTOCALIDAD_REVISION_ID` (`REVISION_ID`),
  CONSTRAINT `FK_ATRIBUTOCALIDAD_REVISION_ID` FOREIGN KEY (`REVISION_ID`) REFERENCES `REVISION` (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ATRIBUTOCALIDAD`
--

LOCK TABLES `ATRIBUTOCALIDAD` WRITE;
/*!40000 ALTER TABLE `ATRIBUTOCALIDAD` DISABLE KEYS */;
INSERT INTO `ATRIBUTOCALIDAD` VALUES (1,'CVI',1),(2,'SCI',1),(3,'RRQI',1);
/*!40000 ALTER TABLE `ATRIBUTOCALIDAD` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `EVALUACIONCALIDAD`
--

DROP TABLE IF EXISTS `EVALUACIONCALIDAD`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `EVALUACIONCALIDAD` (
  `EVALUACIONCUALITATIVA` varchar(255) DEFAULT NULL,
  `EVALUACIONCUANTITATIVA` float DEFAULT NULL,
  `ATRIBUTOCALIDAD_ID` int(11) NOT NULL,
  `REFERENCIA_ID` int(11) NOT NULL,
  PRIMARY KEY (`ATRIBUTOCALIDAD_ID`,`REFERENCIA_ID`),
  KEY `FK_EVALUACIONCALIDAD_REFERENCIA_ID` (`REFERENCIA_ID`),
  CONSTRAINT `FK_EVALUACIONCALIDAD_ATRIBUTOCALIDAD_ID` FOREIGN KEY (`ATRIBUTOCALIDAD_ID`) REFERENCES `ATRIBUTOCALIDAD` (`ID`),
  CONSTRAINT `FK_EVALUACIONCALIDAD_REFERENCIA_ID` FOREIGN KEY (`REFERENCIA_ID`) REFERENCES `REFERENCIA` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `EVALUACIONCALIDAD`
--

LOCK TABLES `EVALUACIONCALIDAD` WRITE;
/*!40000 ALTER TABLE `EVALUACIONCALIDAD` DISABLE KEYS */;
INSERT INTO `EVALUACIONCALIDAD` VALUES ('NO_CUMPLE',0,1,24),('NO_CUMPLE',0,1,49),('NO_CUMPLE',0,1,57),('NO_CUMPLE',0,1,59),('NO_CUMPLE',0,1,84),('NO_CUMPLE',0,1,111),('NO_CUMPLE',0,1,135),('NO_CUMPLE',0,1,144),('PARCIALMENTE',0.5,1,146),('NO_CUMPLE',0,1,159),('CUMPLE',1,1,165),('CUMPLE',1,1,166),('NO_CUMPLE',0,1,185),('CUMPLE',1,2,24),('PARCIALMENTE',0.5,2,49),('CUMPLE',1,2,57),('PARCIALMENTE',0.5,2,59),('NO_CUMPLE',0,2,84),('PARCIALMENTE',0.5,2,111),('NO_CUMPLE',0,2,135),('NO_CUMPLE',0,2,144),('PARCIALMENTE',0.5,2,146),('CUMPLE',1,2,159),('NO_CUMPLE',0,2,165),('NO_CUMPLE',0,2,166),('NO_CUMPLE',0,2,185),('NO_CUMPLE',0,3,24),('NO_CUMPLE',0,3,49),('NO_CUMPLE',0,3,57),('NO_CUMPLE',0,3,59),('NO_CUMPLE',0,3,84),('NO_CUMPLE',0,3,111),('NO_CUMPLE',0,3,135),('NO_CUMPLE',0,3,144),('NO_CUMPLE',0,3,146),('NO_CUMPLE',0,3,159),('NO_CUMPLE',0,3,165),('NO_CUMPLE',0,3,166),('NO_CUMPLE',0,3,185);
/*!40000 ALTER TABLE `EVALUACIONCALIDAD` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `FUENTE`
--

DROP TABLE IF EXISTS `FUENTE`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `FUENTE` (
  `NOMBRE` varchar(255) NOT NULL,
  `TIPO` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`NOMBRE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `FUENTE`
--

LOCK TABLES `FUENTE` WRITE;
/*!40000 ALTER TABLE `FUENTE` DISABLE KEYS */;
INSERT INTO `FUENTE` VALUES ('ACM','BASE_DATOS'),('IEEE','BASE_DATOS'),('INCLUSION_DIRECTA','INCLUSION_DIRECTA'),('MANUAL','INCLUSION_DIRECTA'),('SCIENCEDIRECT','BASE_DATOS'),('SCOPUS','BASE_DATOS'),('SNOWBALL_BACKWARD','BOLA_NIEVE'),('SNOWBALL_FORWARD','BOLA_NIEVE'),('SPRINGER','BASE_DATOS'),('WOS','BASE_DATOS');
/*!40000 ALTER TABLE `FUENTE` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `METADATO`
--

DROP TABLE IF EXISTS `METADATO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `METADATO` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `IDENTIFIER` varchar(255) DEFAULT NULL,
  `VALUE` longtext DEFAULT NULL,
  `REFERENCIA_ID` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_METADATO_REFERENCIA_ID` (`REFERENCIA_ID`),
  CONSTRAINT `FK_METADATO_REFERENCIA_ID` FOREIGN KEY (`REFERENCIA_ID`) REFERENCES `REFERENCIA` (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=3292 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `METADATO`
--

LOCK TABLES `METADATO` WRITE;
/*!40000 ALTER TABLE `METADATO` DISABLE KEYS */;
INSERT INTO `METADATO` VALUES (1,'NOT_SUPORT','Association for Computing Machinery',12),(2,'AUTOR','Golan-Gueta, Guy',13),(3,'DOI','10.1145/3230713',25),(4,'NOT_SUPORT','Association for Computing Machinery',33),(5,'PUBLISHER','ACM Transactions on Autonomous and Adaptive Systems',29),(6,'KEYWORD','Docker',20),(7,'KEYWORD','sentiment analysis applications',32),(8,'DOI','10.1145/3319404',28),(9,'KEYWORD','Syndication',14),(10,'AUTOR','Milano, Matthew',23),(11,'NOT_SUPORT','1',21),(12,'NOT_SUPORT','19',28),(13,'KEYWORD','DevOps',29),(14,'AUTOR','Michalevsky, Yan',13),(15,'NOT_SUPORT','Washington, DC, USA',19),(16,'NOT_SUPORT','14',14),(17,'FUENTE','ACM',10),(18,'AUTOR','Chen, Kaifei',14),(19,'NOT_SUPORT','Association for Computing Machinery',11),(20,'AUTOR','Zohar, Yoni',13),(21,'KEYWORD','Internetofthings',33),(22,'PUBLISHER','IEEE/ACM Transactions on Computational Biology and Bioinformatics',19),(23,'PUBLISHER','ACM Transactions on Internet Technology',7),(24,'AUTOR','Falasconi, Tommaso',25),(25,'AUTOR','Casari, Paolo',16),(26,'FUENTE','ACM',14),(27,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3319404',28),(28,'AUTOR','Tomasi, Massimo',25),(29,'NOT_SUPORT','New York, NY, USA',22),(30,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.14778/3377369.3377370',31),(31,'KEYWORD','vehicular clustering',20),(32,'PUBLISHER','Proceedings of the ACM on Programming Languages',13),(33,'PUBLISHER','ACM Transactions on Sensor Networks',14),(34,'NOT_SUPORT','New York, NY, USA',1),(35,'NOT_SUPORT','New York, NY, USA',29),(36,'DOI','10.1145/3173572',1),(37,'NOT_SUPORT','13',31),(38,'NOT_SUPORT','Association for Computing Machinery',24),(39,'KEYWORD','vehicular edge computing',20),(40,'DOI','10.1145/3267468',3),(41,'AUTOR','Tremel, Edward',23),(42,'KEYWORD','Cloud computing',23),(43,'AUTOR','Zaccai, Tal',31),(44,'FUENTE','ACM',16),(45,'KEYWORD','RESTAPI',19),(46,'DOI','10.1145/3375633',22),(47,'AUTOR','Newton, Ryan',31),(48,'FUENTE','ACM',3),(49,'KEYWORD','Fog computing',5),(50,'AUTOR','Oikonomou, Giorgos',8),(51,'AUTOR','Hajj, Hazem',32),(52,'DOI','10.1145/3236332',8),(53,'AUTOR','Brun, Yuriy',22),(54,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3342103',4),(55,'AUTOR','Zink, Sydney',23),(56,'AUTOR','Kuenning, Geoff',17),(57,'PUBLISHER','Proceedings of the ACM on Programming Languages',21),(58,'NOT_SUPORT','2',22),(59,'AUTOR','Gehring, Darren',31),(60,'NOT_SUPORT','19',11),(61,'KEYWORD','Autoregressive with exogenous variable models',18),(62,'KEYWORD','Service composition',3),(63,'KEYWORD','Participatory design',34),(64,'AUTOR','Guha, Arjun',21),(65,'KEYWORD','Scalability',5),(66,'KEYWORD','Cost-based pricing',4),(67,'DOI','10.1145/3360575',21),(68,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3226644',11),(69,'AUTOR','Dautov, Rustem',2),(70,'FUENTE','ACM',23),(71,'AUTOR','Varela, Carlos',5),(72,'KEYWORD','Distributed systems',22),(73,'KEYWORD','performance variability',8),(74,'NOT_SUPORT','Association for Computing Machinery',14),(75,'NOT_SUPORT','5',16),(76,'KEYWORD','Consistency',23),(77,'NOT_SUPORT','2',24),(78,'NOT_SUPORT','Association for Computing Machinery',22),(79,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3152421',34),(80,'NOT_SUPORT','778',20),(81,'AUTOR','Puliafito, Antonio',33),(82,'AUTOR','Dias De Assuncao, Marcos',5),(83,'AUTOR','Abraham, Ittai',13),(84,'KEYWORD','database',26),(85,'NOT_SUPORT','New York, NY, USA',16),(86,'KEYWORD','cloud',8),(87,'KEYWORD','Consolidation',16),(88,'DOI','10.1145/3293455',6),(89,'NOT_SUPORT','Association for Computing Machinery',2),(90,'DOI','10.1145/3199665',14),(91,'KEYWORD','distributed computing',21),(92,'KEYWORD','Replication',23),(93,'AUTOR','Santambrogio, Marco D.',18),(94,'NOT_SUPORT','29',26),(95,'AUTOR','Pinckney, Donald',21),(96,'NOT_SUPORT','3',8),(97,'FUENTE','ACM',17),(98,'PUBLISHER','ACM Transactions on the Web',3),(99,'FUENTE','ACM',12),(100,'KEYWORD','on-demand fog placement',20),(101,'DOI','10.1145/3158136',13),(102,'NOT_SUPORT','19',2),(103,'NOT_SUPORT','New York, NY, USA',30),(104,'NOT_SUPORT','New York, NY, USA',28),(105,'FUENTE','ACM',4),(106,'FUENTE','ACM',7),(107,'AUTOR','Evangelinou, Athanasia',8),(108,'NOT_SUPORT','Association for Computing Machinery',34),(109,'AUTOR','Abad, Cristina L.',8),(110,'PUBLISHER','Proceedings of the VLDB Endowment',27),(111,'NOT_SUPORT','New York, NY, USA',26),(112,'KEYWORD','Software engineering education',10),(113,'AUTOR','Zhou, Wanlei',5),(114,'NOT_SUPORT','IEEE Press',20),(115,'KEYWORD','Program analysis',13),(116,'NOT_SUPORT','Association for Computing Machinery',25),(117,'NOT_SUPORT','2',7),(118,'PUBLISHER','Proceedings of the ACM on Programming Languages',30),(119,'KEYWORD','Modular reasoning',13),(120,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3158136',13),(121,'AUTOR','Wang, Huaimin',1),(122,'DOI','10.1145/3381452',7),(123,'PUBLISHER','ACM Transactions on Asian and Low-Resource Language Information Processing',32),(124,'NOT_SUPORT','New York, NY, USA',11),(125,'AUTOR','El-Hajj, Wassim',32),(126,'KEYWORD','Edge',2),(127,'KEYWORD','Gateway',9),(128,'DOI','10.1109/TNET.2020.2973800',20),(129,'AUTOR','Varghese, Blesson',5),(130,'AUTOR','Martin, Paul',12),(131,'AUTOR','Ernst, Michael D.',22),(132,'AUTOR','Atkinson, Malcolm P.',12),(133,'NOT_SUPORT','12',27),(134,'KEYWORD','sentiment lexicons',32),(135,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3360497',10),(136,'KEYWORD','Knowledge gaps',10),(137,'KEYWORD','Workflows',12),(138,'NOT_SUPORT','4',17),(139,'AUTOR','Casale, Giuliano',5),(140,'AUTOR','Abdelhamid, Ahmed',31),(141,'AUTOR','Litoiu, Marin',29),(142,'PUBLISHER','ACM Computing Surveys',12),(143,'AUTOR','Minhas, Umar Farooq',31),(144,'KEYWORD','system testing',26),(145,'FUENTE','ACM',29),(146,'KEYWORD','Software quality',25),(147,'NOT_SUPORT','Association for Computing Machinery',18),(148,'PUBLISHER','ACM Computing Surveys',16),(149,'AUTOR','Rinetzky, Noam',13),(150,'NOT_SUPORT','New York, NY, USA',23),(151,'NOT_SUPORT','OOPSLA',21),(152,'NOT_SUPORT','New York, NY, USA',7),(153,'AUTOR','Kousiouris, George',8),(154,'FUENTE','ACM',15),(155,'NOT_SUPORT','12',15),(156,'NOT_SUPORT','VLDB Endowment',15),(157,'DOI','10.1145/3241737',5),(158,'NOT_SUPORT','New York, NY, USA',5),(159,'KEYWORD','Ops automation',11),(160,'KEYWORD','Large-scale',9),(161,'AUTOR','Puliafito, Antonio',28),(162,'AUTOR','Tiwali, Devesh',17),(163,'AUTOR','Goldstein, Jonathan',31),(164,'KEYWORD','log analysis',22),(165,'NOT_SUPORT','New York, NY, USA',24),(166,'KEYWORD','Software architecture',25),(167,'AUTOR','Mourad, Azzam',20),(168,'AUTOR','Zhao, Ming',17),(169,'KEYWORD','micro-services',20),(170,'AUTOR','Brondolin, Rolando',18),(171,'NOT_SUPORT','1327',19),(172,'NOT_SUPORT','Association for Computing Machinery',4),(173,'PUBLISHER','ACM Transactions on Autonomous and Adaptive Systems',18),(174,'PUBLISHER','Proceedings of the VLDB Endowment',15),(175,'FUENTE','ACM',33),(176,'FUENTE','ACM',13),(177,'PUBLISHER','Proceedings of the VLDB Endowment',31),(178,'FUENTE','ACM',18),(179,'PUBLISHER','ACM Transactions on Modeling and Performance Evaluation of Computing Systems',8),(180,'AUTOR','Jha, Sagar',23),(181,'KEYWORD','Resource-constrained',9),(182,'KEYWORD','Lisp',30),(183,'NOT_SUPORT','2289',15),(184,'KEYWORD','Management information systems',25),(185,'KEYWORD','deep learning',32),(186,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3236332',8),(187,'KEYWORD','Service-oriented architecture',3),(188,'DOI','10.1145/3139290',29),(189,'AUTOR','Chandramouli, Badrish',31),(190,'KEYWORD','Uncertainty',24),(191,'KEYWORD','Software process',25),(192,'KEYWORD','Non-volatile memory',23),(193,'AUTOR','De Capitani Di Vimercati, Sabrina',5),(194,'FUENTE','ACM',1),(195,'NOT_SUPORT','18',1),(196,'AUTOR','Bahsoon, Rami',5),(197,'KEYWORD','Cloud computing',5),(198,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3301443',33),(199,'FUENTE','ACM',8),(200,'FUENTE','ACM',25),(201,'AUTOR','Culler, David E.',14),(202,'NOT_SUPORT','2',2),(203,'NOT_SUPORT','4',19),(204,'KEYWORD','orchestration',20),(205,'NOT_SUPORT','Association for Computing Machinery',13),(206,'AUTOR','Galeotti, Juan P',26),(207,'NOT_SUPORT','2',23),(208,'NOT_SUPORT','New York, NY, USA',21),(209,'KEYWORD','Kubeadm',20),(210,'PUBLISHER','ACM Transactions on Software Engineering and Methodology',22),(211,'AUTOR','Ardagna, Claudio',3),(212,'KEYWORD','RDMA',23),(213,'NOT_SUPORT','New York, NY, USA',33),(214,'KEYWORD','elasticity',8),(215,'AUTOR','Damiani, Ernesto',3),(216,'NOT_SUPORT','2',33),(217,'NOT_SUPORT','New York, NY, USA',34),(218,'PUBLISHER','ACM Computing Surveys',4),(219,'KEYWORD','GA4GH',19),(220,'NOT_SUPORT','Association for Computing Machinery',30),(221,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/2850416',9),(222,'AUTOR','Krebs, Rouven',8),(223,'DOI','10.1145/3341145',16),(224,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3375633',22),(225,'AUTOR','Polegri, Gianluca',3),(226,'KEYWORD','Federation',14),(227,'KEYWORD','Software engineering economics',29),(228,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3381452',7),(229,'KEYWORD','Fog computing',11),(230,'NOT_SUPORT','New York, NY, USA',32),(231,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3386321',30),(232,'AUTOR','Mingozzi, Enzo',33),(233,'AUTOR','Longo, Francesco',28),(234,'KEYWORD','Software-as-a-service',3),(235,'NOT_SUPORT','18',24),(236,'AUTOR','Hwang, Jooyoung',17),(237,'KEYWORD','Placement',16),(238,'AUTOR','Toosi, Adel Nadjaran',5),(239,'AUTOR','Quattrocchi, G.',11),(240,'NOT_SUPORT','POPL',13),(241,'AUTOR','Vögler, Michael',9),(242,'NOT_SUPORT','New York, NY, USA',3),(243,'AUTOR','Ramamohanarao, Kotagiri',4),(244,'KEYWORD','Mixed methods',25),(245,'KEYWORD','formal language semantics',21),(246,'AUTOR','Leiva, Rafael García',16),(247,'AUTOR','Colyer, Adrian',15),(248,'NOT_SUPORT','2287',15),(249,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3341145',16),(250,'KEYWORD','Cloud computing',16),(251,'FUENTE','ACM',27),(252,'KEYWORD','container',20),(253,'KEYWORD','Reliability',16),(254,'FUENTE','ACM',26),(255,'KEYWORD','Cloud price model',4),(256,'NOT_SUPORT','1',34),(257,'AUTOR','Anisetti, Marco',3),(258,'AUTOR','Barna, Cornel',29),(259,'KEYWORD','Architectural style',24),(260,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3360575',21),(261,'NOT_SUPORT','1',10),(262,'AUTOR','Rana, Omer',5),(263,'AUTOR','Rodriguez, Maria Alejandra',5),(264,'KEYWORD','Computing continuum',11),(265,'AUTOR','Distefano, Salvatore',2),(266,'AUTOR','Behrens, Jonathan',23),(267,'KEYWORD','Topological proximity',33),(268,'NOT_SUPORT','New York, NY, USA',9),(269,'AUTOR','Damiani, Andrea',18),(270,'AUTOR','Buyya, Rajkumar',5),(271,'DOI','10.1145/3342103',4),(272,'AUTOR','Giray, Gorkem',10),(273,'AUTOR','Zomaya, Albert Y.',5),(274,'AUTOR','Zhang, Irene',31),(275,'KEYWORD','Cloud computing',29),(276,'NOT_SUPORT','Association for Computing Machinery',1),(277,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3012429',12),(278,'NOT_SUPORT','3',21),(279,'KEYWORD','Built environment',14),(280,'NOT_SUPORT','28',20),(281,'NOT_SUPORT','12',27),(282,'AUTOR','Kolb, John',14),(283,'NOT_SUPORT','2',13),(284,'NOT_SUPORT','601',31),(285,'AUTOR','Rana, Omer',33),(286,'KEYWORD','Security certification',3),(287,'NOT_SUPORT','3',25),(288,'NOT_SUPORT','1324',19),(289,'PUBLISHER','ACM Transactions on Internet Technology',2),(290,'AUTOR','Ferroni, Matteo',18),(291,'AUTOR','Hickey, Rich',30),(292,'AUTOR','Baresi, Luciano',7),(293,'DOI','10.1145/3301443',33),(294,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3104028',24),(295,'NOT_SUPORT','Association for Computing Machinery',17),(296,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1109/TNET.2020.2973800',20),(297,'AUTOR','Dustdar, Schahram',9),(298,'AUTOR','Ang, Tan Fong',12),(299,'NOT_SUPORT','2',20),(300,'AUTOR','Sami, Hani',20),(301,'KEYWORD','Testing',6),(302,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3127499',18),(303,'NOT_SUPORT','1890',27),(304,'FUENTE','ACM',31),(305,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3241737',5),(306,'KEYWORD','opinion mining',32),(307,'AUTOR','Simmhan, Yogesh',5),(308,'KEYWORD','Edge computing',11),(309,'AUTOR','Liew, Chee Sun',12),(310,'KEYWORD','REST',26),(311,'AUTOR','Srirama, Satish Narayana',5),(312,'KEYWORD','Autoscaling',16),(313,'FUENTE','ACM',19),(314,'KEYWORD','SQL',26),(315,'AUTOR','Sciuto, Donatella',18),(316,'NOT_SUPORT','25',34),(317,'AUTOR','Galea, Michelle',12),(318,'NOT_SUPORT','Association for Computing Machinery',9),(319,'KEYWORD','availability',8),(320,'DOI','10.1145/3152421',34),(321,'KEYWORD','Functions-as-a-Service',11),(322,'FUENTE','ACM',22),(323,'AUTOR','Van Eyk, Erwin',8),(324,'AUTOR','Gentzsch, Wolfgang',5),(325,'NOT_SUPORT','12',29),(326,'AUTOR','Bruneo, Dario',2),(327,'KEYWORD','Model-based testing',3),(328,'AUTOR','Corna, Andrea',18),(329,'KEYWORD','Adaptive system',24),(330,'KEYWORD','Control theory',24),(331,'DOI','10.1145/3295662',32),(332,'KEYWORD','Discrete Markov models',18),(333,'NOT_SUPORT','New York, NY, USA',6),(334,'AUTOR','Jamshidi, Pooyan',24),(335,'AUTOR','Weber, Ingo',1),(336,'AUTOR','Xing, Albert',22),(337,'AUTOR','Wu, Caesar',4),(338,'NOT_SUPORT','5',31),(339,'KEYWORD','Web service',6),(340,'NOT_SUPORT','5',5),(341,'KEYWORD','Market-based pricing',4),(342,'KEYWORD','Workflow management systems',12),(343,'FUENTE','ACM',28),(344,'NOT_SUPORT','Association for Computing Machinery',6),(345,'NOT_SUPORT','Association for Computing Machinery',29),(346,'NOT_SUPORT','15',17),(347,'FUENTE','ACM',5),(348,'DOI','10.1145/3386321',30),(349,'AUTOR','Netto, Marco A.S.',5),(350,'AUTOR','Arcuri, Andrea',26),(351,'AUTOR','Shaban, Khaled Bashir',32),(352,'NOT_SUPORT','Association for Computing Machinery',10),(353,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.14778/3352063.3352092',27),(354,'AUTOR','Östberg, Per Olov',16),(355,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1109/TCBB.2019.2916810',19),(356,'AUTOR','Ciancarini, Paolo',25),(357,'NOT_SUPORT','Association for Computing Machinery',26),(358,'KEYWORD','Cloud-native',24),(359,'KEYWORD','vehicular fog computing',20),(360,'KEYWORD','Value-based pricing',4),(361,'KEYWORD','operational risk',8),(362,'AUTOR','Buyya, Rajkumar',4),(363,'NOT_SUPORT','1',13),(364,'AUTOR','Llorente, Ignacio M.',5),(365,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3267468',3),(366,'NOT_SUPORT','13',3),(367,'PUBLISHER','ACM Trans. Softw. Eng. Methodol.',26),(368,'NOT_SUPORT','52',4),(369,'AUTOR','Herbst, Nikolas',8),(370,'NOT_SUPORT','49',12),(371,'NOT_SUPORT','2',11),(372,'NOT_SUPORT','28',6),(373,'AUTOR','Shilane, Philip',17),(374,'AUTOR','Al-Sallab, Ahmad',32),(375,'AUTOR','Fierro, Gabe',14),(376,'DOI','10.14778/3352063.3352092',27),(377,'KEYWORD','Encryption at rest',19),(378,'AUTOR','Grossman, Shelly',13),(379,'DOI','10.1145/3104028',24),(380,'KEYWORD','Vehicular on-boarding units (OBUs)',20),(381,'AUTOR','Longo, Francesco',33),(382,'PUBLISHER','ACM Transactions on Internet Technology',9),(383,'AUTOR','Arcuri, Andrea',6),(384,'KEYWORD','Toolchain integration',19),(385,'PUBLISHER','ACM Transactions on Internet Technology',24),(386,'NOT_SUPORT','4',12),(387,'KEYWORD','Fog',2),(388,'KEYWORD','Stack4Things',2),(389,'AUTOR','Bødker, Susanne',34),(390,'PUBLISHER','ACM Transactions on Internet Technology',33),(391,'DOI','10.1145/3372345',17),(392,'NOT_SUPORT','4',26),(393,'KEYWORD','Cloud computing',24),(394,'NOT_SUPORT','New York, NY, USA',12),(395,'KEYWORD','Information systems quality',25),(396,'PUBLISHER','ACM Transactions on Internet Technology',1),(397,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.14778/3352063.3352144',15),(398,'NOT_SUPORT','22E2',17),(399,'NOT_SUPORT','26',21),(400,'AUTOR','Puliafito, Carlo',33),(401,'DOI','10.14778/3352063.3352144',15),(402,'AUTOR','Hamdi, Ali',32),(403,'AUTOR','Sundararaman, Swaminathan',17),(404,'KEYWORD','Skill gaps',10),(405,'KEYWORD','IoT',2),(406,'AUTOR','Akhter, Adil',27),(407,'KEYWORD','program comprehension',22),(408,'AUTOR','Garriga, M.',11),(409,'KEYWORD','Smart contracts',13),(410,'NOT_SUPORT','Association for Computing Machinery',8),(411,'AUTOR','Guinea, S.',11),(412,'AUTOR','Baly, Ramy',32),(413,'NOT_SUPORT','12',18),(414,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3309705',2),(415,'NOT_SUPORT','588',31),(416,'NOT_SUPORT','2',1),(417,'KEYWORD','Smart environment',2),(418,'AUTOR','Schleicher, Johannes M.',9),(419,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3230713',25),(420,'NOT_SUPORT','2',28),(421,'KEYWORD','Microservice',24),(422,'AUTOR','Ghezzi, Carlo',7),(423,'DOI','10.1145/3309705',2),(424,'NOT_SUPORT','Association for Computing Machinery',28),(425,'AUTOR','Tsigkanos, Christos',7),(426,'AUTOR','Merlino, Giovanni',2),(427,'KEYWORD','Offloading',2),(428,'KEYWORD','Cloud computing',33),(429,'AUTOR','Liu, Perry',22),(430,'KEYWORD','IoT',9),(431,'KEYWORD','Opinion survey',10),(432,'PUBLISHER','IEEE/ACM Transactions on Networking',20),(433,'NOT_SUPORT','New York, NY, USA',10),(434,'PUBLISHER','ACM Computing Surveys',5),(435,'NOT_SUPORT','4',18),(436,'AUTOR','Jin, Hai',5),(437,'KEYWORD','automated test generation',26),(438,'AUTOR','Meiklejohn, Christopher',31),(439,'DOI','10.1145/3226644',11),(440,'NOT_SUPORT','New York, NY, USA',18),(441,'KEYWORD','REST',6),(442,'FUENTE','ACM',20),(443,'NOT_SUPORT','52',16),(444,'NOT_SUPORT','4',29),(445,'KEYWORD','Optimization',16),(446,'DOI','10.1145/3360497',10),(447,'AUTOR','Shen, Haiying',5),(448,'KEYWORD','Alternatives',34),(449,'NOT_SUPORT','16',19),(450,'AUTOR','Kyng, Morten',34),(451,'KEYWORD','Cloud services provider (CSP)',4),(452,'KEYWORD','Devops',24),(453,'FUENTE','ACM',21),(454,'NOT_SUPORT','New York, NY, USA',2),(455,'KEYWORD','performance isolation',8),(456,'KEYWORD','Cloud economics',5),(457,'AUTOR','Gelenbe, Erol',5),(458,'NOT_SUPORT','1',30),(459,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3391533',26),(460,'NOT_SUPORT','19',33),(461,'KEYWORD','Edge computing',16),(462,'NOT_SUPORT','16',9),(463,'AUTOR','Calheiros, Rodrigo',5),(464,'AUTOR','Peshawaria, Rahee Ghosh',31),(465,'KEYWORD','Delphi study',25),(466,'AUTOR','Fokaefs, Marios',29),(467,'AUTOR','Russo, Daniel',25),(468,'NOT_SUPORT','20',10),(469,'NOT_SUPORT','1',6),(470,'AUTOR','Milojicic, Dejan',5),(471,'NOT_SUPORT','2',9),(472,'KEYWORD','Metrics',8),(473,'AUTOR','Katsifodimos, Asterios',27),(474,'NOT_SUPORT','IEEE Computer Society Press',19),(475,'AUTOR','Brun, Yuriy',21),(476,'AUTOR','Badaro, Gilbert',32),(477,'KEYWORD','InterCloud',5),(478,'PUBLISHER','ACM Transactions on Software Engineering and Methodology',6),(479,'KEYWORD','memetic algorithm',20),(480,'AUTOR','Senf, Alexander',19),(481,'AUTOR','Chang, Yuan Hao',17),(482,'AUTOR','Vaquero, Luis Miguel',5),(483,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3173572',1),(484,'KEYWORD','Cloud computing',2),(485,'AUTOR','Xie, Tao',1),(486,'PUBLISHER','ACM Transactions on Computer Systems',23),(487,'AUTOR','Iosup, Alexandru',8),(488,'AUTOR','Kubiatowicz, John D.',18),(489,'KEYWORD','Mobile computing',11),(490,'NOT_SUPORT','51',5),(491,'AUTOR','Zimmermann, Olaf',24),(492,'AUTOR','Birman, Kenneth P.',23),(493,'KEYWORD','Security',19),(494,'PUBLISHER','ACM Transactions on Management Information Systems',25),(495,'AUTOR','Kounev, Samuel',8),(496,'NOT_SUPORT','28',13),(497,'DOI','10.1145/3391533',26),(498,'AUTOR','Barnett, Mike',31),(499,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3295662',32),(500,'NOT_SUPORT','New York, NY, USA',14),(501,'AUTOR','Rana, Omer',28),(502,'AUTOR','Tuzun, Eray',10),(503,'KEYWORD','Empirical study',10),(504,'NOT_SUPORT','New York, NY, USA',4),(505,'KEYWORD','arabic natural language processing',32),(506,'NOT_SUPORT','6',4),(507,'NOT_SUPORT','Association for Computing Machinery',5),(508,'AUTOR','Gkountouvas, Theo',23),(509,'KEYWORD','web service',26),(510,'AUTOR','Andersen, Michael P.',14),(511,'FUENTE','ACM',32),(512,'FUENTE','ACM',24),(513,'AUTOR','Lebeck, Niel',31),(514,'KEYWORD','Cloud',3),(515,'DOI','10.1145/3127499',18),(516,'AUTOR','Brecht, Tim',8),(517,'KEYWORD','Sustainability',5),(518,'FUENTE','ACM',34),(519,'KEYWORD','Sentiment analysis',32),(520,'FUENTE','ACM',2),(521,'KEYWORD','Provisioning',9),(522,'NOT_SUPORT','9',25),(523,'NOT_SUPORT','VLDB Endowment',27),(524,'AUTOR','Jangda, Abhinav',21),(525,'PUBLISHER','ACM Transactions on Internet Technology',11),(526,'NOT_SUPORT','New York, NY, USA',8),(527,'AUTOR','Sagiv, Mooly',13),(528,'KEYWORD','Web services',3),(529,'NOT_SUPORT','1',3),(530,'KEYWORD','Software engineering',6),(531,'KEYWORD','Data management',5),(532,'KEYWORD','Data-intensive science',12),(533,'NOT_SUPORT','36',23),(534,'NOT_SUPORT','VLDB Endowment',31),(535,'KEYWORD','Fog computing',33),(536,'NOT_SUPORT','Association for Computing Machinery',23),(537,'AUTOR','Garriga, Martin',7),(538,'KEYWORD','Resource consumption',18),(539,'KEYWORD','Application development',5),(540,'KEYWORD','Software architecture',24),(541,'KEYWORD','Self-adaptive systems',29),(542,'AUTOR','Katz, Randy',14),(543,'AUTOR','Pahl, Claus',24),(544,'NOT_SUPORT','12',15),(545,'AUTOR','Bauer, André',8),(546,'DOI','10.1145/3302258',23),(547,'NOT_SUPORT','Association for Computing Machinery',32),(548,'NOT_SUPORT','4',30),(549,'KEYWORD','Big data',2),(550,'AUTOR','Javadi, Bahman',5),(551,'KEYWORD','Framework',9),(552,'AUTOR','Garousi, Vahid',10),(553,'DOI','10.14778/3377369.3377370',31),(554,'NOT_SUPORT','22E',17),(555,'DOI','10.1145/2850416',9),(556,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3139290',29),(557,'FUENTE','ACM',11),(558,'PUBLISHER','ACM Transactions on Storage',17),(559,'AUTOR','El-Hajj, Wassim',20),(560,'AUTOR','Habash, Nizar',32),(561,'AUTOR','Inzinger, Christian',9),(562,'NOT_SUPORT','Association for Computing Machinery',21),(563,'KEYWORD','SBST',26),(564,'NOT_SUPORT','29',22),(565,'PUBLISHER','ACM Transactions on Computing Education',10),(566,'AUTOR','Le Duc, Thang',16),(567,'KEYWORD','Microservices',14),(568,'AUTOR','Song, Weijia',23),(569,'KEYWORD','Education research',10),(570,'AUTOR','Wang, Patty',22),(571,'AUTOR','Mendonça, D. F.',11),(572,'NOT_SUPORT','46',30),(573,'NOT_SUPORT','Association for Computing Machinery',16),(574,'NOT_SUPORT','790',20),(575,'KEYWORD','Model-as-a-service',18),(576,'KEYWORD','Remediation',16),(577,'AUTOR','Fragkoulis, Marios',27),(578,'AUTOR','Beschastnikh, Ivan',22),(579,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3293455',6),(580,'KEYWORD','Clojure',30),(581,'AUTOR','Van Hemert, Jano I.',12),(582,'KEYWORD','benchmarking',8),(583,'NOT_SUPORT','New York, NY, USA',17),(584,'NOT_SUPORT','1893',27),(585,'NOT_SUPORT','4',8),(586,'AUTOR','Burckhardt, Sebastian',31),(587,'NOT_SUPORT','3',32),(588,'PUBLISHER','ACM Transactions on Internet Technology',28),(589,'KEYWORD','Model-based controller',24),(590,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3199665',14),(591,'KEYWORD','Real-time systems',11),(592,'NOT_SUPORT','18',32),(593,'KEYWORD','Machine learning',16),(594,'AUTOR','Samarati, Pierangela',5),(595,'NOT_SUPORT','New York, NY, USA',25),(596,'KEYWORD','Distributed systems',16),(597,'PUBLISHER','ACM Transactions on Computer-Human Interaction',34),(598,'DOI','10.1109/TCBB.2019.2916810',19),(599,'NOT_SUPORT','3-4',14),(600,'AUTOR','Van Hoorn, Andre',1),(601,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3302258',23),(602,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3372345',17),(603,'KEYWORD','Serverless computing',5),(604,'DOI','10.1145/3012429',12),(605,'NOT_SUPORT','HOPL',30),(606,'NOT_SUPORT','20',7),(607,'KEYWORD','serverless computing',21),(608,'NOT_SUPORT','Association for Computing Machinery',7),(609,'FUENTE','ACM',9),(610,'FUENTE','ACM',6),(611,'AUTOR','Van Renesse, Robbert',23),(612,'AUTOR','Baresi, L.',11),(613,'FUENTE','ACM',30),(614,'NOT_SUPORT','New York, NY, USA',13),(615,'NOT_SUPORT','Association for Computing Machinery',3),(616,'NOT_SUPORT','9',47),(617,'KEYWORD','Cloud',50),(618,'AUTOR','Pang, Ai Chun',48),(619,'AUTOR','Osses, Felipe',49),(620,'KEYWORD','microservice',35),(621,'KEYWORD','Systematics',50),(622,'AUTOR','Jamshidi, Pooyan',50),(623,'NOT_SUPORT','41',37),(624,'NOT_SUPORT','26',41),(625,'KEYWORD','biosignals',45),(626,'KEYWORD','Computer architecture',50),(627,'KEYWORD','performance modeling and prediction',47),(628,'FUENTE','IEEE',37),(629,'KEYWORD','Microservice',47),(630,'PUBLISHER','IEEE Transactions on Network and Service Management',40),(631,'KEYWORD','Containers',50),(632,'NOT_SUPORT','16',49),(633,'KEYWORD','data analysis',45),(634,'AUTOR','Soldani, Jacopo',50),(635,'KEYWORD','on-demand fog formation',40),(636,'AUTOR','Kerherve, Riwal',36),(637,'KEYWORD','application component',46),(638,'DOI','10.1109/TNSM.2018.2844187',39),(639,'AUTOR','Hobson, Tanner',41),(640,'AUTOR','Ren, Nana',47),(641,'AUTOR','Wu, Chase',47),(642,'NOT_SUPORT','31',35),(643,'AUTOR','Sayadi, Bessem',36),(644,'NOT_SUPORT','16',48),(645,'NOT_SUPORT','4',41),(646,'KEYWORD','cloud',36),(647,'NOT_SUPORT','65',36),(648,'AUTOR','Li, Zhi',42),(649,'FUENTE','IEEE',41),(650,'NOT_SUPORT','55',37),(651,'KEYWORD','Kubeadm',38),(652,'NOT_SUPORT','16',37),(653,'NOT_SUPORT','7',50),(654,'KEYWORD','Service-centric',39),(655,'AUTOR','Pei, Ke',43),(656,'NOT_SUPORT','4',48),(657,'NOT_SUPORT','677',50),(658,'NOT_SUPORT','1434',48),(659,'KEYWORD','Architectural patterns',49),(660,'DOI','10.1109/TPDS.2019.2901467',47),(661,'AUTOR','Lallet, Julien',36),(662,'DOI','10.1109/TSUSC.2017.2661339',46),(663,'KEYWORD','Kubernetes',40),(664,'NOT_SUPORT','2321',49),(665,'KEYWORD','Isabelle/HOL',37),(666,'KEYWORD','brownout',44),(667,'NOT_SUPORT','706',42),(668,'PUBLISHER','IEEE Transactions on Sustainable Computing',46),(669,'KEYWORD','Broadcasting',36),(670,'AUTOR','Kaniusas, Eugenijus',45),(671,'NOT_SUPORT','776',45),(672,'KEYWORD','Systematic Literature Review',50),(673,'KEYWORD','acceleration',36),(674,'AUTOR','Mourad, Azzam',40),(675,'AUTOR','Carle, Georg',37),(676,'NOT_SUPORT','2',38),(677,'NOT_SUPORT','1',35),(678,'FUENTE','IEEE',49),(679,'KEYWORD','wearable device',48),(680,'NOT_SUPORT','1',46),(681,'NOT_SUPORT','1161',39),(682,'AUTOR','Wen, Zhenyu',35),(683,'KEYWORD','container placement',40),(684,'KEYWORD','vehicular fog computing',38),(685,'KEYWORD','micro-services',38),(686,'NOT_SUPORT','3',39),(687,'KEYWORD','and distributed visualization',41),(688,'DOI','10.1109/TNET.2020.2973800',38),(689,'PUBLISHER','IEEE Transactions on Instrumentation and Measurement',45),(690,'KEYWORD','fog computing',48),(691,'KEYWORD','Cloud data centers',46),(692,'NOT_SUPORT','782',45),(693,'KEYWORD','operations & administration',37),(694,'KEYWORD','memetic algorithm',38),(695,'AUTOR','Sami, Hani',40),(696,'KEYWORD','brownout',46),(697,'AUTOR','Dhoedt, Bart',39),(698,'KEYWORD','Vehicular on-boarding units (OBUs)',38),(699,'KEYWORD','Container',42),(700,'AUTOR','Simoens, Pieter',39),(701,'KEYWORD','Architectural tactics',49),(702,'KEYWORD','long-tail',39),(703,'NOT_SUPORT','1174',39),(704,'DOI','10.1109/TVCG.2018.2879672',41),(705,'KEYWORD','micro-services',40),(706,'AUTOR','Naab, Johannes',37),(707,'NOT_SUPORT','3',50),(708,'KEYWORD','DVB-S',36),(709,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1109/TNET.2020.2973800',38),(710,'AUTOR','Yang, Renyu',35),(711,'NOT_SUPORT','1',37),(712,'KEYWORD','Service orchestration',35),(713,'KEYWORD','Systematic Mapping Study',50),(714,'AUTOR','Raji, Mohammad',41),(715,'FUENTE','IEEE',38),(716,'AUTOR','Toosi, Adel Nadjaran',44),(717,'KEYWORD','Protocols',50),(718,'NOT_SUPORT','2101',47),(719,'NOT_SUPORT','790',38),(720,'KEYWORD','container',38),(721,'FUENTE','IEEE',36),(722,'AUTOR','Bao, Liang',47),(723,'NOT_SUPORT','143',35),(724,'KEYWORD','energy efficient',46),(725,'AUTOR','El-Hajj, Wassim',38),(726,'AUTOR','Xu, Minxian',46),(727,'PUBLISHER','IEEE Transactions on Network and Service Management',37),(728,'FUENTE','IEEE',44),(729,'KEYWORD','Security management',37),(730,'NOT_SUPORT','4',45),(731,'NOT_SUPORT','9',49),(732,'KEYWORD','Cloud data centers',44),(733,'NOT_SUPORT','1039',40),(734,'KEYWORD','dependability',35),(735,'AUTOR','Pahl, Claus',50),(736,'PUBLISHER','IEEE Latin America Transactions',49),(737,'NOT_SUPORT','2',43),(738,'NOT_SUPORT','692',50),(739,'KEYWORD','microservice',42),(740,'NOT_SUPORT','1419',48),(741,'KEYWORD','container-based virtualization',48),(742,'NOT_SUPORT','15',39),(743,'KEYWORD','QoS',44),(744,'DOI','10.1109/TNSM.2019.2948764',48),(745,'KEYWORD','FPGA',36),(746,'KEYWORD','on-demand',39),(747,'KEYWORD','edge computing',40),(748,'KEYWORD','firewall',37),(749,'FUENTE','IEEE',42),(750,'DOI','10.1109/TNSM.2019.2963643',40),(751,'NOT_SUPORT','30',47),(752,'KEYWORD','microservice',36),(753,'AUTOR','Jin, Hai',42),(754,'NOT_SUPORT','4',44),(755,'KEYWORD','centralized management',37),(756,'KEYWORD','web applications',41),(757,'KEYWORD','policy',37),(758,'NOT_SUPORT','31',42),(759,'KEYWORD','Orchestration',50),(760,'KEYWORD','microservices',44),(761,'DOI','10.1109/TPDS.2019.2929389',35),(762,'KEYWORD','task scheduling',47),(763,'AUTOR','Xu, Jie',35),(764,'AUTOR','Brogi, Antonio',50),(765,'NOT_SUPORT','2',46),(766,'KEYWORD','biomedical studies',45),(767,'AUTOR','Thurk, Florian',45),(768,'AUTOR','Shih, Yuan Yao',48),(769,'NOT_SUPORT','2327',49),(770,'NOT_SUPORT','3',42),(771,'KEYWORD','microservices',48),(772,'NOT_SUPORT','1774',41),(773,'AUTOR','Xu, Minxian',44),(774,'AUTOR','Dion, Jean',36),(775,'NOT_SUPORT','IEEE Press',38),(776,'NOT_SUPORT','2116',47),(777,'NOT_SUPORT','53',44),(778,'AUTOR','Diekmann, Cornelius',37),(779,'KEYWORD','orchestration',38),(780,'KEYWORD','vehicular edge computing',38),(781,'AUTOR','Mourad, Azzam',38),(782,'FUENTE','IEEE',35),(783,'KEYWORD','containers',44),(784,'NOT_SUPORT','778',38),(785,'PUBLISHER','IEEE Transactions on Network and Service Management',39),(786,'KEYWORD','access control',37),(787,'FUENTE','IEEE',50),(788,'KEYWORD','5G mobile communication;data analysis;Internet;lea',43),(789,'NOT_SUPORT','43',46),(790,'KEYWORD','Market research',50),(791,'AUTOR','Romanovsky, Alexander',35),(792,'NOT_SUPORT','6',43),(793,'AUTOR','Huang, Chengqiang',43),(794,'KEYWORD','energy efficiency',44),(795,'KEYWORD','cloud computing',42),(796,'FUENTE','IEEE',39),(797,'AUTOR','Buyya, Rajkumar',44),(798,'AUTOR','Lin, Hsin Peng',48),(799,'KEYWORD','data management.',45),(800,'FUENTE','IEEE',46),(801,'FUENTE','IEEE',47),(802,'DOI','10.1109/tccn.2020.2966615',43),(803,'AUTOR','Kampusch, Stefan',45),(804,'NOT_SUPORT','65',45),(805,'KEYWORD','Data mining',50),(806,'FUENTE','IEEE',43),(807,'PUBLISHER','IEEE Transactions on Visualization and Computer Graphics',41),(808,'KEYWORD','tools',37),(809,'AUTOR','Min, Geyong',43),(810,'AUTOR','Buyya, Rajkumar',46),(811,'KEYWORD','Cluster',50),(812,'PUBLISHER','IEEE Transactions on Parallel and Distributed Systems',35),(813,'KEYWORD','edge computing',48),(814,'NOT_SUPORT','2',36),(815,'AUTOR','Lin, Changting',35),(816,'NOT_SUPORT','1',44),(817,'KEYWORD','fog computing',40),(818,'NOT_SUPORT','695',42),(819,'KEYWORD','evolutionary memetic algorithm',40),(820,'KEYWORD','cloud computing',47),(821,'KEYWORD','vehicular clustering',38),(822,'PUBLISHER','IEEE Transactions on Cloud Computing',50),(823,'KEYWORD','services',39),(824,'KEYWORD','kubernetes',36),(825,'AUTOR','Shen, Mengqing',47),(826,'DOI','10.1109/TSUSC.2018.2808493',44),(827,'KEYWORD','Microservices',49),(828,'KEYWORD','on-demand fog placement',38),(829,'KEYWORD','Container',50),(830,'KEYWORD','docker',39),(831,'DOI','10.1109/TIM.2015.2490858',45),(832,'DOI','10.1109/TLA.2018.8789551',49),(833,'DOI','10.1109/TBC.2019.2901392',36),(834,'KEYWORD','container',37),(835,'AUTOR','Dastjerdi, Amir Vahid',46),(836,'NOT_SUPORT','1760',41),(837,'AUTOR','Chou, Chun Ting',48),(838,'KEYWORD','industry',49),(839,'AUTOR','Fajjari, Ilhem',36),(840,'NOT_SUPORT','17',40),(841,'PUBLISHER','IEEE Transactions on Parallel and Distributed Systems',47),(842,'NOT_SUPORT','66',44),(843,'NOT_SUPORT','561',43),(844,'KEYWORD','docker',37),(845,'KEYWORD','microservices',46),(846,'KEYWORD','Systematic literature review',49),(847,'NOT_SUPORT','548',43),(848,'FUENTE','IEEE',45),(849,'KEYWORD','mitigation',42),(850,'DOI','10.1109/TNSM.2018.2889009',37),(851,'KEYWORD','Biomedical measurement',45),(852,'KEYWORD','docker',40),(853,'AUTOR','Astudillo, Hernan',49),(854,'NOT_SUPORT','40',46),(855,'AUTOR','Korsten, Andreas',37),(856,'PUBLISHER','IEEE Transactions on Network and Service Management',48),(857,'KEYWORD','Network functions virtualization',48),(858,'PUBLISHER','IEEE Transactions on Parallel and Distributed Systems',42),(859,'AUTOR','Veitch, Paul',36),(860,'AUTOR','Huang, Jian',41),(861,'KEYWORD','Docker',38),(862,'KEYWORD','formal methods',37),(863,'KEYWORD','visualization systems',41),(864,'AUTOR','Marquez, Gaston',49),(865,'KEYWORD','taxonomy',49),(866,'AUTOR','Ranjan, Rajiv',35),(867,'KEYWORD','Cloud computing',50),(868,'NOT_SUPORT','433',36),(869,'KEYWORD','DDoS attack',42),(870,'AUTOR','Zou, Deqing',42),(871,'AUTOR','Sami, Hani',38),(872,'AUTOR','Bu, Xiaoxuan',47),(873,'AUTOR','Smet, Piet',39),(874,'NOT_SUPORT','425',36),(875,'KEYWORD','Scientific visualization',41),(876,'PUBLISHER','IEEE/ACM Transactions on Networking',38),(877,'DOI','10.1109/TPDS.2019.2942591',42),(878,'NOT_SUPORT','129',35),(879,'AUTOR','Ji, Shouling',35),(880,'AUTOR','Lin, Tao',35),(881,'AUTOR','Roullet, Laurent',36),(882,'KEYWORD','Internet of Things',48),(883,'PUBLISHER','IEEE Transactions on Cognitive Communications and Networking',43),(884,'AUTOR','Wu, Yulei',43),(885,'KEYWORD','IoT',40),(886,'KEYWORD','placement algorithm',39),(887,'FUENTE','IEEE',48),(888,'KEYWORD','Kubeadm',40),(889,'NOT_SUPORT','1026',40),(890,'AUTOR','Yuan, Bin',42),(891,'AUTOR','Hota, Alok',41),(892,'DOI','10.1109/TCC.2017.2702586',50),(893,'FUENTE','IEEE',40),(894,'KEYWORD','cloud computing',41),(895,'PUBLISHER','IEEE Transactions on Sustainable Computing',44),(896,'AUTOR','Beaulieu, Laurent',36),(897,'PUBLISHER','IEEE Transactions on Broadcasting',36),(898,'AUTOR','Chuang, Ching Chih',48),(899,'NOT_SUPORT','28',38),(900,'AUTOR','Zuo, Yuan',43),(901,'NOT_SUPORT','2',40),(902,'KEYWORD','Academy',49),(903,'PUBLISHER','Information and Software Technology',103),(904,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0306437919304995',107),(905,'AUTOR','Talhi, Chamseddine',121),(906,'KEYWORD','Configuration',70),(907,'AUTOR','Aldwyan, Yasser',83),(908,'NOT_SUPORT','133',162),(909,'KEYWORD','Containers',131),(910,'KEYWORD','Service Oriented Systems Engineering',79),(911,'KEYWORD','IoT applications',143),(912,'NOT_SUPORT','1095',83),(913,'KEYWORD','System architecture',56),(914,'KEYWORD','Ad-hoc change',107),(915,'NOT_SUPORT','148',76),(916,'KEYWORD','Distributed computing',131),(917,'DOI','10.1016/j.jss.2018.07.077',117),(918,'KEYWORD','target platform',129),(919,'KEYWORD','Multinational power trading deduction',127),(920,'KEYWORD','WSDL',164),(921,'KEYWORD','Online Learning',162),(922,'AUTOR','Orlov, Sergey',130),(923,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2095809917307130',149),(924,'AUTOR','Wang, James Z.',59),(925,'DOI','10.1016/j.procs.2016.09.087',79),(926,'FUENTE','SCIENCEDIRECT',139),(927,'NOT_SUPORT','46',69),(928,'AUTOR','Omicini, Andrea',94),(929,'KEYWORD','Architecture design decisions',132),(930,'KEYWORD','Real-digital synchronization',111),(931,'AUTOR','Savaglio, Claudio',113),(932,'KEYWORD','Smart farm applications',65),(933,'NOT_SUPORT','155',126),(934,'DOI','10.1016/j.knosys.2018.03.006',108),(935,'DOI','10.1016/j.procs.2019.01.029',76),(936,'AUTOR','Iqbal, Muhammad Zohaib',152),(937,'NOT_SUPORT','106564',143),(938,'AUTOR','Nacer, Hassina',92),(939,'AUTOR','Zhou, Zi Meng',56),(940,'AUTOR','Bumblauskas, Daniel',115),(941,'PUBLISHER','IFAC-PapersOnLine',125),(942,'AUTOR','Woodhead, Roy',69),(943,'AUTOR','Rodrigues, Joel J.P.C.',143),(944,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X17306593',133),(945,'NOT_SUPORT','151',55),(946,'KEYWORD','Optimization',156),(947,'AUTOR','Russo, Daniel',134),(948,'KEYWORD','Internet of Things',105),(949,'KEYWORD','Personal Health Record (PHR)',163),(950,'KEYWORD','Cloud computing',136),(951,'NOT_SUPORT','86',99),(952,'KEYWORD','IoT',113),(953,'KEYWORD','Industrial Internet of Things',143),(954,'DOI','10.1016/j.compeleceng.2020.106714',99),(955,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121218302139',159),(956,'KEYWORD','Middleware',131),(957,'DOI','10.1016/j.procs.2017.08.257',129),(958,'FUENTE','SCIENCEDIRECT',92),(959,'AUTOR','Loscrì, Valeria',105),(960,'KEYWORD','Digital transformation',69),(961,'AUTOR','Hindle, Abram',117),(962,'KEYWORD','Systematic Mapping Study',160),(963,'AUTOR','Tamburri, Damian Andrew',159),(964,'KEYWORD','Enterprise integration patterns',91),(965,'KEYWORD','Challenges',86),(966,'FUENTE','SCIENCEDIRECT',56),(967,'NOT_SUPORT','164',132),(968,'KEYWORD','Quality attributes',157),(969,'AUTOR','Melo, Fabián',70),(970,'NOT_SUPORT','229',128),(971,'AUTOR','Casallas, Rubby',70),(972,'KEYWORD','reactive systems',147),(973,'NOT_SUPORT','115',116),(974,'NOT_SUPORT','88',119),(975,'AUTOR','Estebsari, Abouzar',154),(976,'KEYWORD','Tokenization',139),(977,'AUTOR','Gasior, Ondrej',75),(978,'KEYWORD','Performance evaluation',87),(979,'KEYWORD','Blockchain',158),(980,'DOI','10.1016/j.procir.2019.03.152',148),(981,'KEYWORD','Blockchain',115),(982,'FUENTE','SCIENCEDIRECT',102),(983,'NOT_SUPORT','11',78),(984,'NOT_SUPORT','77',157),(985,'KEYWORD','governance',62),(986,'KEYWORD','Data management',59),(987,'KEYWORD','Prefix transposition',104),(988,'KEYWORD','Computational offloading',65),(989,'KEYWORD','Cloud-environment',62),(990,'PUBLISHER','Computer Networks',145),(991,'KEYWORD','System Integration',54),(992,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050919309342',114),(993,'NOT_SUPORT','436',152),(994,'AUTOR','Lin, Peng',151),(995,'KEYWORD','Virtualization',131),(996,'NOT_SUPORT','Knowledge-Based and Intelligent Information &amp; Engineering Systems: Proceedings of the 23rd International Conference KES2019',62),(997,'NOT_SUPORT','148',84),(998,'AUTOR','Witti, Hamad',62),(999,'FUENTE','SCIENCEDIRECT',149),(1000,'AUTOR','Klotz, Eberhard',149),(1001,'AUTOR','Cherradi, G.',147),(1002,'NOT_SUPORT','9th IFAC Conference on Manufacturing Modelling, Management and Control MIM 2019',161),(1003,'NOT_SUPORT','106714',99),(1004,'KEYWORD','Integrated business planning',161),(1005,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167404817301153',92),(1006,'AUTOR','Wilcock, Lawrence',66),(1007,'PUBLISHER','Procedia Computer Science',129),(1008,'AUTOR','Huang, George Q.',151),(1009,'FUENTE','SCIENCEDIRECT',95),(1010,'NOT_SUPORT','215',159),(1011,'KEYWORD','IoT',150),(1012,'AUTOR','Stopka, Ondrej',109),(1013,'AUTOR','Heradio, Ruben',71),(1014,'FUENTE','SCIENCEDIRECT',158),(1015,'FUENTE','SCIENCEDIRECT',105),(1016,'AUTOR','Fakhri, Myriam',62),(1017,'KEYWORD','Identity',53),(1018,'AUTOR','Kardas, Geylani',160),(1019,'KEYWORD','Enterprise Integration Pattern',97),(1020,'AUTOR','da Costa, Cristiano André',89),(1021,'KEYWORD','Heterogeneous system integration',151),(1022,'NOT_SUPORT','2',127),(1023,'AUTOR','Huf, Alexis',135),(1024,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2212827119303737',53),(1025,'FUENTE','SCIENCEDIRECT',138),(1026,'KEYWORD','Cloud computing',75),(1027,'AUTOR','Gesmier, Gregoire',57),(1028,'NOT_SUPORT','72',56),(1029,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0920548916302227',70),(1030,'AUTOR','Mohamed, Mustafa Abshir',160),(1031,'AUTOR','Hoffmann Souza, Marcos Leandro',89),(1032,'DOI','10.1016/j.eswa.2017.07.001',118),(1033,'DOI','10.1016/j.jlamp.2020.100531',94),(1034,'NOT_SUPORT','110657',52),(1035,'FUENTE','SCIENCEDIRECT',107),(1036,'FUENTE','SCIENCEDIRECT',93),(1037,'KEYWORD','Quantum cryptography',99),(1038,'NOT_SUPORT','182',125),(1039,'NOT_SUPORT','168',52),(1040,'KEYWORD','Cyber-Physical Production System',53),(1041,'FUENTE','SCIENCEDIRECT',154),(1042,'KEYWORD','Survey',67),(1043,'AUTOR','Klein, Peter',80),(1044,'DOI','10.1016/j.is.2017.03.003',91),(1045,'DOI','10.1016/j.future.2016.12.007',128),(1046,'AUTOR','Galan, Daniel',71),(1047,'KEYWORD','Docker',117),(1048,'KEYWORD','Blockchain',136),(1049,'KEYWORD','Software performance engineering',103),(1050,'KEYWORD','Human-computer interaction (HCI)',59),(1051,'KEYWORD','Digital innovation',69),(1052,'AUTOR','Stan, Sergiu Dan',120),(1053,'NOT_SUPORT','81',53),(1054,'NOT_SUPORT','11',111),(1055,'KEYWORD','Energy efficiency',55),(1056,'FUENTE','SCIENCEDIRECT',116),(1057,'AUTOR','Patti, Edoardo',154),(1058,'PUBLISHER','Future Generation Computer Systems',119),(1059,'PUBLISHER','Procedia Computer Science',121),(1060,'NOT_SUPORT','174',74),(1061,'DOI','10.1016/j.jbi.2019.103140',163),(1062,'AUTOR','Aslanpour, Mohammad Sadegh',136),(1063,'DOI','10.1016/j.iot.2020.100177',65),(1064,'FUENTE','SCIENCEDIRECT',54),(1065,'AUTOR','Starly, Binil',74),(1066,'AUTOR','Soler, Enrique',119),(1067,'NOT_SUPORT','355',109),(1068,'AUTOR','Mandar, Meriem',102),(1069,'AUTOR','Della Corte, Raffaele',81),(1070,'KEYWORD','High availability',83),(1071,'AUTOR','Senington, Richard',54),(1072,'PUBLISHER','Procedia Manufacturing',111),(1073,'KEYWORD','Distributed deployment',83),(1074,'NOT_SUPORT','86',118),(1075,'KEYWORD','Architecture',67),(1076,'NOT_SUPORT','7th CIRP Conference on Assembly Technologies and Systems (CATS 2018)',164),(1077,'NOT_SUPORT','101447',107),(1078,'KEYWORD','Cloud paradigms and technologies',136),(1079,'AUTOR','Ramezani, Javaneh',100),(1080,'KEYWORD','Architectural patterns',101),(1081,'FUENTE','SCIENCEDIRECT',113),(1082,'KEYWORD','Research Challenges',142),(1083,'KEYWORD','e-governance',93),(1084,'NOT_SUPORT','109',134),(1085,'AUTOR','Khomh, Foutse',55),(1086,'NOT_SUPORT','3',149),(1087,'NOT_SUPORT','58',79),(1088,'NOT_SUPORT','144',92),(1089,'PUBLISHER','Journal of Systems and Software',122),(1090,'NOT_SUPORT','150',146),(1091,'AUTOR','Shadroo, Shabnam',145),(1092,'KEYWORD','CPPS',53),(1093,'AUTOR','Soldani, Jacopo',159),(1094,'NOT_SUPORT','1',133),(1095,'NOT_SUPORT','178',130),(1096,'KEYWORD','Blockchain',67),(1097,'AUTOR','Dugan, Brett',115),(1098,'NOT_SUPORT','52',161),(1099,'NOT_SUPORT','95',103),(1100,'KEYWORD','Countermeasure',90),(1101,'PUBLISHER','Internet of Things',136),(1102,'AUTOR','Jain, Udit',136),(1103,'PUBLISHER','Journal of Computer Languages',160),(1104,'NOT_SUPORT','Complex Adaptive Systems Los Angeles, CA November 2-4, 2016',64),(1105,'AUTOR','Nahri, Mohamed',102),(1106,'PUBLISHER','Electronic Notes in Theoretical Computer Science',87),(1107,'AUTOR','Weston, Matthew',138),(1108,'NOT_SUPORT','81',133),(1109,'KEYWORD','Service patterns',97),(1110,'KEYWORD','Service-Oriented Architecture',156),(1111,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0306437920300028',68),(1112,'KEYWORD','Multi-Agent Systems',76),(1113,'KEYWORD','Microservices',84),(1114,'NOT_SUPORT','680',93),(1115,'FUENTE','SCIENCEDIRECT',124),(1116,'NOT_SUPORT','52nd CIRP Conference on Manufacturing Systems (CMS), Ljubljana, Slovenia, June 12-14, 2019',53),(1117,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121219301189',126),(1118,'NOT_SUPORT','10',59),(1119,'AUTOR','Solinas, Christopher',117),(1120,'NOT_SUPORT','170',158),(1121,'DOI','10.1016/j.future.2017.10.011',133),(1122,'KEYWORD','micro-service',62),(1123,'NOT_SUPORT','102417',137),(1124,'AUTOR','Chen, Chien Ming',99),(1125,'FUENTE','SCIENCEDIRECT',98),(1126,'DOI','10.1016/j.iot.2019.100118',136),(1127,'PUBLISHER','Internet of Things',80),(1128,'AUTOR','Chianese, Angelo',79),(1129,'AUTOR','Zhao, Zhiming',142),(1130,'FUENTE','SCIENCEDIRECT',145),(1131,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2405896319315897',161),(1132,'KEYWORD','Trustworthiness',85),(1133,'AUTOR','Cherradi, Ghyzlane',77),(1134,'KEYWORD','Cloud orchestration',57),(1135,'KEYWORD','architectural patterns',130),(1136,'KEYWORD','Digital thread',58),(1137,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X19312282',113),(1138,'PUBLISHER','Future Generation Computer Systems',57),(1139,'NOT_SUPORT','101447',107),(1140,'NOT_SUPORT','146',159),(1141,'KEYWORD','Survey',123),(1142,'DOI','10.1016/j.procs.2019.08.020',114),(1143,'KEYWORD','Data-driven processes',107),(1144,'NOT_SUPORT','158',97),(1145,'NOT_SUPORT','664',54),(1146,'AUTOR','Ferme, Vincenzo',122),(1147,'FUENTE','SCIENCEDIRECT',81),(1148,'KEYWORD','scalability',144),(1149,'PUBLISHER','Computer Standards and Interfaces',70),(1150,'KEYWORD','Authorization',76),(1151,'AUTOR','Benítez-Martínez, Francisco Luis',139),(1152,'AUTOR','Petrolo, Riccardo',105),(1153,'KEYWORD','Microservice',121),(1154,'KEYWORD','Industry 4.0',89),(1155,'NOT_SUPORT','1053',113),(1156,'KEYWORD','Student learning',63),(1157,'NOT_SUPORT','100972',160),(1158,'NOT_SUPORT','80',128),(1159,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0306437915300181',157),(1160,'AUTOR','van Hoorn, André',103),(1161,'PUBLISHER','Journal of Manufacturing Systems',89),(1162,'NOT_SUPORT','67',91),(1163,'PUBLISHER','Procedia Computer Science',86),(1164,'AUTOR','Talia, Domenico',78),(1165,'KEYWORD','Edge computing',133),(1166,'KEYWORD','Lightweight formalisation',61),(1167,'KEYWORD','road environment-type detection',147),(1168,'AUTOR','Zuo, Xianyu',84),(1169,'PUBLISHER','Journal of Systems and Software',159),(1170,'FUENTE','SCIENCEDIRECT',96),(1171,'AUTOR','Casale, Giuliano',142),(1172,'PUBLISHER','Journal of Systems and Software',117),(1173,'NOT_SUPORT','93',69),(1174,'AUTOR','Kaila, Sukhwinder Singh',136),(1175,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0378720618304361',140),(1176,'KEYWORD','Resource allocation',123),(1177,'NOT_SUPORT','165',122),(1178,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0965997820304452',84),(1179,'AUTOR','Xu, Zhengqing',127),(1180,'NOT_SUPORT','685',93),(1181,'AUTOR','Riley, George F.',137),(1182,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050919313742',62),(1183,'NOT_SUPORT','99',72),(1184,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X19304376',95),(1185,'AUTOR','van der Werf}, Jan Martijn',101),(1186,'KEYWORD','Time series',104),(1187,'KEYWORD','Distribution task',109),(1188,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2542660520300172',65),(1189,'AUTOR','Essafi, Mehrez',62),(1190,'KEYWORD','Robust optimization',150),(1191,'AUTOR','Pires, Paulo F.',110),(1192,'FUENTE','SCIENCEDIRECT',114),(1193,'PUBLISHER','Computers and Electronics in Agriculture',158),(1194,'AUTOR','Franke, Jörg',148),(1195,'AUTOR','Delicato, Flávia C.',110),(1196,'AUTOR','Hassan, Hesham A.',124),(1197,'NOT_SUPORT','51st CIRP Conference on Manufacturing Systems',54),(1198,'KEYWORD','Adaptive middleware',61),(1199,'AUTOR','Tuli, Shikhar',136),(1200,'KEYWORD','Internet of Things',113),(1201,'KEYWORD','Process mining.',61),(1202,'DOI','10.1016/j.gloei.2020.01.010',127),(1203,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2590118420300320',160),(1204,'KEYWORD','Cloud data centers',126),(1205,'AUTOR','Ramdhany, Rajiv',90),(1206,'KEYWORD','lightweight formal methods',64),(1207,'DOI','10.1016/j.sysarc.2018.05.007',131),(1208,'AUTOR','Garcés, Kelly',70),(1209,'KEYWORD','Smart city applications',65),(1210,'NOT_SUPORT','348',109),(1211,'NOT_SUPORT','374',116),(1212,'AUTOR','Zhu, Hongfeng',99),(1213,'PUBLISHER','Procedia Computer Science',147),(1214,'AUTOR','Varvenne, Joan',66),(1215,'KEYWORD','Architectural styles',101),(1216,'KEYWORD','Service duplication',140),(1217,'KEYWORD','Middleware',94),(1218,'AUTOR','Zhou, Haiming',127),(1219,'DOI','10.1016/j.egypro.2017.03.240',154),(1220,'KEYWORD','IoT',80),(1221,'KEYWORD','Cloud computing',72),(1222,'AUTOR','Bryden, Kenneth M.',116),(1223,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2452414X18300359',98),(1224,'AUTOR','Reyna, Ana',119),(1225,'KEYWORD','PV penetration',154),(1226,'KEYWORD','Software architecture',61),(1227,'AUTOR','Perera, Charith',72),(1228,'NOT_SUPORT','144',164),(1229,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050918309827',162),(1230,'KEYWORD','Java',70),(1231,'PUBLISHER','Information Systems',97),(1232,'AUTOR','Sinnott, Richard O.',83),(1233,'KEYWORD','Mashups',59),(1234,'NOT_SUPORT','2nd International Conference on Cloud Forward: From Distributed to Complete Computing',142),(1235,'PUBLISHER','Journal of Logical and Algebraic Methods in Programming',96),(1236,'KEYWORD','Service contract',80),(1237,'NOT_SUPORT','101',88),(1238,'KEYWORD','Data management',143),(1239,'KEYWORD','Social dispersed computing',131),(1240,'PUBLISHER','Future Generation Computer Systems',128),(1241,'PUBLISHER','Transportation Research Procedia',109),(1242,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050916320944',142),(1243,'KEYWORD','RESTful services',135),(1244,'NOT_SUPORT','261',104),(1245,'DOI','10.1016/j.jss.2018.09.082',159),(1246,'DOI','10.1016/j.ifacol.2019.11.602',161),(1247,'FUENTE','SCIENCEDIRECT',63),(1248,'KEYWORD','Micro-service',127),(1249,'KEYWORD','Business processes',67),(1250,'NOT_SUPORT','102',153),(1251,'FUENTE','SCIENCEDIRECT',70),(1252,'AUTOR','Russo, Barbara',122),(1253,'AUTOR','Knoche, Holger',103),(1254,'KEYWORD','Data exfiltration',90),(1255,'KEYWORD','Tool integration',98),(1256,'KEYWORD','IoT—Fog—Cloud ecosystems',65),(1257,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S235214652030082X',109),(1258,'NOT_SUPORT','1',78),(1259,'PUBLISHER','Journal of Electronic Science and Technology',56),(1260,'AUTOR','Gáspár, P.',147),(1261,'PUBLISHER','Procedia CIRP',54),(1262,'KEYWORD','Multi-agent systems',85),(1263,'NOT_SUPORT','385',116),(1264,'KEYWORD','Microservices operation',159),(1265,'KEYWORD','Kubernetes',121),(1266,'NOT_SUPORT','369',60),(1267,'PUBLISHER','Procedia Computer Science',155),(1268,'AUTOR','Barnard Feeney, Allison',58),(1269,'KEYWORD','Visual analytics',66),(1270,'AUTOR','Deliot, Eric',66),(1271,'FUENTE','SCIENCEDIRECT',117),(1272,'AUTOR','Mann, Arti',115),(1273,'KEYWORD','Container',133),(1274,'NOT_SUPORT','28',95),(1275,'KEYWORD','M2M Learning',162),(1276,'AUTOR','Ullah, Israr',158),(1277,'KEYWORD','Web application',108),(1278,'KEYWORD','pedestrians\' trajectories',102),(1279,'KEYWORD','Sensor network',105),(1280,'AUTOR','Louvel, Maxime',94),(1281,'AUTOR','Berezovskyi, Andrii',98),(1282,'DOI','10.1016/j.future.2019.09.016',113),(1283,'AUTOR','Hang, Lei',158),(1284,'AUTOR','Abdulmyanov, Vladislav',129),(1285,'NOT_SUPORT','65',106),(1286,'AUTOR','Cavalcanti, David J.M.',61),(1287,'KEYWORD','behaviors',64),(1288,'AUTOR','Bahari, Mahadi',68),(1289,'NOT_SUPORT','109',77),(1290,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1571066118300379',87),(1291,'AUTOR','Singh, Karan Vijay',136),(1292,'AUTOR','Fei, Xiang',120),(1293,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050916322323',79),(1294,'FUENTE','SCIENCEDIRECT',84),(1295,'NOT_SUPORT','5th International Young Scientist Conference on Computational Science, YSC 2016, 26-28 October 2016, Krakow, Poland',60),(1296,'FUENTE','SCIENCEDIRECT',155),(1297,'KEYWORD','Quality evaluation',75),(1298,'AUTOR','Sehgal, Bhanu',136),(1299,'KEYWORD','volunteer distributed computing',60),(1300,'AUTOR','Rayside, Derek',138),(1301,'NOT_SUPORT','110557',150),(1302,'NOT_SUPORT','110462',123),(1303,'KEYWORD','Data-centric processes',107),(1304,'KEYWORD','Transportation of dangerous goods',77),(1305,'FUENTE','SCIENCEDIRECT',157),(1306,'NOT_SUPORT','386',62),(1307,'KEYWORD','Software architecture evaluation',110),(1308,'KEYWORD','Cloud applications',136),(1309,'AUTOR','Sivtsov, Alexander',129),(1310,'NOT_SUPORT','110557',150),(1311,'KEYWORD','software architecture',130),(1312,'KEYWORD','residuality',155),(1313,'PUBLISHER','Procedia CIRP',148),(1314,'AUTOR','Elshawi, Radwa',78),(1315,'KEYWORD','Edge',82),(1316,'KEYWORD','Information systems',68),(1317,'PUBLISHER','Journal of Manufacturing Systems',74),(1318,'PUBLISHER','Procedia Computer Science',142),(1319,'KEYWORD','Cyber Physical Systems',111),(1320,'KEYWORD','Persistence',84),(1321,'PUBLISHER','Advanced Engineering Informatics',138),(1322,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S235197892031091X',82),(1323,'NOT_SUPORT','155',114),(1324,'KEYWORD','data collector',77),(1325,'KEYWORD','SOA',68),(1326,'KEYWORD','Performance',75),(1327,'KEYWORD','Internet of Things',67),(1328,'NOT_SUPORT','514',79),(1329,'KEYWORD','complexity',64),(1330,'KEYWORD','Test planning',123),(1331,'NOT_SUPORT','111',154),(1332,'AUTOR','Lago, Patricia',146),(1333,'KEYWORD','Software product line engineering',112),(1334,'DOI','10.1016/j.jnca.2019.06.008',135),(1335,'NOT_SUPORT','127',73),(1336,'AUTOR','Terstyanszky, Gabor',57),(1337,'PUBLISHER','Procedia Computer Science',114),(1338,'AUTOR','Manini, Daniele',87),(1339,'AUTOR','Kliegr, Tomáš',108),(1340,'NOT_SUPORT','Modeling and Simulation of Cloud Computing and Big Data',132),(1341,'AUTOR','Mariani, Stefano',94),(1342,'KEYWORD','integration',129),(1343,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121218302784',152),(1344,'NOT_SUPORT','101962',106),(1345,'FUENTE','SCIENCEDIRECT',75),(1346,'NOT_SUPORT','165',63),(1347,'KEYWORD','Microservices',146),(1348,'KEYWORD','Model-Driven Engineering (MDE)',160),(1349,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877705817301042',130),(1350,'KEYWORD','Cyber-physical system',86),(1351,'NOT_SUPORT','247',72),(1352,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0957417417304700',118),(1353,'AUTOR','Campos, Gláucia M.M.',61),(1354,'KEYWORD','Virtual network functions',137),(1355,'PUBLISHER','Journal of Industrial Information Integration',67),(1356,'NOT_SUPORT','100150',80),(1357,'NOT_SUPORT','102417',137),(1358,'NOT_SUPORT','80',66),(1359,'NOT_SUPORT','302',85),(1360,'NOT_SUPORT','16th IFAC Symposium on Information Control Problems in Manufacturing INCOM 2018',125),(1361,'KEYWORD','Database',63),(1362,'KEYWORD','pedestrians modeling',102),(1363,'NOT_SUPORT','191',132),(1364,'NOT_SUPORT','103',141),(1365,'NOT_SUPORT','171',97),(1366,'NOT_SUPORT','110391',51),(1367,'AUTOR','Kara, Nadjia',104),(1368,'KEYWORD','dynamic behavior',144),(1369,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S235222082030016X',94),(1370,'NOT_SUPORT','459',82),(1371,'FUENTE','SCIENCEDIRECT',74),(1372,'NOT_SUPORT','712',71),(1373,'DOI','10.1016/j.infsof.2020.106370',73),(1374,'KEYWORD','big data analytics',102),(1375,'DOI','10.1016/j.procs.2018.07.037',162),(1376,'DOI','10.1016/j.future.2019.07.032',83),(1377,'PUBLISHER','Procedia Manufacturing',82),(1378,'FUENTE','SCIENCEDIRECT',108),(1379,'KEYWORD','Software architecture',118),(1380,'PUBLISHER','Procedia Engineering',130),(1381,'KEYWORD','Quality attributes',101),(1382,'AUTOR','Lu, Yuqian',153),(1383,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X18313645',72),(1384,'KEYWORD','Service deployment',118),(1385,'AUTOR','Roehrs, Alex',163),(1386,'AUTOR','Hoorn, André van',122),(1387,'KEYWORD','Graph theory',109),(1388,'NOT_SUPORT','101962',106),(1389,'DOI','10.1016/j.jss.2020.110564',122),(1390,'KEYWORD','IIoTS platform',148),(1391,'NOT_SUPORT','170',147),(1392,'AUTOR','Fortino, Giancarlo',113),(1393,'AUTOR','Pietrantuono, Roberto',123),(1394,'AUTOR','Corral, Antonio',59),(1395,'KEYWORD','Analytical Services',79),(1396,'KEYWORD','Prototype generation',75),(1397,'NOT_SUPORT','The 11th International Conference on Ambient Systems, Networks and Technologies (ANT) / The 3rd International Conference on Emerging Data and Industry 4.0 (EDI40) / Affiliated Workshops',102),(1398,'NOT_SUPORT','15',67),(1399,'KEYWORD','Analytical services',128),(1400,'AUTOR','Pons, Enrico',154),(1401,'KEYWORD','Cloud Computing',131),(1402,'FUENTE','SCIENCEDIRECT',130),(1403,'AUTOR','MacCarty, Nordica A.',116),(1404,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050920304476',102),(1405,'NOT_SUPORT','92',105),(1406,'NOT_SUPORT','759',88),(1407,'NOT_SUPORT','44',156),(1408,'AUTOR','Giammarco, Kristin',64),(1409,'NOT_SUPORT','747',88),(1410,'NOT_SUPORT','101',95),(1411,'NOT_SUPORT','RelStat-2016: Proceedings of the 16th International Scientific Conference Reliability and Statistics in Transportation and Communication October 19-22, 2016. Transport and Telecommunication Institute, Riga, Latvia',130),(1412,'DOI','10.1016/j.jss.2020.110576',63),(1413,'AUTOR','Jeřábek, Karel',109),(1414,'AUTOR','Rittmer, Jacy',115),(1415,'KEYWORD','Evidence-based practice',52),(1416,'NOT_SUPORT','146',117),(1417,'KEYWORD','Energy consumption',55),(1418,'KEYWORD','Smart contract',88),(1419,'AUTOR','Guijarro, Julio',66),(1420,'AUTOR','Botti, Vicent',131),(1421,'AUTOR','Schulz, Henning',122),(1422,'KEYWORD','Design decisions',101),(1423,'DOI','10.1016/J.ENG.2017.05.015',149),(1424,'KEYWORD','Systematic literature review',159),(1425,'KEYWORD','Cybermanufacturing',74),(1426,'KEYWORD','Gateway',105),(1427,'NOT_SUPORT','65',97),(1428,'AUTOR','Boulmakoul, A.',147),(1429,'AUTOR','Farah-Stapleton, Monica',64),(1430,'PUBLISHER','Journal of Systems and Software',146),(1431,'KEYWORD','Literature review',123),(1432,'FUENTE','SCIENCEDIRECT',135),(1433,'KEYWORD','Authentication',76),(1434,'KEYWORD','Fog Computing',131),(1435,'AUTOR','Fathian, Mohammad',150),(1436,'NOT_SUPORT','15',133),(1437,'NOT_SUPORT','345',103),(1438,'KEYWORD','Scopus',71),(1439,'AUTOR','Zhang, Yue',82),(1440,'FUENTE','SCIENCEDIRECT',100),(1441,'NOT_SUPORT','103140',163),(1442,'AUTOR','Koussouris, Sotiris',142),(1443,'PUBLISHER','Robotics and Computer-Integrated Manufacturing',153),(1444,'AUTOR','Saevskiy, Anatoliy',60),(1445,'NOT_SUPORT','122',70),(1446,'PUBLISHER','Journal of Systems and Software',55),(1447,'KEYWORD','Extreme scale visual analytics',66),(1448,'KEYWORD','Tertiary study',152),(1449,'KEYWORD','Scale',66),(1450,'AUTOR','Rinderle-Ma, Stefanie',91),(1451,'FUENTE','SCIENCEDIRECT',76),(1452,'DOI','10.1016/j.future.2019.07.030',88),(1453,'KEYWORD','web-service',62),(1454,'KEYWORD','Self-Modelling',162),(1455,'KEYWORD','Internet of things',65),(1456,'AUTOR','Brandenburg, Marcus',161),(1457,'KEYWORD','Digital construction',69),(1458,'KEYWORD','Software Engineering',134),(1459,'FUENTE','SCIENCEDIRECT',78),(1460,'KEYWORD','Case-based reasoning',157),(1461,'KEYWORD','Fogging',65),(1462,'KEYWORD','geo-marketing',129),(1463,'KEYWORD','Security architecture',92),(1464,'AUTOR','Valderas, Pedro',73),(1465,'KEYWORD','Social Networking Services',79),(1466,'NOT_SUPORT','45',82),(1467,'KEYWORD','Visualisation',66),(1468,'KEYWORD','intuitionistic fuzzy set theory',102),(1469,'NOT_SUPORT','1038',113),(1470,'KEYWORD','Sensor network',133),(1471,'KEYWORD','Real time',131),(1472,'FUENTE','SCIENCEDIRECT',68),(1473,'NOT_SUPORT','173',119),(1474,'AUTOR','Ndoye, EL Hadji Malick',143),(1475,'KEYWORD','Prediction API',108),(1476,'AUTOR','Barbanera, Franco',141),(1477,'FUENTE','SCIENCEDIRECT',161),(1478,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S027861252030087X',74),(1479,'DOI','10.1016/j.advengsoft.2017.10.004',116),(1480,'DOI','10.1016/j.jss.2020.110557',150),(1481,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0926580517309512',69),(1482,'AUTOR','Auguston, Mikhail',64),(1483,'AUTOR','Gill, Sukhpal Singh',136),(1484,'AUTOR','Stankovski, V.',88),(1485,'FUENTE','SCIENCEDIRECT',53),(1486,'DOI','10.1016/j.is.2020.101491',68),(1487,'KEYWORD','risk indicators',102),(1488,'NOT_SUPORT','139',145),(1489,'AUTOR','Xu, Minxian',136),(1490,'AUTOR','Drobintsev, Pavel D.',88),(1491,'KEYWORD','Systematic survey',145),(1492,'KEYWORD','Data-driven',82),(1493,'AUTOR','Menasché, Daniel',122),(1494,'NOT_SUPORT','133',89),(1495,'NOT_SUPORT','62',66),(1496,'DOI','10.1016/j.proeng.2017.01.104',130),(1497,'AUTOR','Haas, Carl T.',138),(1498,'KEYWORD','QoS',124),(1499,'KEYWORD','Json Web Token',76),(1500,'NOT_SUPORT','54',90),(1501,'KEYWORD','distributed computing',60),(1502,'FUENTE','SCIENCEDIRECT',128),(1503,'KEYWORD','Smart mobility',147),(1504,'NOT_SUPORT','34',59),(1505,'KEYWORD','Digital currency',127),(1506,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0736584519303400',106),(1507,'NOT_SUPORT','106370',73),(1508,'NOT_SUPORT','150',108),(1509,'AUTOR','Pascal, Romaric',66),(1510,'NOT_SUPORT','169',75),(1511,'AUTOR','Aissani, Djamil',92),(1512,'KEYWORD','Business Process',156),(1513,'KEYWORD','Services',142),(1514,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1674862X19300060',56),(1515,'KEYWORD','Object-aware processes',107),(1516,'KEYWORD','Smart Factory',111),(1517,'NOT_SUPORT','102008',115),(1518,'KEYWORD','Microservices',126),(1519,'AUTOR','Avritzer, Alberto',122),(1520,'FUENTE','SCIENCEDIRECT',64),(1521,'AUTOR','Khan, Muhammad Uzair',152),(1522,'NOT_SUPORT','93',132),(1523,'KEYWORD','Governance',139),(1524,'AUTOR','Jayaraman, Prem Prakash',72),(1525,'AUTOR','Vaquero, Luis M.',66),(1526,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X19304224',83),(1527,'KEYWORD','Application topology',118),(1528,'KEYWORD','Complex event processing',131),(1529,'AUTOR','Rovere, Diego',111),(1530,'DOI','10.1016/j.procs.2019.11.257',86),(1531,'NOT_SUPORT','143',135),(1532,'DOI','10.1016/j.bdr.2018.04.004',78),(1533,'AUTOR','McLean, Carson',117),(1534,'KEYWORD','fuzzy set theory',147),(1535,'KEYWORD','Kerberos',92),(1536,'AUTOR','Ould-Slimanec, Hakima',121),(1537,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050916327120',60),(1538,'KEYWORD','Context Awareness',114),(1539,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050920305585',155),(1540,'KEYWORD','fault tolerance',144),(1541,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2452414X19300202',67),(1542,'KEYWORD','Pattern detection',104),(1543,'KEYWORD','Session types',141),(1544,'AUTOR','Abidi, Sarra',62),(1545,'FUENTE','SCIENCEDIRECT',91),(1546,'AUTOR','Stankovski, Vlado',142),(1547,'DOI','10.1016/j.jmsy.2020.05.017',74),(1548,'NOT_SUPORT','89',135),(1549,'NOT_SUPORT','The 7th International Conference on Emerging Ubiquitous Systems and Pervasive Networks (EUSPN 2016)/The 6th International Conference on Current and Future Trends of Information and Communication Technologies in Healthcare (ICTH-2016)/Affiliated Workshops',79),(1550,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0950584920301397',73),(1551,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050917311420',77),(1552,'NOT_SUPORT','789',154),(1553,'PUBLISHER','International Journal of Information Management',115),(1554,'AUTOR','Siqueira, Frank',135),(1555,'PUBLISHER','Energy Procedia',154),(1556,'AUTOR','Keshavarzian, Alireza',95),(1557,'NOT_SUPORT','110462',123),(1558,'NOT_SUPORT','101',60),(1559,'AUTOR','Steinau, Sebastian',107),(1560,'KEYWORD','GIS',154),(1561,'KEYWORD','Distributed digital thread',74),(1562,'NOT_SUPORT','110714',101),(1563,'AUTOR','Thramboulidis, Kleanthis',125),(1564,'NOT_SUPORT','8',136),(1565,'KEYWORD','multicriteria decision analysis',130),(1566,'NOT_SUPORT','107',112),(1567,'NOT_SUPORT','659',54),(1568,'KEYWORD','Middleware',76),(1569,'KEYWORD','Agriculture data integrity',158),(1570,'KEYWORD','Cloud integration',91),(1571,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0278612520300807',89),(1572,'AUTOR','Joshi, Harshvardhan P.',137),(1573,'FUENTE','SCIENCEDIRECT',121),(1574,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050919309755',121),(1575,'FUENTE','SCIENCEDIRECT',131),(1576,'FUENTE','SCIENCEDIRECT',151),(1577,'FUENTE','SCIENCEDIRECT',58),(1578,'DOI','10.1016/j.procs.2016.11.043',60),(1579,'PUBLISHER','Journal of Biomedical Informatics',163),(1580,'AUTOR','Fomichyov, Nikita',129),(1581,'AUTOR','Kovacs, Jozsef',57),(1582,'AUTOR','Salah, Khaled',72),(1583,'AUTOR','Arndt, Tobias',82),(1584,'AUTOR','Ivanović, Mirjana',113),(1585,'KEYWORD','External attack vector',90),(1586,'KEYWORD','Quality analytics',82),(1587,'AUTOR','Pérez, Jorge',52),(1588,'KEYWORD','Service stack',97),(1589,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2214579617303957',78),(1590,'PUBLISHER','Robotics and Computer-Integrated Manufacturing',106),(1591,'AUTOR','Sakr, Sherif',78),(1592,'NOT_SUPORT','92',163),(1593,'PUBLISHER','Journal of Network and Computer Applications',137),(1594,'FUENTE','SCIENCEDIRECT',146),(1595,'NOT_SUPORT','170',55),(1596,'AUTOR','Huang, Jijie',127),(1597,'DOI','10.1016/j.is.2016.12.005',97),(1598,'PUBLISHER','Information and Management',140),(1599,'KEYWORD','Association rules',108),(1600,'KEYWORD','function point analysis',64),(1601,'NOT_SUPORT','The 16th International Conference on Mobile Systems and Pervasive Computing (MobiSPC 2019),The 14th International Conference on Future Networks and Communications (FNC-2019),The 9th International Conference on Sustainable Energy Information Technology',114),(1602,'DOI','10.1016/j.aei.2018.08.010',151),(1603,'KEYWORD','Cyber-physical system',149),(1604,'NOT_SUPORT','233',130),(1605,'NOT_SUPORT','169',101),(1606,'AUTOR','Chesta, Cristina',142),(1607,'AUTOR','Pataki, Balazs',54),(1608,'AUTOR','Azurat, Ade',112),(1609,'FUENTE','SCIENCEDIRECT',112),(1610,'KEYWORD','Cloud taxonomy',124),(1611,'NOT_SUPORT','100511',96),(1612,'KEYWORD','Cloudification',93),(1613,'KEYWORD','event traces',64),(1614,'KEYWORD','Circle of trust',92),(1615,'KEYWORD','Systematic review',89),(1616,'AUTOR','Abtahizadeh, S. Amirhossein',55),(1617,'KEYWORD','Industry 4.0',153),(1618,'FUENTE','SCIENCEDIRECT',152),(1619,'AUTOR','Merson, Paulo',110),(1620,'AUTOR','Lin, Chunzhe',127),(1621,'NOT_SUPORT','110',70),(1622,'KEYWORD','Authentication',92),(1623,'AUTOR','Wahab, Omar Abdel',104),(1624,'NOT_SUPORT','105251',158),(1625,'DOI','10.1016/j.future.2018.05.046',119),(1626,'KEYWORD','Data acquisition',59),(1627,'PUBLISHER','Future Generation Computer Systems',133),(1628,'AUTOR','Avritzer, Alberto',103),(1629,'AUTOR','Xu, Gangyan',106),(1630,'KEYWORD','Performance optimization',55),(1631,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121220301217',52),(1632,'KEYWORD','Microservices',132),(1633,'NOT_SUPORT','14',95),(1634,'DOI','10.1016/j.entcs.2018.03.033',87),(1635,'KEYWORD','Internet of Things',143),(1636,'PUBLISHER','Procedia Computer Science',64),(1637,'PUBLISHER','Future Generation Computer Systems',66),(1638,'NOT_SUPORT','931',111),(1639,'NOT_SUPORT','The 11th International Conference on Ambient Systems, Networks and Technologies (ANT) / The 3rd International Conference on Emerging Data and Industry 4.0 (EDI40) / Affiliated Workshops',147),(1640,'NOT_SUPORT','62',118),(1641,'KEYWORD','Industrial case study',70),(1642,'KEYWORD','Object-oriented design',157),(1643,'AUTOR','Kiss, Tamas',57),(1644,'AUTOR','Santos, Eddie Antonio',117),(1645,'AUTOR','Lotz, Marco',66),(1646,'NOT_SUPORT','180',110),(1647,'NOT_SUPORT','2620',161),(1648,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050919318150',112),(1649,'AUTOR','Andreev, Sergey',51),(1650,'KEYWORD','Survey',94),(1651,'KEYWORD','Microservices',131),(1652,'NOT_SUPORT','538',81),(1653,'KEYWORD','Oracle forms',70),(1654,'KEYWORD','resilience',155),(1655,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2352220819301567',96),(1656,'DOI','10.1016/j.jmsy.2020.05.016',89),(1657,'NOT_SUPORT','509',79),(1658,'NOT_SUPORT','343',151),(1659,'PUBLISHER','Journal of Systems and Software',75),(1660,'FUENTE','SCIENCEDIRECT',69),(1661,'KEYWORD','Container technologies',83),(1662,'KEYWORD','Network function virtualization',137),(1663,'KEYWORD','Time series analysis',104),(1664,'AUTOR','Bajec, M.',88),(1665,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0950705118301242',108),(1666,'KEYWORD','Quality attributes',70),(1667,'AUTOR','Bassiliades, Nick',85),(1668,'KEYWORD','Fog',88),(1669,'KEYWORD','Internet of Things',133),(1670,'FUENTE','SCIENCEDIRECT',164),(1671,'FUENTE','SCIENCEDIRECT',99),(1672,'KEYWORD','Security',76),(1673,'AUTOR','Rufino, Vilc',122),(1674,'KEYWORD','Quantum reflection',99),(1675,'AUTOR','Willnecker, Felix',132),(1676,'AUTOR','Liu, Hui',82),(1677,'KEYWORD','Message Routing',97),(1678,'FUENTE','SCIENCEDIRECT',148),(1679,'DOI','10.1016/j.jpdc.2020.03.019',124),(1680,'KEYWORD','Learning factory',82),(1681,'AUTOR','Iribarne, Luis',59),(1682,'AUTOR','Pugliese, Rosario',96),(1683,'DOI','10.1016/j.procir.2018.01.030',164),(1684,'NOT_SUPORT','92',153),(1685,'KEYWORD','E-commerce retail',106),(1686,'KEYWORD','Industry 4.0',149),(1687,'AUTOR','Ghani, Imran',68),(1688,'KEYWORD','Service-oriented architecture',157),(1689,'AUTOR','Ciatto, Giovanni',94),(1690,'KEYWORD','Load balancing',76),(1691,'NOT_SUPORT','164',150),(1692,'PUBLISHER','Information Systems',68),(1693,'KEYWORD','Fingerprint',53),(1694,'NOT_SUPORT','47',66),(1695,'AUTOR','Truong, Hong-Linh',80),(1696,'NOT_SUPORT','937',57),(1697,'KEYWORD','Internet of Things',72),(1698,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0925231220307335',139),(1699,'AUTOR','Golzarpoor, Behrooz',138),(1700,'AUTOR','Llantos, Orven E.',93),(1701,'KEYWORD','Data mining',108),(1702,'AUTOR','Alge, Marino',111),(1703,'KEYWORD','Advanced planning',161),(1704,'DOI','10.1016/j.future.2017.08.013',66),(1705,'AUTOR','Torres, Victoria',73),(1706,'KEYWORD','Model-driven engineering (MDE)',70),(1707,'PUBLISHER','Technological Forecasting and Social Change',100),(1708,'NOT_SUPORT','115',108),(1709,'KEYWORD','Smart oracle',88),(1710,'AUTOR','Stephenson, Paul',69),(1711,'KEYWORD','Operations Research',109),(1712,'KEYWORD','Containers',126),(1713,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0736584518302801',153),(1714,'NOT_SUPORT','14',117),(1715,'KEYWORD','Antifragility',134),(1716,'PUBLISHER','Information Systems',107),(1717,'DOI','10.1016/j.neucom.2020.03.116',139),(1718,'KEYWORD','Container',105),(1719,'NOT_SUPORT','102878',84),(1720,'AUTOR','Basu, Amiya',140),(1721,'AUTOR','Vojíř, Stanislav',108),(1722,'KEYWORD','Service-oriented computing',118),(1723,'DOI','https://doi.org/10.1016/j.jss.2020.110714',101),(1724,'AUTOR','Youssfi, Mohamed',76),(1725,'AUTOR','Tiezzi, Francesco',96),(1726,'AUTOR','Tanković, Nikola',118),(1727,'KEYWORD','Secondary study',152),(1728,'AUTOR','Mikkonen, T.',51),(1729,'PUBLISHER','Automation in Construction',69),(1730,'KEYWORD','Database complexity',63),(1731,'NOT_SUPORT','337',87),(1732,'KEYWORD','Social networking services',128),(1733,'KEYWORD','Microservice architecture',85),(1734,'KEYWORD','Multi-agent system',106),(1735,'KEYWORD','Data Stream Analysis',111),(1736,'AUTOR','Lamersdorf, Winfried',114),(1737,'KEYWORD','Cloud analytics',82),(1738,'FUENTE','SCIENCEDIRECT',82),(1739,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X17329205',119),(1740,'FUENTE','SCIENCEDIRECT',85),(1741,'KEYWORD','Smart Grid',154),(1742,'NOT_SUPORT','393',53),(1743,'KEYWORD','CP-ABE',121),(1744,'AUTOR','Mäkitalo, Niko',51),(1745,'KEYWORD','Supply Chain Management',115),(1746,'PUBLISHER','Advanced Engineering Informatics',151),(1747,'AUTOR','Zhong, Ray Y.',149),(1748,'AUTOR','Menato, Silvia',111),(1749,'NOT_SUPORT','77',146),(1750,'NOT_SUPORT','441',121),(1751,'AUTOR','Orsini, Gabriel',114),(1752,'KEYWORD','fork',60),(1753,'DOI','10.1016/j.future.2018.08.025',81),(1754,'KEYWORD','Software Development',142),(1755,'NOT_SUPORT','7th International Conference on Information Technology and Quantitative Management (ITQM 2019): Information technology and quantitative management based on Artificial Intelligence',86),(1756,'KEYWORD','PV system',154),(1757,'PUBLISHER','Future Generation Computer Systems',104),(1758,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0920548917300661',59),(1759,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0306437915301952',97),(1760,'KEYWORD','Horizontal integration',120),(1761,'AUTOR','Cotroneo, Domenico',81),(1762,'KEYWORD','Digital twin',153),(1763,'KEYWORD','Big data analytics',153),(1764,'AUTOR','Paprzycki, Marcin',113),(1765,'DOI','10.1016/j.advengsoft.2020.102878',84),(1766,'AUTOR','Petrolo, Riccardo',133),(1767,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050919320538',71),(1768,'AUTOR','Fernandez-Amoros, David',71),(1769,'KEYWORD','Timing errors',81),(1770,'KEYWORD','Business services',140),(1771,'KEYWORD','Workload modeling',104),(1772,'FUENTE','SCIENCEDIRECT',57),(1773,'AUTOR','May, Norman',91),(1774,'NOT_SUPORT','45',87),(1775,'AUTOR','Ullah, Faheem',90),(1776,'KEYWORD','Testing',123),(1777,'KEYWORD','vulnerabilities',62),(1778,'PUBLISHER','Advanced Engineering Informatics',120),(1779,'KEYWORD','Coordination technologies',94),(1780,'FUENTE','SCIENCEDIRECT',137),(1781,'FUENTE','SCIENCEDIRECT',106),(1782,'KEYWORD','Quality of service',126),(1783,'KEYWORD','Virtualization',133),(1784,'DOI','10.1016/j.cola.2020.100972',160),(1785,'NOT_SUPORT','719',71),(1786,'PUBLISHER','Journal of Systems and Software',150),(1787,'KEYWORD','Human action recognition',95),(1788,'NOT_SUPORT','521',81),(1789,'AUTOR','Ometov, Aleksandr',51),(1790,'KEYWORD','Industrial Internet',69),(1791,'KEYWORD','Web applications',83),(1792,'KEYWORD','Deep residual network',95),(1793,'KEYWORD','Intelligent infrastructure',151),(1794,'NOT_SUPORT','57',153),(1795,'AUTOR','Gesvindr, David',75),(1796,'AUTOR','Karim, L.',147),(1797,'NOT_SUPORT','28',67),(1798,'KEYWORD','BPMN',73),(1799,'KEYWORD','Composition',73),(1800,'AUTOR','Koucheryavy, Yevgeni',51),(1801,'PUBLISHER','Procedia Manufacturing',156),(1802,'AUTOR','Stock, Daniel',53),(1803,'KEYWORD','Energy efficiency',126),(1804,'NOT_SUPORT','114',112),(1805,'KEYWORD','Aecurity',53),(1806,'NOT_SUPORT','170',102),(1807,'KEYWORD','Orchestration',164),(1808,'NOT_SUPORT','56',74),(1809,'DOI','10.1016/j.jii.2019.04.004',98),(1810,'AUTOR','Boulmakoul, Azedine',102),(1811,'DOI','10.1016/j.procs.2020.03.120',155),(1812,'KEYWORD','Cloud Computing',150),(1813,'AUTOR','Galinac Grbac, Tihana',118),(1814,'KEYWORD','Blockchain',119),(1815,'DOI','10.1016/j.jlamp.2018.10.001',141),(1816,'NOT_SUPORT','372',62),(1817,'AUTOR','Sharifian, Saeed',95),(1818,'KEYWORD','Cloud manufacturing',74),(1819,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2351978917304055',111),(1820,'KEYWORD','criteria importance theory',130),(1821,'NOT_SUPORT','138',143),(1822,'KEYWORD','Tool interoperability',98),(1823,'AUTOR','Hofmann, Constantin',82),(1824,'AUTOR','St-Onge, Cédric',104),(1825,'NOT_SUPORT','259',72),(1826,'KEYWORD','Enterprise Service Bus',97),(1827,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X19301281',88),(1828,'NOT_SUPORT','110714',101),(1829,'NOT_SUPORT','100531',94),(1830,'AUTOR','Stopková, Mária',109),(1831,'KEYWORD','microservices',144),(1832,'NOT_SUPORT','929',134),(1833,'KEYWORD','Machine learning',108),(1834,'KEYWORD','spark-hadoop ecosystem',102),(1835,'AUTOR','Farshidi, Siamak',101),(1836,'NOT_SUPORT','94',57),(1837,'NOT_SUPORT','The 1st International Conference on Optimization-Driven Architectural Design (OPTARCH 2019)',156),(1838,'NOT_SUPORT','94',85),(1839,'KEYWORD','Operations planning',161),(1840,'AUTOR','da Rosa Righi, Rodrigo',163),(1841,'AUTOR','Kuchař, Jaroslav',108),(1842,'KEYWORD','engineering',155),(1843,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0950584917302276',103),(1844,'NOT_SUPORT','76',164),(1845,'KEYWORD','Socio-technical systems',51),(1846,'AUTOR','Ciancarini, Paolo',134),(1847,'AUTOR','Fazekas, Z.',147),(1848,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1474034616301872',120),(1849,'NOT_SUPORT','112',110),(1850,'AUTOR','Soto, Juan Manuel',70),(1851,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121218300621',55),(1852,'AUTOR','Díaz, Manuel',119),(1853,'FUENTE','SCIENCEDIRECT',60),(1854,'DOI','10.1016/j.jlamp.2019.100511',96),(1855,'KEYWORD','Device integration',91),(1856,'AUTOR','Ye, Qiwen',106),(1857,'KEYWORD','Cloud ontology',124),(1858,'NOT_SUPORT','65',87),(1859,'NOT_SUPORT','1657',129),(1860,'FUENTE','SCIENCEDIRECT',87),(1861,'AUTOR','Challenger, Moharram',160),(1862,'NOT_SUPORT','56',89),(1863,'NOT_SUPORT','International Conference on Robotics and Smart Manufacturing (RoSMa2018)',162),(1864,'KEYWORD','Error detection',81),(1865,'AUTOR','Vishnyakov, Andrei',130),(1866,'NOT_SUPORT','90',81),(1867,'KEYWORD','Business process flexibility',107),(1868,'KEYWORD','Feature model',112),(1869,'DOI','10.1016/j.aei.2016.11.003',120),(1870,'NOT_SUPORT','97',142),(1871,'KEYWORD','Artificial Intelligence',136),(1872,'PUBLISHER','Procedia Computer Science',76),(1873,'PUBLISHER','Neurocomputing',139),(1874,'AUTOR','Wang, Xueying',99),(1875,'DOI','10.1016/j.sysarc.2018.12.002',61),(1876,'KEYWORD','IoT',125),(1877,'AUTOR','Krcmar, Helmut',132),(1878,'AUTOR','Piccialli, Francesco',79),(1879,'KEYWORD','Cloud manufacturing',120),(1880,'KEYWORD','Cloud service recommendation',124),(1881,'KEYWORD','SOAP services',135),(1882,'DOI','10.1016/j.procir.2019.03.068',53),(1883,'FUENTE','SCIENCEDIRECT',80),(1884,'KEYWORD','Big data analytics',65),(1885,'KEYWORD','Service composition',150),(1886,'NOT_SUPORT','36',91),(1887,'KEYWORD','Open government',139),(1888,'AUTOR','Su, Yuehan',84),(1889,'KEYWORD','Software performance antipatterns',103),(1890,'KEYWORD','Transport network',109),(1891,'AUTOR','Chaudhari, Narendra S.',97),(1892,'AUTOR','Wang, Xi Vincent',54),(1893,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050920305950',147),(1894,'AUTOR','Oks, Sascha Julian',148),(1895,'KEYWORD','Service-Oriented Architecture (SOA) System',97),(1896,'FUENTE','SCIENCEDIRECT',144),(1897,'KEYWORD','Logistics finance',106),(1898,'NOT_SUPORT','159',144),(1899,'AUTOR','Huang, George Q.',106),(1900,'NOT_SUPORT','110',135),(1901,'KEYWORD','Resilience',100),(1902,'KEYWORD','COCOMO II',64),(1903,'NOT_SUPORT','159',62),(1904,'AUTOR','Díaz-Pace, J. Andrés',157),(1905,'DOI','10.1016/j.is.2018.06.003',157),(1906,'NOT_SUPORT','1081',83),(1907,'DOI','10.1016/j.ymssp.2019.106564',143),(1908,'KEYWORD','Distributed transactions',131),(1909,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X17310506',57),(1910,'KEYWORD','SOA',156),(1911,'KEYWORD','Software agents',113),(1912,'NOT_SUPORT','189',157),(1913,'KEYWORD','Load testing and profiling',103),(1914,'NOT_SUPORT','53',86),(1915,'KEYWORD','Cloud computing',56),(1916,'NOT_SUPORT','137',141),(1917,'AUTOR','Rashid, Awais',90),(1918,'KEYWORD','Microservices',111),(1919,'KEYWORD','Assembly systems',125),(1920,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0965997817303733',116),(1921,'AUTOR','Chen, Jaime',119),(1922,'AUTOR','Reichert, Manfred',107),(1923,'KEYWORD','Science gateway',57),(1924,'DOI','10.1016/j.procs.2019.12.042',71),(1925,'AUTOR','Gouvas, Panagiotis',142),(1926,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050919319696',86),(1927,'KEYWORD','Capacity planning',132),(1928,'NOT_SUPORT','167',157),(1929,'NOT_SUPORT','570',76),(1930,'AUTOR','Tabuenca, Bernardo',52),(1931,'KEYWORD','Containerization',117),(1932,'AUTOR','Seyedin, Sanaz',95),(1933,'KEYWORD','Permissioned network',158),(1934,'KEYWORD','Kernel-based agent',151),(1935,'NOT_SUPORT','155',121),(1936,'NOT_SUPORT','143',124),(1937,'KEYWORD','Performance',83),(1938,'KEYWORD','Blockchain',88),(1939,'NOT_SUPORT','630',149),(1940,'AUTOR','Ferrari, Gianluigi',96),(1941,'NOT_SUPORT','18',90),(1942,'AUTOR','Zeman, Václav',108),(1943,'KEYWORD','Distributed coordination',131),(1944,'DOI','10.1016/j.csi.2017.10.004',70),(1945,'KEYWORD','Reliability allocation',123),(1946,'KEYWORD','Cloud computing',124),(1947,'PUBLISHER','Procedia CIRP',164),(1948,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121219302365',123),(1949,'NOT_SUPORT','242',130),(1950,'FUENTE','SCIENCEDIRECT',97),(1951,'AUTOR','Di Nitto, Elisabetta',142),(1952,'KEYWORD','Requirements',140),(1953,'KEYWORD','Cloud manufacturing',153),(1954,'AUTOR','Kim, Do Hyeun',158),(1955,'DOI','10.1016/j.promfg.2017.07.197',111),(1956,'NOT_SUPORT','110701',75),(1957,'KEYWORD','Compliance',141),(1958,'NOT_SUPORT','100177',65),(1959,'KEYWORD','Complex Systems',134),(1960,'KEYWORD','Supply chain management',161),(1961,'KEYWORD','Empirical data',103),(1962,'NOT_SUPORT','550',156),(1963,'KEYWORD','Service compostion',148),(1964,'KEYWORD','On-line monitoring',81),(1965,'KEYWORD','Big Data',56),(1966,'AUTOR','Ciavotta, Michele',111),(1967,'AUTOR','de Oliveira Ramos, Gabriel',89),(1968,'KEYWORD','Student Information System',93),(1969,'NOT_SUPORT','38',138),(1970,'KEYWORD','Blockchain agent',106),(1971,'DOI','10.1016/j.procs.2017.05.426',134),(1972,'FUENTE','SCIENCEDIRECT',136),(1973,'AUTOR','Babar, M. Ali',90),(1974,'NOT_SUPORT','305',162),(1975,'NOT_SUPORT','113',94),(1976,'PUBLISHER','Global Energy Interconnection',127),(1977,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1474034617302628',138),(1978,'PUBLISHER','Computer Standards and Interfaces',59),(1979,'NOT_SUPORT','11',125),(1980,'KEYWORD','Industry 4.0',125),(1981,'NOT_SUPORT','64',61),(1982,'KEYWORD','Tool support',157),(1983,'AUTOR','Chao, Kuo Ming',120),(1984,'DOI','10.1016/j.ifacol.2018.08.255',125),(1985,'NOT_SUPORT','106370',73),(1986,'FUENTE','SCIENCEDIRECT',103),(1987,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X19312440',104),(1988,'DOI','10.1016/j.comnet.2018.04.001',145),(1989,'FUENTE','SCIENCEDIRECT',123),(1990,'NOT_SUPORT','35',69),(1991,'NOT_SUPORT','190',119),(1992,'NOT_SUPORT','1651',129),(1993,'KEYWORD','Disruptions',100),(1994,'PUBLISHER','Internet of Things',65),(1995,'AUTOR','Taipalus, Toni',63),(1996,'FUENTE','SCIENCEDIRECT',126),(1997,'DOI','10.11989/JEST.1674-862X.80926105',56),(1998,'DOI','10.1016/j.procs.2016.09.292',64),(1999,'NOT_SUPORT','178',92),(2000,'AUTOR','Gec, S.',88),(2001,'NOT_SUPORT','59',160),(2002,'PUBLISHER','Expert Systems with Applications',118),(2003,'AUTOR','Buhnova, Barbora',75),(2004,'FUENTE','SCIENCEDIRECT',127),(2005,'NOT_SUPORT','151',100),(2006,'NOT_SUPORT','329',103),(2007,'KEYWORD','Cyber-Physical Systems (CPS)',160),(2008,'KEYWORD','Internet of vehicles',99),(2009,'KEYWORD','Industry 4.0',69),(2010,'AUTOR','Wang, Qianqian',84),(2011,'AUTOR','Viriyasitavat, Wattana',67),(2012,'KEYWORD','Multi agent systems',131),(2013,'KEYWORD','Choreography',73),(2014,'KEYWORD','Types of integrations',89),(2015,'AUTOR','Camarinha-Matos, Luis M.',100),(2016,'KEYWORD','Software',142),(2017,'KEYWORD','REST',110),(2018,'NOT_SUPORT','2625',161),(2019,'AUTOR','Mehta, Harshit',136),(2020,'AUTOR','Buyya, Rajkumar',126),(2021,'NOT_SUPORT','15',98),(2022,'KEYWORD','Internet of things',75),(2023,'AUTOR','ur Rehman, Muhammad Habib',72),(2024,'AUTOR','Zafeiropoulos, Anastasios',142),(2025,'KEYWORD','Service Oriented Systems Engineering',128),(2026,'AUTOR','Bădică, Costin',113),(2027,'AUTOR','Lindsay, Dominic',136),(2028,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S026840121930461X',115),(2029,'KEYWORD','Proximity-based computing',51),(2030,'AUTOR','Nazari, Behzad',68),(2031,'AUTOR','Gribaudo, Marco',87),(2032,'KEYWORD','Data architecture',58),(2033,'KEYWORD','Cyber-physical systems',72),(2034,'KEYWORD','chaos',155),(2035,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1532046419300589',163),(2036,'KEYWORD','Enterprise application integration',91),(2037,'NOT_SUPORT','91',131),(2038,'KEYWORD','Fish farm',158),(2039,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S175558171730010X',58),(2040,'NOT_SUPORT','70',92),(2041,'AUTOR','Viera, Fredy',70),(2042,'AUTOR','Rodríguez, Guillermo',157),(2043,'PUBLISHER','Advances in Engineering Software',116),(2044,'KEYWORD','Data leakage',90),(2045,'AUTOR','Aaltonen, Timo',51),(2046,'KEYWORD','microservices based architecture',77),(2047,'AUTOR','Van Den Heuvel, Willem Jan',159),(2048,'KEYWORD','Explicit subtyping',141),(2049,'AUTOR','Verba, Nandor',120),(2050,'AUTOR','Stankovski, Vlado',136),(2051,'DOI','10.1016/j.autcon.2018.05.004',69),(2052,'KEYWORD','e-Participation',139),(2053,'NOT_SUPORT','106564',143),(2054,'NOT_SUPORT','121',114),(2055,'AUTOR','Jansen, Slinger',101),(2056,'NOT_SUPORT','191',58),(2057,'AUTOR','Hoonsopon, Danupol',67),(2058,'KEYWORD','Heterogeneous services',135),(2059,'PUBLISHER','Computers and Security',92),(2060,'AUTOR','Iacono, Mauro',87),(2061,'NOT_SUPORT','51',125),(2062,'AUTOR','Häfner, Benjamin',82),(2063,'AUTOR','Pelechano, Vicente',73),(2064,'AUTOR','Diallo, Ousmane',143),(2065,'AUTOR','Smirnova, Daria',136),(2066,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S016412122030039X',150),(2067,'FUENTE','SCIENCEDIRECT',110),(2068,'PUBLISHER','Advances in Engineering Software',84),(2069,'DOI','10.1016/j.promfg.2020.02.257',156),(2070,'AUTOR','Sae-Lor, Suksant',66),(2071,'FUENTE','SCIENCEDIRECT',104),(2072,'KEYWORD','Cohen\'s kappa',52),(2073,'NOT_SUPORT','19',145),(2074,'FUENTE','SCIENCEDIRECT',83),(2075,'AUTOR','Bouattane, Omar',76),(2076,'NOT_SUPORT','81',148),(2077,'KEYWORD','Smart contracts',74),(2078,'KEYWORD','Food Distribution',115),(2079,'AUTOR','Raatikainen, M.',51),(2080,'KEYWORD','hierarchical criterion',130),(2081,'PUBLISHER','Future Generation Computer Systems',81),(2082,'DOI','10.1016/j.im.2019.103241',140),(2083,'KEYWORD','Survey',152),(2084,'KEYWORD','Big data',72),(2085,'DOI','10.1016/j.jii.2019.05.002',67),(2086,'AUTOR','Ghezala, Henda Hjjami Ben',62),(2087,'KEYWORD','Cloud computing',104),(2088,'NOT_SUPORT','241',128),(2089,'NOT_SUPORT','100972',160),(2090,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0743731519300437',124),(2091,'PUBLISHER','IFAC-PapersOnLine',161),(2092,'PUBLISHER','Engineering',149),(2093,'KEYWORD','Blockchain',86),(2094,'AUTOR','Hedberg, Thomas',58),(2095,'DOI','10.1016/j.iot.2019.100150',80),(2096,'KEYWORD','Architecture quality',132),(2097,'NOT_SUPORT','101',83),(2098,'NOT_SUPORT','101491',68),(2099,'KEYWORD','Internet of Things',114),(2100,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0045790620305693',99),(2101,'AUTOR','Kumari, Saru',99),(2102,'AUTOR','Malavolta, Ivano',146),(2103,'AUTOR','Hajnal, Akos',57),(2104,'PUBLISHER','Procedia Computer Science',62),(2105,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050917316666',129),(2106,'PUBLISHER','Journal of Systems and Software',123),(2107,'NOT_SUPORT','286',85),(2108,'AUTOR','Trubiani, Catia',103),(2109,'NOT_SUPORT','33',120),(2110,'KEYWORD','Global Energy Interconnection',127),(2111,'AUTOR','Slimani, Hachem',92),(2112,'AUTOR','Garcia-Martin, Javier',52),(2113,'KEYWORD','Smart contract',119),(2114,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121215002150',110),(2115,'NOT_SUPORT','141',55),(2116,'NOT_SUPORT','54',61),(2117,'AUTOR','Morabito, Roberto',133),(2118,'NOT_SUPORT','Knowledge-Based and Intelligent Information &amp; Engineering Systems: Proceedings of the 21st International Conference, KES-20176-8 September 2017, Marseille, France',129),(2119,'KEYWORD','Gateway',120),(2120,'AUTOR','Alam, Muhammad Mahbub',65),(2121,'KEYWORD','Mobile Clouds',114),(2122,'KEYWORD','Software architecture',163),(2123,'AUTOR','Iftene, Adrian',144),(2124,'KEYWORD','IoT',131),(2125,'KEYWORD','architecture',64),(2126,'KEYWORD','Internet of Things',149),(2127,'NOT_SUPORT','100177',65),(2128,'DOI','10.1016/j.cirpj.2017.04.002',58),(2129,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2351978920308441',156),(2130,'KEYWORD','Data breach',90),(2131,'PUBLISHER','Simulation Modelling Practice and Theory',85),(2132,'DOI','10.1016/j.cose.2017.05.008',92),(2133,'AUTOR','Di Marzo Serugendo, Giovanna',94),(2134,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1474034617305426',151),(2135,'AUTOR','de\'Liguoro, Ugo',141),(2136,'NOT_SUPORT','157',74),(2137,'PUBLISHER','Journal of Systems and Software',101),(2138,'KEYWORD','Brownout',126),(2139,'NOT_SUPORT','59',147),(2140,'NOT_SUPORT','119846',100),(2141,'KEYWORD','Web Services',164),(2142,'KEYWORD','Data Avenue',57),(2143,'NOT_SUPORT','106714',99),(2144,'PUBLISHER','Journal of Systems and Software',152),(2145,'AUTOR','Xu, Xun',153),(2146,'NOT_SUPORT','100150',80),(2147,'AUTOR','Krüger, Jörg',164),(2148,'KEYWORD','Internet of Things',120),(2149,'DOI','10.1016/j.jss.2019.110462',123),(2150,'KEYWORD','RPC',84),(2151,'NOT_SUPORT','100118',136),(2152,'KEYWORD','environmental information system',77),(2153,'KEYWORD','Quality of Service',136),(2154,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S016412122030042X',122),(2155,'NOT_SUPORT','454',82),(2156,'KEYWORD','Collaboration',142),(2157,'AUTOR','Guegan, Chirine Ghedira',62),(2158,'PUBLISHER','Journal of Network and Computer Applications',90),(2159,'KEYWORD','Microservices',159),(2160,'FUENTE','SCIENCEDIRECT',160),(2161,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2542660519302331',136),(2162,'DOI','10.1016/j.procs.2019.09.192',62),(2163,'DOI','10.1016/j.simpat.2019.03.008',85),(2164,'KEYWORD','Real-Time simulation',154),(2165,'NOT_SUPORT','58',86),(2166,'KEYWORD','MQTT',120),(2167,'KEYWORD','Blockchain',131),(2168,'NOT_SUPORT','14',78),(2169,'FUENTE','SCIENCEDIRECT',101),(2170,'KEYWORD','Reliability',89),(2171,'PUBLISHER','Simulation Modelling Practice and Theory',132),(2172,'NOT_SUPORT','110576',63),(2173,'NOT_SUPORT','170',155),(2174,'AUTOR','Wright, Steven A.',137),(2175,'KEYWORD','Distributed Infrastructure',154),(2176,'PUBLISHER','Journal of Systems Architecture',131),(2177,'NOT_SUPORT','546',148),(2178,'PUBLISHER','Procedia Computer Science',134),(2179,'AUTOR','Edwards, Matthew',90),(2180,'NOT_SUPORT','156',110),(2181,'KEYWORD','Trust',88),(2182,'KEYWORD','Docker',54),(2183,'KEYWORD','security',62),(2184,'NOT_SUPORT','187',125),(2185,'AUTOR','Xu, Minxian',126),(2186,'AUTOR','Hawkes, Rycharde',66),(2187,'DOI','10.1016/j.procs.2020.03.018',102),(2188,'AUTOR','Xu, Xun',149),(2189,'NOT_SUPORT','100511',96),(2190,'FUENTE','SCIENCEDIRECT',162),(2191,'PUBLISHER','Journal of Industrial Information Integration',98),(2192,'NOT_SUPORT','101',90),(2193,'AUTOR','Rai, Ankush',162),(2194,'AUTOR','Hurtado-Torres, María Visitación',139),(2195,'AUTOR','De Nicola, Rocco',96),(2196,'AUTOR','Bottaccioli, Lorenzo',154),(2197,'PUBLISHER','Future Generation Computer Systems',72),(2198,'FUENTE','SCIENCEDIRECT',72),(2199,'KEYWORD','Internet of Things',158),(2200,'PUBLISHER','Knowledge-Based Systems',108),(2201,'FUENTE','SCIENCEDIRECT',147),(2202,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121219301669',51),(2203,'KEYWORD','Service-Oriented Architecture',68),(2204,'DOI','10.1016/j.jss.2019.110391',51),(2205,'KEYWORD','Systematic review',52),(2206,'DOI','10.1016/j.jss.2020.110701',75),(2207,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S108480451930205X',135),(2208,'NOT_SUPORT','38',151),(2209,'AUTOR','Piccialli, Francesco',128),(2210,'PUBLISHER','Journal of Network and Computer Applications',135),(2211,'KEYWORD','Internet of Things',69),(2212,'KEYWORD','Trust',119),(2213,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2212827119304573',148),(2214,'NOT_SUPORT','1157',105),(2215,'KEYWORD','Cyber physical systems',131),(2216,'NOT_SUPORT','938',111),(2217,'FUENTE','SCIENCEDIRECT',86),(2218,'NOT_SUPORT','110564',122),(2219,'NOT_SUPORT','100531',94),(2220,'FUENTE','SCIENCEDIRECT',133),(2221,'NOT_SUPORT','95',64),(2222,'AUTOR','Buyya, Rajkumar',150),(2223,'PUBLISHER','Procedia Computer Science',79),(2224,'AUTOR','Yaqoob, Ibrar',72),(2225,'NOT_SUPORT','17',56),(2226,'KEYWORD','Knowledge acquisition',101),(2227,'DOI','10.1016/j.is.2019.101447',107),(2228,'KEYWORD','Programming model',51),(2229,'KEYWORD','Cloud computing',117),(2230,'KEYWORD','Bibliometric analysis',71),(2231,'NOT_SUPORT','8th International Conference on Ambient Systems, Networks and Technologies, ANT-2017 and the 7th International Conference on Sustainable Energy Information Technology, SEIT 2017, 16-19 May 2017, Madeira, Portugal',77),(2232,'NOT_SUPORT','111',108),(2233,'AUTOR','Lin, Changnian',127),(2234,'KEYWORD','Optimization',56),(2235,'AUTOR','Misra, Sanjay',136),(2236,'KEYWORD','Distributed systems',163),(2237,'KEYWORD','Blockchain',74),(2238,'NOT_SUPORT','110576',63),(2239,'NOT_SUPORT','52nd CIRP Conference on Manufacturing Systems (CMS), Ljubljana, Slovenia, June 12-14, 2019',148),(2240,'AUTOR','Sandoval, Edgar',70),(2241,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1569190X19300322',85),(2242,'NOT_SUPORT','298',162),(2243,'AUTOR','Djebari, Nabil',92),(2244,'AUTOR','Chitchyan, Ruzanna',90),(2245,'FUENTE','SCIENCEDIRECT',111),(2246,'KEYWORD','Microservices',59),(2247,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1084804519302516',137),(2248,'KEYWORD','Management',66),(2249,'NOT_SUPORT','48',64),(2250,'NOT_SUPORT','109',104),(2251,'KEYWORD','Content delivery network',65),(2252,'NOT_SUPORT','448',121),(2253,'KEYWORD','Systematic grey literature review',159),(2254,'AUTOR','Sabir, Badr Eddine',76),(2255,'KEYWORD','Fog Computing',120),(2256,'KEYWORD','Function as a service',95),(2257,'DOI','10.1016/j.procs.2019.09.271',144),(2258,'KEYWORD','Consensus',67),(2259,'AUTOR','Amato, Flora',128),(2260,'AUTOR','Tomar, Geetam Singh',97),(2261,'FUENTE','SCIENCEDIRECT',122),(2262,'AUTOR','Vachtsevanou, Danai C.',125),(2263,'KEYWORD','Edge Computing',131),(2264,'KEYWORD','Vehicle routing problem',109),(2265,'AUTOR','Salamanca, Alejandro',70),(2266,'FUENTE','SCIENCEDIRECT',62),(2267,'KEYWORD','Dynamic basis',99),(2268,'NOT_SUPORT','97',61),(2269,'NOT_SUPORT','THE SECOND INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING IN DATA SCIENCES, ICDS2018',76),(2270,'AUTOR','Xu, Gangyan',151),(2271,'AUTOR','El Bouziri, Adil',77),(2272,'FUENTE','SCIENCEDIRECT',119),(2273,'FUENTE','SCIENCEDIRECT',120),(2274,'KEYWORD','OSGI',120),(2275,'NOT_SUPORT','5',149),(2276,'AUTOR','Helu, Moneer',58),(2277,'NOT_SUPORT','Proceedings of the Ninth International Workshop on the Practical Application of Stochastic Modelling (PASM)',87),(2278,'FUENTE','SCIENCEDIRECT',142),(2279,'KEYWORD','Empirical study',140),(2280,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0040162519304494',100),(2281,'KEYWORD','Cyber-physical production system',153),(2282,'DOI','10.1016/j.ijinfomgt.2019.09.004',115),(2283,'KEYWORD','Web service',108),(2284,'AUTOR','Yu, Jing Huan',56),(2285,'AUTOR','Boulmakoul, Azedine',77),(2286,'KEYWORD','Dispersed Computing',131),(2287,'KEYWORD','Cloud patterns',55),(2288,'AUTOR','Taha, Mohammad Bany',121),(2289,'AUTOR','Benedusi, Paolo',128),(2290,'DOI','10.1016/j.rcim.2018.11.006',153),(2291,'KEYWORD','Cloud',66),(2292,'NOT_SUPORT','58',98),(2293,'KEYWORD','Microservices',135),(2294,'KEYWORD','VANET',121),(2295,'AUTOR','Vitharana, Padmal',140),(2296,'NOT_SUPORT','1171',105),(2297,'FUENTE','SCIENCEDIRECT',71),(2298,'PUBLISHER','Journal of Systems and Software',63),(2299,'AUTOR','Imran, Muhammad',72),(2300,'KEYWORD','Internet of Things',119),(2301,'NOT_SUPORT','103140',163),(2302,'NOT_SUPORT','982',77),(2303,'NOT_SUPORT','560',127),(2304,'KEYWORD','Scenario-based evaluation guidelines',110),(2305,'AUTOR','Garraghan, Peter',136),(2306,'KEYWORD','BOINC',60),(2307,'NOT_SUPORT','110391',51),(2308,'KEYWORD','Systematic mapping study',146),(2309,'KEYWORD','Edge computing',51),(2310,'NOT_SUPORT','44',109),(2311,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0306437917301084',91),(2312,'PUBLISHER','Information Systems',157),(2313,'KEYWORD','Virtualization',105),(2314,'NOT_SUPORT','1',56),(2315,'NOT_SUPORT','232',159),(2316,'KEYWORD','Smart contract',67),(2317,'PUBLISHER','Journal of Systems and Software',110),(2318,'AUTOR','Criado, Javier',59),(2319,'AUTOR','Ganzha, Maria',113),(2320,'NOT_SUPORT','562',76),(2321,'AUTOR','Cinque, Marcello',81),(2322,'AUTOR','Kontou, Ioanna',125),(2323,'NOT_SUPORT','195',58),(2324,'NOT_SUPORT','156',89),(2325,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X16303843',66),(2326,'KEYWORD','Image Processing',164),(2327,'KEYWORD','Context Forecast',114),(2328,'KEYWORD','Blockchain',99),(2329,'NOT_SUPORT','8th International Conference on Ambient Systems, Networks and Technologies, ANT-2017 and the 7th International Conference on Sustainable Energy Information Technology, SEIT 2017, 16-19 May 2017, Madeira, Portugal',93),(2330,'DOI','10.1016/j.future.2017.09.050',57),(2331,'AUTOR','Bhadoria, Robin Singh',97),(2332,'NOT_SUPORT','21',67),(2333,'KEYWORD','Web service composition',135),(2334,'PUBLISHER','Future Generation Computer Systems',95),(2335,'AUTOR','Kravari, Kalliopi',85),(2336,'KEYWORD','Software Containers',54),(2337,'AUTOR','Hussin, Ab Razak Bin Che',68),(2338,'DOI','10.1016/j.procs.2017.05.457',77),(2339,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2352220818301391',141),(2340,'AUTOR','Lanza, Gisela',82),(2341,'PUBLISHER','Journal of Parallel and Distributed Computing',124),(2342,'NOT_SUPORT','The 16th International Conference on Mobile Systems and Pervasive Computing (MobiSPC 2019),The 14th International Conference on Future Networks and Communications (FNC-2019),The 9th International Conference on Sustainable Energy Information Technology',121),(2343,'KEYWORD','Linked data',98),(2344,'KEYWORD','Performance evaluation',132),(2345,'NOT_SUPORT','25',117),(2346,'KEYWORD','Microservices design',159),(2347,'AUTOR','Yang, Shun',82),(2348,'KEYWORD','Virtualization',117),(2349,'DOI','10.1016/j.jss.2018.03.063',55),(2350,'NOT_SUPORT','The Fifth Information Systems International Conference, 23-24 July 2019, Surabaya, Indonesia',112),(2351,'KEYWORD','Energy consumption',117),(2352,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X16307397',128),(2353,'DOI','10.1016/j.aei.2018.09.001',138),(2354,'AUTOR','James, Anne',120),(2355,'NOT_SUPORT','103241',140),(2356,'FUENTE','SCIENCEDIRECT',51),(2357,'FUENTE','SCIENCEDIRECT',55),(2358,'NOT_SUPORT','146',137),(2359,'DOI','10.1016/j.future.2020.03.059',104),(2360,'FUENTE','SCIENCEDIRECT',118),(2361,'KEYWORD','Cloud computing',59),(2362,'NOT_SUPORT','83',131),(2363,'NOT_SUPORT','780',154),(2364,'NOT_SUPORT','102',113),(2365,'FUENTE','SCIENCEDIRECT',143),(2366,'AUTOR','Trunfio, Paolo',78),(2367,'KEYWORD','Domain engineering',112),(2368,'AUTOR','Fuchs, Jonathan',148),(2369,'PUBLISHER','Journal of Systems and Software',52),(2370,'KEYWORD','Analytics',72),(2371,'NOT_SUPORT','8th International Conference on Sustainability in Energy and Buildings, SEB-16, 11-13 September 2016, Turin, Italy',154),(2372,'KEYWORD','Data theft',90),(2373,'FUENTE','SCIENCEDIRECT',156),(2374,'KEYWORD','Future networking',137),(2375,'NOT_SUPORT','57',64),(2376,'NOT_SUPORT','The 11th International Conference on Ambient Systems, Networks and Technologies (ANT) / The 3rd International Conference on Emerging Data and Industry 4.0 (EDI40) / Affiliated Workshops',155),(2377,'NOT_SUPORT','6',127),(2378,'NOT_SUPORT','249',104),(2379,'KEYWORD','Complexity',66),(2380,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S088832701930785X',143),(2381,'DOI','10.1016/j.jss.2020.110657',52),(2382,'KEYWORD','Evolutionary optimization',118),(2383,'NOT_SUPORT','987',77),(2384,'NOT_SUPORT','91',126),(2385,'KEYWORD','Workload periodic patterns',104),(2386,'NOT_SUPORT','880',155),(2387,'AUTOR','García-Valls, Marisol',131),(2388,'KEYWORD','Antifragility',100),(2389,'AUTOR','Willms, Philipp',161),(2390,'AUTOR','Allali, Hakim',76),(2391,'KEYWORD','IoT',136),(2392,'PUBLISHER','Procedia Computer Science',71),(2393,'AUTOR','Pervaiz, Haris',136),(2394,'KEYWORD','Neural Modelling',162),(2395,'NOT_SUPORT','52',115),(2396,'NOT_SUPORT','144',102),(2397,'KEYWORD','Simulation tools',65),(2398,'KEYWORD','CRM',129),(2399,'KEYWORD','Gateway',133),(2400,'AUTOR','Mitton, Nathalie',133),(2401,'AUTOR','Singh, Manmeet',136),(2402,'NOT_SUPORT','111',96),(2403,'KEYWORD','Opportunities',86),(2404,'AUTOR','Li, Ming',106),(2405,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121219300019',146),(2406,'KEYWORD','Uncertainty',150),(2407,'DOI','10.1016/j.jss.2018.12.018',152),(2408,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1383762118301036',131),(2409,'AUTOR','Morabito, Roberto',105),(2410,'AUTOR','Razian, Mohammadreza',150),(2411,'AUTOR','Fernández-García, Antonio Jesús',59),(2412,'NOT_SUPORT','8th International Conference on Ambient Systems, Networks and Technologies, ANT-2017 and the 7th International Conference on Sustainable Energy Information Technology, SEIT 2017, 16-19 May 2017, Madeira, Portugal',134),(2413,'AUTOR','Herrera-Viedma, Enrique',71),(2414,'AUTOR','Morrey, Denise',69),(2415,'AUTOR','Rosa, Nelson S.',61),(2416,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1876610217302709',154),(2417,'PUBLISHER','Procedia Computer Science',102),(2418,'KEYWORD','Internet of things',145),(2419,'DOI','10.1016/j.rcim.2020.101962',106),(2420,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050917310451',93),(2421,'PUBLISHER','Journal of Logical and Algebraic Methods in Programming',141),(2422,'PUBLISHER','Procedia CIRP',53),(2423,'NOT_SUPORT','396',152),(2424,'KEYWORD','Coupling degree',84),(2425,'AUTOR','Lemieux, Yves',104),(2426,'AUTOR','Zambonelli, Franco',94),(2427,'KEYWORD','Systematic literature review',68),(2428,'DOI','10.1016/j.jss.2019.05.031',126),(2429,'DOI','10.1016/j.future.2018.10.020',105),(2430,'KEYWORD','Traffic safety',102),(2431,'KEYWORD','Computing gateway',151),(2432,'AUTOR','Brook, James',66),(2433,'KEYWORD','microservices',87),(2434,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1383762118300936',61),(2435,'KEYWORD','smart road vehicles',147),(2436,'NOT_SUPORT','109',93),(2437,'FUENTE','SCIENCEDIRECT',134),(2438,'AUTOR','Anuphaptrirong, Tharwon',67),(2439,'DOI','10.1016/j.jss.2015.09.039',110),(2440,'KEYWORD','Decision-making',89),(2441,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1569190X18301412',132),(2442,'AUTOR','Upadhyay, Nitin',86),(2443,'AUTOR','Komarudin, Oman',112),(2444,'PUBLISHER','Big Data Research',78),(2445,'FUENTE','SCIENCEDIRECT',132),(2446,'AUTOR','Hasan, Mahmud',74),(2447,'NOT_SUPORT','7th International Conference on Information Technology and Quantitative Management (ITQM 2019): Information technology and quantitative management based on Artificial Intelligence',71),(2448,'DOI','10.1016/j.future.2019.06.009',95),(2449,'FUENTE','SCIENCEDIRECT',79),(2450,'AUTOR','da Silva, Valter Ferreira',163),(2451,'NOT_SUPORT','555',138),(2452,'KEYWORD','Web performance',65),(2453,'KEYWORD','Event-oriented services',135),(2454,'KEYWORD','Microservices',73),(2455,'FUENTE','SCIENCEDIRECT',153),(2456,'AUTOR','Tuli, Shreshth',136),(2457,'FUENTE','SCIENCEDIRECT',115),(2458,'FUENTE','SCIENCEDIRECT',77),(2459,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X18325123',105),(2460,'KEYWORD','Automated scalability',57),(2461,'DOI','10.1016/j.jss.2019.01.001',146),(2462,'AUTOR','Janes, Andrea',122),(2463,'AUTOR','Niknejad, Naghmeh',68),(2464,'KEYWORD','Web services composition',92),(2465,'KEYWORD','Neural blockchain',139),(2466,'NOT_SUPORT','68',98),(2467,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050916324644',64),(2468,'KEYWORD','Software engineering',71),(2469,'NOT_SUPORT','Knowledge-Based and Intelligent Information &amp; Engineering Systems: Proceedings of the 23rd International Conference KES2019',144),(2470,'AUTOR','Lbath, Ahmed',102),(2471,'NOT_SUPORT','946',57),(2472,'NOT_SUPORT','102',131),(2473,'KEYWORD','trust',62),(2474,'AUTOR','Pedrazzoli, Paolo',111),(2475,'AUTOR','Zhang, Chuanji',137),(2476,'NOT_SUPORT','http://arxiv.org/abs/2005.08393',101),(2477,'KEYWORD','Systematic mapping study',152),(2478,'AUTOR','Karim, Lamia',102),(2479,'AUTOR','Žagar, Mario',118),(2480,'DOI','10.1016/j.procs.2017.05.376',93),(2481,'AUTOR','Omara, Fatma A.',124),(2482,'KEYWORD','Software engineering',152),(2483,'AUTOR','Romero-Frías, Esteban',139),(2484,'AUTOR','Acquaviva, Andrea',154),(2485,'PUBLISHER','Future Generation Computer Systems',105),(2486,'KEYWORD','Domain-specific languages',96),(2487,'PUBLISHER','Future Generation Computer Systems',83),(2488,'AUTOR','Kurochkin, Ilya',60),(2489,'NOT_SUPORT','1044',144),(2490,'KEYWORD','Cyber-physical systems',125),(2491,'NOT_SUPORT','13',161),(2492,'KEYWORD','Microservices development',159),(2493,'DOI','10.1016/j.techfore.2019.119846',100),(2494,'NOT_SUPORT','103',126),(2495,'DOI','10.1016/j.procs.2019.11.105',112),(2496,'KEYWORD','Event logging',81),(2497,'NOT_SUPORT','110564',122),(2498,'KEYWORD','Information management',98),(2499,'KEYWORD','Smart citizen',139),(2500,'AUTOR','Cabrerizo, Francisco Javier',71),(2501,'KEYWORD','machine learning',147),(2502,'DOI','10.1016/j.procs.2020.03.139',147),(2503,'PUBLISHER','Procedia Computer Science',60),(2504,'KEYWORD','Technology & Innovation',115),(2505,'NOT_SUPORT','149',152),(2506,'PUBLISHER','Information Systems',91),(2507,'NOT_SUPORT','101491',68),(2508,'NOT_SUPORT','100118',136),(2509,'AUTOR','Kochovski, P.',88),(2510,'KEYWORD','Business ecosystem',100),(2511,'AUTOR','Gîfu, Daniela',144),(2512,'KEYWORD','Success factors',68),(2513,'AUTOR','Al-Sayed, Mustafa M.',124),(2514,'KEYWORD','Data analysis',56),(2515,'NOT_SUPORT','378',60),(2516,'AUTOR','Dubey, Abhishek',131),(2517,'NOT_SUPORT','103241',140),(2518,'PUBLISHER','Journal of Systems Architecture',61),(2519,'AUTOR','O\'Reilly, Barry M.',155),(2520,'NOT_SUPORT','137',102),(2521,'AUTOR','Posdorfer, Wolf',114),(2522,'AUTOR','Li, Ming',151),(2523,'NOT_SUPORT','97',146),(2524,'NOT_SUPORT','148',164),(2525,'KEYWORD','Software architecture',146),(2526,'AUTOR','Xie, Yi',84),(2527,'NOT_SUPORT','141',124),(2528,'NOT_SUPORT','162',86),(2529,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050919300298',76),(2530,'AUTOR','Goldim, José Roberto',163),(2531,'AUTOR','Bran, Alexander',103),(2532,'PUBLISHER','Journal of Logical and Algebraic Methods in Programming',94),(2533,'PUBLISHER','Procedia Computer Science',112),(2534,'NOT_SUPORT','119846',100),(2535,'PUBLISHER','Computers and Electrical Engineering',99),(2536,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S016816991932006X',158),(2537,'DOI','10.1016/j.trpro.2020.02.032',109),(2538,'NOT_SUPORT','90',118),(2539,'NOT_SUPORT','LOGI 2019 - Horizons of Autonomous Mobility in Europe',109),(2540,'NOT_SUPORT','19',58),(2541,'FUENTE','SCIENCEDIRECT',159),(2542,'NOT_SUPORT','105251',158),(2543,'NOT_SUPORT','875',155),(2544,'AUTOR','Symeonidis, Andreas',142),(2545,'KEYWORD','Blockchain',163),(2546,'KEYWORD','API gateway',84),(2547,'FUENTE','SCIENCEDIRECT',141),(2548,'KEYWORD','IoT',69),(2549,'DOI','10.1016/j.infsof.2017.11.016',103),(2550,'KEYWORD','Big data',143),(2551,'AUTOR','Loscrì, Valeria',133),(2552,'PUBLISHER','Procedia Computer Science',77),(2553,'NOT_SUPORT','934',134),(2554,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2212827118303317',54),(2555,'NOT_SUPORT','112',129),(2556,'DOI','10.1016/j.jnca.2019.102417',137),(2557,'NOT_SUPORT','102008',115),(2558,'AUTOR','Kacsuk, Peter',57),(2559,'DOI','10.1016/j.procs.2016.08.278',142),(2560,'NOT_SUPORT','243',120),(2561,'NOT_SUPORT','9',80),(2562,'KEYWORD','Industrie 4.0',111),(2563,'DOI','10.1016/j.csi.2018.02.002',59),(2564,'NOT_SUPORT','128',114),(2565,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1389128618301579',145),(2566,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121220301485',75),(2567,'KEYWORD','Cloud outages',83),(2568,'PUBLISHER','Procedia Computer Science',144),(2569,'NOT_SUPORT','47',145),(2570,'AUTOR','Suram, Sunil',116),(2571,'PUBLISHER','Future Generation Computer Systems',88),(2572,'AUTOR','Alli, Adam A.',65),(2573,'KEYWORD','Framework',86),(2574,'KEYWORD','Edge computing',80),(2575,'KEYWORD','Networking',131),(2576,'FUENTE','SCIENCEDIRECT',90),(2577,'AUTOR','Adianto, Daya',112),(2578,'NOT_SUPORT','110657',52),(2579,'AUTOR','Di Francesco, Paolo',146),(2580,'NOT_SUPORT','161',123),(2581,'AUTOR','Singh, Inderpreet',136),(2582,'AUTOR','Sherin, Salman',152),(2583,'AUTOR','Woźniak, Adrian P.',156),(2584,'FUENTE','SCIENCEDIRECT',73),(2585,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1084804517303569',90),(2586,'AUTOR','Cuadrado, Felix',66),(2587,'AUTOR','Schmidt, Douglas C.',163),(2588,'DOI','10.1016/j.jnca.2017.10.016',90),(2589,'KEYWORD','Cloud computing',95),(2590,'FUENTE','SCIENCEDIRECT',66),(2591,'NOT_SUPORT','51',56),(2592,'AUTOR','Edstrom, Claes',104),(2593,'KEYWORD','Cloud manufacturing',149),(2594,'KEYWORD','Execution management',80),(2595,'NOT_SUPORT','72',54),(2596,'NOT_SUPORT','398',53),(2597,'FUENTE','SCIENCEDIRECT',67),(2598,'KEYWORD','BPEL',164),(2599,'AUTOR','Rudorfer, Martin',164),(2600,'NOT_SUPORT','257',120),(2601,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121220300571',63),(2602,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2542660519301726',80),(2603,'PUBLISHER','Future Generation Computer Systems',113),(2604,'KEYWORD','Education',63),(2605,'AUTOR','Schel, Daniel',53),(2606,'NOT_SUPORT','9',65),(2607,'KEYWORD','Software-as-a-Service',93),(2608,'KEYWORD','Data mining',145),(2609,'AUTOR','Vlassiou, Vlassis',142),(2610,'PUBLISHER','Procedia Computer Science',93),(2611,'NOT_SUPORT','541',148),(2612,'FUENTE','SCIENCEDIRECT',109),(2613,'FUENTE','SCIENCEDIRECT',140),(2614,'AUTOR','Mitton, Nathalie',105),(2615,'KEYWORD','Businesses',67),(2616,'AUTOR','Andrews, Kevin',107),(2617,'AUTOR','Ritter, Daniel',91),(2618,'KEYWORD','Collaboration',100),(2619,'KEYWORD','Intelligent manufacturing',149),(2620,'FUENTE','SCIENCEDIRECT',52),(2621,'KEYWORD','Social Computing',131),(2622,'NOT_SUPORT','Learning Factories across the value chain – from innovation to service – The 10th Conference on Learning Factories 2020',82),(2623,'KEYWORD','City logistics',109),(2624,'KEYWORD','Distributed systems',96),(2625,'FUENTE','SCIENCEDIRECT',59),(2626,'KEYWORD','Structured query language (SQL)',63),(2627,'KEYWORD','Fog Computing',51),(2628,'KEYWORD','Classification',108),(2629,'KEYWORD','Big data',145),(2630,'AUTOR','Shao, Saijun',106),(2631,'DOI','10.1016/j.compag.2020.105251',158),(2632,'KEYWORD','Coordination',96),(2633,'AUTOR','El-khoury, Jad',98),(2634,'NOT_SUPORT','102',141),(2635,'NOT_SUPORT','57',91),(2636,'AUTOR','Ismail, Waidah',68),(2637,'KEYWORD','Cloud computing',118),(2638,'AUTOR','Diène, Bassirou',143),(2639,'FUENTE','SCIENCEDIRECT',125),(2640,'AUTOR','da Rosa Righi, Rodrigo',89),(2641,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S240589631831379X',125),(2642,'NOT_SUPORT','1035',144),(2643,'DOI','10.1016/j.procir.2018.03.173',54),(2644,'FUENTE','SCIENCEDIRECT',94),(2645,'KEYWORD','Architecture',134),(2646,'NOT_SUPORT','66',147),(2647,'AUTOR','Baboi, Mihai',144),(2648,'FUENTE','SCIENCEDIRECT',150),(2649,'NOT_SUPORT','102878',84),(2650,'AUTOR','Pecchia, Antonio',81),(2651,'NOT_SUPORT','27th International Conference on Flexible Automation and Intelligent Manufacturing, FAIM2017, 27-30 June 2017, Modena, Italy',111),(2652,'KEYWORD','Systems integration',58),(2653,'KEYWORD','Sales',161),(2654,'AUTOR','Rakoczi, Botond',57),(2655,'AUTOR','Farkas, Attila',57),(2656,'KEYWORD','antifragility',155),(2657,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2096511720300104',127),(2658,'KEYWORD','Software architecture design',75),(2659,'PUBLISHER','Procedia Computer Science',162),(2660,'FUENTE','SCIENCEDIRECT',129),(2661,'FUENTE','SCIENCEDIRECT',65),(2662,'FUENTE','SCIENCEDIRECT',88),(2663,'AUTOR','Martín, Cristian',119),(2664,'AUTOR','Costa, Bruno',110),(2665,'PUBLISHER','Journal of Systems and Software',51),(2666,'AUTOR','Kang, Seokyoung',138),(2667,'KEYWORD','SQL To RDF',98),(2668,'NOT_SUPORT','161',112),(2669,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0167739X18309609',81),(2670,'NOT_SUPORT','34',142),(2671,'NOT_SUPORT','543',156),(2672,'KEYWORD','Microservice',117),(2673,'AUTOR','Zeitouni, Karine',77),(2674,'AUTOR','Newman, Stephen T.',149),(2675,'AUTOR','da Costa, Cristiano André',163),(2676,'DOI','10.1016/j.future.2019.04.020',72),(2677,'KEYWORD','Edge computing',105),(2678,'AUTOR','Nyberg, Mattias',98),(2679,'FUENTE','SCIENCEDIRECT',163),(2680,'PUBLISHER','Mechanical Systems and Signal Processing',143),(2681,'NOT_SUPORT','568',138),(2682,'AUTOR','Zahid, Rubab',152),(2683,'AUTOR','Goldsmith, Daniel',120),(2684,'PUBLISHER','Information and Software Technology',73),(2685,'NOT_SUPORT','42',142),(2686,'KEYWORD','Internet of things',85),(2687,'KEYWORD','Web Services',157),(2688,'AUTOR','Rahmani, Amir Masoud',145),(2689,'NOT_SUPORT','173',124),(2690,'NOT_SUPORT','91',68),(2691,'AUTOR','Díaz, Jessica',52),(2692,'KEYWORD','Critical information systems',81),(2693,'KEYWORD','Orchestration',141),(2694,'KEYWORD','Anomaly detection',150),(2695,'NOT_SUPORT','59',59),(2696,'PUBLISHER','CIRP Journal of Manufacturing Science and Technology',58),(2697,'AUTOR','Soria, Álvaro',157),(2698,'FUENTE','SCIENCEDIRECT',89),(2699,'DOI','10.1016/j.promfg.2020.04.052',82),(2700,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S1877050917311079',134),(2701,'NOT_SUPORT','162',71),(2702,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S2212827118300441',164),(2703,'DOI','10.1016/j.simpat.2018.09.014',132),(2704,'AUTOR','Kannan, R. Jagadeesh',162),(2705,'KEYWORD','OSLC',98),(2706,'KEYWORD','Cyber-physical society',86),(2707,'KEYWORD','Manufacturing systems',149),(2708,'AUTOR','Korotaev, Valery V.',143),(2709,'NOT_SUPORT','110701',75),(2710,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S0164121218301456',117),(2711,'AUTOR','Álvarez, Camilo',70),(2712,'NOT_SUPORT','157',51),(2713,'DOI','10.1016/j.procs.2019.08.061',121),(2714,'NOT_SUPORT','57',70),(2715,'KEYWORD','Agent-based model',85),(2716,'NOT_SUPORT','356',151),(2717,'KEYWORD','.Net',70),(2718,'KEYWORD','Social criteria',85),(2719,'NOT_SUPORT','http://www.sciencedirect.com/science/article/pii/S187705091931467X',144),(2720,'KEYWORD','system architecture',125),(2721,'NOT_SUPORT','566',127),(2722,'KEYWORD','Hybrid integration',91),(2723,'KEYWORD','Distributed Clouds',83),(2724,'FUENTE','SCIENCEDIRECT',61),(2725,'AUTOR','Deussen, Peter',142),(2726,'NOT_SUPORT','616',149),(2727,'PUBLISHER','Journal of Systems and Software',126),(2728,'KEYWORD','Orchestration',165),(2729,'AUTOR','Rudrabhatla, Chaitanya K.',165),(2730,'NOT_SUPORT','22',165),(2731,'AUTOR','Artamonov, Ivan V.',166),(2732,'KEYWORD','2 phase commit',165),(2733,'NOT_SUPORT','56.1',166),(2734,'KEYWORD','Database per service pattern',165),(2735,'KEYWORD','Reliability',166),(2736,'KEYWORD','No-SQL database',165),(2737,'KEYWORD','Computer simulation',166),(2738,'PUBLISHER','International Journal of Simulation: Systems, Science and Technology',166),(2739,'NOT_SUPORT','6',166),(2740,'NOT_SUPORT','UK Simulation Society',166),(2741,'NOT_SUPORT','cited By 0',166),(2742,'KEYWORD','Microservice',166),(2743,'KEYWORD','Saga pattern',165),(2744,'KEYWORD','Microservice architecture',165),(2745,'KEYWORD','CPN tools',166),(2746,'NOT_SUPORT','56.8',166),(2747,'NOT_SUPORT','8',165),(2748,'FUENTE','SCOPUS',166),(2749,'FUENTE','SCOPUS',165),(2750,'NOT_SUPORT','https://www.scopus.com/inward/record.uri?eid=2-s2.0-85062753578&doi=10.5013%2FIJSSST.a.19.06.56&partnerID=40&md5=065bf2919a0e55f53712a5d4d79704c0',166),(2751,'NOT_SUPORT','19',166),(2752,'PUBLISHER','International Journal of Advanced Computer Science and Applications',165),(2753,'KEYWORD','Event choreography',165),(2754,'DOI','10.5013/IJSSST.a.19.06.56',166),(2755,'KEYWORD','Coloured petri net',166),(2756,'NOT_SUPORT','9',165),(2757,'AUTOR','Sukhodolov, Alexander P.',166),(2758,'DOI','10.14569/ijacsa.2018.090804',165),(2759,'NOT_SUPORT','18',165),(2760,'AUTOR','Nouri, Reza',181),(2761,'NOT_SUPORT','18',167),(2762,'NOT_SUPORT','247',180),(2763,'KEYWORD','IoT',176),(2764,'PUBLISHER','Empirical Software Engineering',172),(2765,'KEYWORD','Fabrication as a service (FaaS)',173),(2766,'NOT_SUPORT','829',177),(2767,'AUTOR','Nazeer, Muhammad Irshad',174),(2768,'AUTOR','Ponomarev, Alexander',171),(2769,'NOT_SUPORT','Springer',177),(2770,'AUTOR','Villamizar, Mario',180),(2771,'FUENTE','SPRINGER',186),(2772,'NOT_SUPORT','Springer New York LLC',186),(2773,'DOI','10.1007/s10664-018-9651-4',179),(2774,'NOT_SUPORT','Sociedade Brasileira de Computacao - SB',170),(2775,'NOT_SUPORT','Springer',169),(2776,'PUBLISHER','Journal of Computer Science and Technology',185),(2777,'KEYWORD','Queuing network',178),(2778,'NOT_SUPORT','Zhejiang University',174),(2779,'PUBLISHER','Distributed and Parallel Databases',186),(2780,'FUENTE','SPRINGER',183),(2781,'AUTOR','Brogi, Antonio',169),(2782,'FUENTE','SPRINGER',176),(2783,'PUBLISHER','Empirical Software Engineering',179),(2784,'NOT_SUPORT','Springer London',180),(2785,'AUTOR','Castro, Harold',180),(2786,'PUBLISHER','CSI Transactions on ICT',175),(2787,'DOI','10.1007/s11390-020-9802-0',185),(2788,'AUTOR','Panichella, Annibale',172),(2789,'DOI','10.1007/s00287-019-01178-x',171),(2790,'NOT_SUPORT','1',186),(2791,'NOT_SUPORT','121',185),(2792,'KEYWORD','BPEL',184),(2793,'KEYWORD','multiple clouds',168),(2794,'AUTOR','Tabebordbar, Alireza',181),(2795,'KEYWORD','Cloud-hosted application',178),(2796,'PUBLISHER','Frontiers of Information Technology and Electronic Engineering',174),(2797,'FUENTE','SPRINGER',169),(2798,'KEYWORD','service field',168),(2799,'AUTOR','Bass, Julian M.',178),(2800,'KEYWORD','service discovery',168),(2801,'KEYWORD','Social networks analytics',181),(2802,'KEYWORD','Scalable applications',180),(2803,'NOT_SUPORT','65',175),(2804,'KEYWORD','Internet of Things (IoT)',174),(2805,'PUBLISHER','Journal of Grid Computing',167),(2806,'KEYWORD','Kafka',167),(2807,'NOT_SUPORT','3696',172),(2808,'AUTOR','Zambrano, Angee',180),(2809,'AUTOR','Seetharaman, Swaminathan',175),(2810,'AUTOR','Benatallah, Boualem',181),(2811,'AUTOR','Liu, Shuang',184),(2812,'AUTOR','Ochoa, Lina',180),(2813,'KEYWORD','SDN',182),(2814,'KEYWORD','service energy level',168),(2815,'KEYWORD','Formal semantics',184),(2816,'KEYWORD','Architectural smells',169),(2817,'KEYWORD','Refactorings',169),(2818,'AUTOR','Soldani, Jacopo',169),(2819,'KEYWORD','Parametric model checking',184),(2820,'NOT_SUPORT','37',181),(2821,'KEYWORD','Software engineering',180),(2822,'AUTOR','Sivaperumal, Sudarshan',183),(2823,'FUENTE','SPRINGER',185),(2824,'KEYWORD','Optimization',178),(2825,'AUTOR','Meinel, Christoph',186),(2826,'KEYWORD','Decision support system',178),(2827,'KEYWORD','Architectural principles',169),(2828,'NOT_SUPORT','80',167),(2829,'KEYWORD','Squeak',176),(2830,'AUTOR','Krishnaswamy, Dilip',175),(2831,'KEYWORD','Network design and analytics',182),(2832,'NOT_SUPORT','813',177),(2833,'AUTOR','Garcés, Oscar',180),(2834,'AUTOR','Zahedi, Mansooreh',179),(2835,'AUTOR','Verano, Mauricio',180),(2836,'AUTOR','Gil, Santiago',180),(2837,'NOT_SUPORT','3',179),(2838,'AUTOR','Sommerkorn-Krombholz, Bernd',182),(2839,'NOT_SUPORT','1',183),(2840,'AUTOR','Salamanca, Lorena',180),(2841,'KEYWORD','Big data analytics',181),(2842,'NOT_SUPORT','21',174),(2843,'NOT_SUPORT','351',181),(2844,'NOT_SUPORT','13',168),(2845,'AUTOR','Mao, Xinjun',168),(2846,'FUENTE','SPRINGER',172),(2847,'FUENTE','SPRINGER',184),(2848,'KEYWORD','Loke',176),(2849,'KEYWORD','Empirical study',179),(2850,'KEYWORD','Blockchain',174),(2851,'KEYWORD','Change data capture',186),(2852,'KEYWORD','Incremental discovery',186),(2853,'AUTOR','Jan, Sadeeq',172),(2854,'KEYWORD','Component',178),(2855,'DOI','10.1007/s10664-019-09707-8',172),(2856,'KEYWORD','Coherent',182),(2857,'AUTOR','Sadasivarao, Abhinava Shivakumar',182),(2858,'AUTOR','Shipman, Galen',185),(2859,'AUTOR','Briand, Lionel',172),(2860,'AUTOR','Liu, Peini',168),(2861,'NOT_SUPORT','1',173),(2862,'AUTOR','Lu, Qinghua',171),(2863,'KEYWORD','storage and I/O',185),(2864,'NOT_SUPORT','Springer Verlag',171),(2865,'KEYWORD','MVC',176),(2866,'NOT_SUPORT','5',168),(2867,'NOT_SUPORT','1',167),(2868,'AUTOR','Neri, Davide',169),(2869,'NOT_SUPORT','68',175),(2870,'AUTOR','Soumagne, Jerome',185),(2871,'AUTOR','Mendling, Jan',171),(2872,'AUTOR','Lu, Biao',182),(2873,'KEYWORD','Laypeople programming',176),(2874,'AUTOR','Snyder, Shane',185),(2875,'NOT_SUPORT','57',167),(2876,'FUENTE','SPRINGER',178),(2877,'KEYWORD','Web service composition',184),(2878,'KEYWORD','DevOps',179),(2879,'NOT_SUPORT','1',170),(2880,'KEYWORD','Algorithms',186),(2881,'PUBLISHER','Journal of Cloud Computing',173),(2882,'AUTOR','Zheng, Qing',185),(2883,'AUTOR','Mendivelso, Luis F.',170),(2884,'KEYWORD','Modeling Web services',184),(2885,'KEYWORD','Autoscaling',177),(2886,'DOI','10.1186/s13677-018-0124-5',178),(2887,'KEYWORD','distributed services',185),(2888,'KEYWORD','Docker',177),(2889,'KEYWORD','Virtual machine',177),(2890,'NOT_SUPORT','35',185),(2891,'KEYWORD','Dynamic data',186),(2892,'KEYWORD','WDM',182),(2893,'NOT_SUPORT','3',171),(2894,'AUTOR','Touhafi, Abdellah',173),(2895,'KEYWORD','Knowledge lake',181),(2896,'AUTOR','Heljanko, Keijo',167),(2897,'DOI','10.1007/s11704-018-8012-1',168),(2898,'DOI','10.1007/s00450-019-00407-8',169),(2899,'KEYWORD','Smart home',176),(2900,'NOT_SUPORT','190',171),(2901,'KEYWORD','Continuous deployment',179),(2902,'AUTOR','Di Ciccio, Claudio',171),(2903,'DOI','10.1186/s13677-019-0135-x',173),(2904,'NOT_SUPORT','563',174),(2905,'KEYWORD','Kubernetes',167),(2906,'KEYWORD','Metaheuristic',178),(2907,'KEYWORD','Data profiling',186),(2908,'NOT_SUPORT','Springer New York LLC',181),(2909,'NOT_SUPORT','42',171),(2910,'KEYWORD','Cloud',167),(2911,'NOT_SUPORT','37',186),(2912,'FUENTE','SPRINGER',170),(2913,'AUTOR','García-Bañuelos, Luciano',171),(2914,'NOT_SUPORT','8',183),(2915,'KEYWORD','Degree of isolation',178),(2916,'DOI','10.1007/s40012-020-00271-x',175),(2917,'PUBLISHER','Service Oriented Computing and Applications',180),(2918,'KEYWORD','Parameter synthesis',184),(2919,'AUTOR','Weber, Ingo',171),(2920,'AUTOR','Zhang, Shuai',168),(2921,'AUTOR','Gibson, Garth',185),(2922,'AUTOR','Li, Jian Ping',174),(2923,'KEYWORD','Cloud computing',180),(2924,'KEYWORD','Software architecture',180),(2925,'AUTOR','Cranor, Charles D.',185),(2926,'FUENTE','SPRINGER',177),(2927,'KEYWORD','Internet of Things',167),(2928,'FUENTE','SPRINGER',171),(2929,'AUTOR','Barukh, Moshe Chai',181),(2930,'NOT_SUPORT','995',168),(2931,'KEYWORD','Smart buildings',167),(2932,'AUTOR','André, Étienne',184),(2933,'KEYWORD','Microservice architecture',180),(2934,'AUTOR','Casallas, Rubby',180),(2935,'NOT_SUPORT','Springer',176),(2936,'KEYWORD','Edge',167),(2937,'KEYWORD','Microservices',169),(2938,'AUTOR','Lang, Mery',180),(2939,'DOI','10.1007/s40012-020-00281-9',183),(2940,'FUENTE','SPRINGER',167),(2941,'KEYWORD','Container',177),(2942,'AUTOR','Muntean, Gabriel Miro',173),(2943,'NOT_SUPORT','4',177),(2944,'DOI','10.1007/s10619-018-7245-1',181),(2945,'AUTOR','Doolan, Paul',182),(2946,'FUENTE','SPRINGER',175),(2947,'NOT_SUPORT','Springer',167),(2948,'AUTOR','Reenskaug, Trygve M.H.',176),(2949,'AUTOR','Valencia, Carlos',180),(2950,'AUTOR','Zimmermann, Olaf',169),(2951,'AUTOR','Arcuri, Andrea',172),(2952,'FUENTE','SPRINGER',180),(2953,'NOT_SUPORT','1',185),(2954,'AUTOR','Pedro, Joao',182),(2955,'AUTOR','Rahn, Jeff',182),(2956,'PUBLISHER','Distributed and Parallel Databases',181),(2957,'NOT_SUPORT','384',181),(2958,'DOI','10.1007/s11761-017-0208-y',180),(2959,'KEYWORD','Data center',174),(2960,'NOT_SUPORT','8',178),(2961,'NOT_SUPORT','24',179),(2962,'AUTOR','Shahin, Mojtaba',179),(2963,'AUTOR','Petrovski, Andrei',178),(2964,'NOT_SUPORT','176',186),(2965,'KEYWORD','Search-based software engineering',172),(2966,'KEYWORD','Multitenancy',178),(2967,'AUTOR','Latham, Robert',185),(2968,'AUTOR','Carns, Philip',185),(2969,'PUBLISHER','CSI Transactions on ICT',183),(2970,'KEYWORD','Optical transport',182),(2971,'FUENTE','SPRINGER',173),(2972,'KEYWORD','Code injection vulnerabilities',172),(2973,'AUTOR','Dorier, Matthieu',185),(2974,'NOT_SUPORT','133',186),(2975,'KEYWORD','Software architecture',179),(2976,'AUTOR','Liu, Yang',184),(2977,'AUTOR','Kovács, József',177),(2978,'AUTOR','Ali, Khursheed',174),(2979,'AUTOR','Binh Tran, An',171),(2980,'AUTOR','Mateos, Javier',173),(2981,'KEYWORD','Continuous delivery',179),(2982,'KEYWORD','Personal programming',176),(2983,'NOT_SUPORT','1061',179),(2984,'NOT_SUPORT','8',173),(2985,'FUENTE','SPRINGER',179),(2986,'KEYWORD','Cloud',177),(2987,'KEYWORD','TP393',174),(2988,'NOT_SUPORT','47',183),(2989,'NOT_SUPORT','Springer Verlag',173),(2990,'KEYWORD','Data curation',181),(2991,'AUTOR','Cornetta, Gianluca',173),(2992,'PUBLISHER','Journal of Cloud Computing',178),(2993,'NOT_SUPORT','Springer Science and Business Media LLC',175),(2994,'FUENTE','SPRINGER',181),(2995,'AUTOR','Chen, Manman',184),(2996,'FUENTE','SPRINGER',182),(2997,'AUTOR','Ganger, Greg',185),(2998,'NOT_SUPORT','1',178),(2999,'AUTOR','Garcés, Kelly',170),(3000,'NOT_SUPORT','3',181),(3001,'AUTOR','Dong, Jin Song',184),(3002,'KEYWORD','DCI',176),(3003,'NOT_SUPORT','6',172),(3004,'PUBLISHER','Photonic Network Communications',182),(3005,'AUTOR','Bock, Harald',182),(3006,'KEYWORD','Distributed monitoring',177),(3007,'AUTOR','Babar, Muhammad Ali',179),(3008,'KEYWORD','Cloud',174),(3009,'NOT_SUPORT','2',180),(3010,'DOI','10.1007/s10723-019-09488-w',177),(3011,'NOT_SUPORT','6',170),(3012,'AUTOR','Harms, Kevin',185),(3013,'DOI','10.1007/s10270-020-00787-5',184),(3014,'PUBLISHER','Software-Intensive Cyber-Physical Systems',169),(3015,'AUTOR','Shaabani, Nuhad',186),(3016,'NOT_SUPORT','Springer',185),(3017,'DOI','10.1631/FITEE.1800343',174),(3018,'AUTOR','Ahmed, Junaid',174),(3019,'NOT_SUPORT','Springer',182),(3020,'KEYWORD','service jumping',168),(3021,'AUTOR','Ochei, Laud Charles',178),(3022,'KEYWORD','service management',168),(3023,'PUBLISHER','Journal of Grid Computing',177),(3024,'AUTOR','Kandappan, Parthiban',182),(3025,'NOT_SUPORT','8',175),(3026,'AUTOR','Cecconi, Alessio',171),(3027,'AUTOR','Settlemyer, Bradley',185),(3028,'DOI','10.1186/s40411-018-0060-6',170),(3029,'AUTOR','Gutierrez, Samuel K.',185),(3030,'PUBLISHER','Software and Systems Modeling',184),(3031,'NOT_SUPORT','Springer New York LLC',179),(3032,'KEYWORD','Microservices',180),(3033,'FUENTE','SPRINGER',174),(3034,'NOT_SUPORT','1',175),(3035,'NOT_SUPORT','4',174),(3036,'NOT_SUPORT','Springer',184),(3037,'NOT_SUPORT','24',172),(3038,'KEYWORD','BabyIDE',176),(3039,'NOT_SUPORT','1108',179),(3040,'NOT_SUPORT','Higher Education Press',168),(3041,'KEYWORD','Cloud deployment',178),(3042,'KEYWORD','Security testing',172),(3043,'KEYWORD','Internet of the things (IoT)',173),(3044,'PUBLISHER','Frontiers of Computer Science',168),(3045,'AUTOR','Robey, Bob',185),(3046,'AUTOR','Paraschis, Loukas',182),(3047,'AUTOR','Memon, Raheel Ahmed',174),(3048,'KEYWORD','Amazon Web Services',180),(3049,'NOT_SUPORT','233',180),(3050,'KEYWORD','Smalltalk',176),(3051,'AUTOR','Tan, Tian Huat',184),(3052,'AUTOR','López-Pintado, Orlenys',171),(3053,'AUTOR','Amvrosiadis, George',185),(3054,'AUTOR','Ross, Robert B.',185),(3055,'FUENTE','SPRINGER',168),(3056,'NOT_SUPORT','3729',172),(3057,'KEYWORD','Microservice',167),(3058,'AUTOR','Casallas, Rubby',170),(3059,'KEYWORD','Cloud architectures',173),(3060,'KEYWORD','data-intensive computing',185),(3061,'PUBLISHER','Informatik-Spektrum',171),(3062,'DOI','10.1007/s11107-020-00888-7',182),(3063,'KEYWORD','Object computer',176),(3064,'AUTOR','Främling, Kary',167),(3065,'AUTOR','Javed, Asad',167),(3066,'KEYWORD','Containers',167),(3067,'PUBLISHER','Journal of Software Engineering Research and Development',170),(3068,'NOT_SUPORT','17',177),(3069,'KEYWORD','SOA',169),(3070,'AUTOR','Sun, Jun',184),(3071,'AUTOR','Hou, Fu',168),(3072,'KEYWORD','AWS Lambda',180),(3073,'AUTOR','Zhu, Liming',179),(3074,'KEYWORD','Serverless architectures',180),(3075,'AUTOR','Robert, Jérémy',167),(3076,'KEYWORD','high-performance computing',185),(3077,'AUTOR','Dumas, Marlon',171),(3078,'KEYWORD','Distributed systems',167),(3079,'AUTOR','Motahari-Nezhad, Hamid Reza',181),(3080,'KEYWORD','Feature engineering',181),(3081,'NOT_SUPORT','Springer Verlag',178),(3082,'DOI','10.1007/s10270-019-00768-3',176),(3083,'AUTOR','Robinson, Dana',185),(3084,'KEYWORD','Taxonomy',174),(3085,'AUTOR','Beheshti, Amin',181),(3086,'KEYWORD','DCI',182),(3087,'DOI','10.1007/s10619-018-7233-5',186),(3088,'NOT_SUPORT','182',171),(3089,'NOT_SUPORT','Springer',172),(3090,'PUBLISHER','Software and Systems Modeling',176),(3091,'DOI','10.1007/s10723-019-09498-8',167),(3092,'AUTOR','Ismail, Muhammad',174),(3093,'NOT_SUPORT','586',174),(3094,'NOT_SUPORT','Springer Science and Business Media LLC',183),(3095,'NOT_SUPORT','49',183),(3096,'AUTOR','Syed, Sharfuddin',182),(3097,'KEYWORD','Industry 5.0',176),(3098,'KEYWORD','Machine to machine communication',173),(3099,'NOT_SUPORT','976',168),(3100,'NOT_SUPORT','144',185),(3101,'KEYWORD','Service-oriented architectures',180),(3102,'NOT_SUPORT','11',180),(3103,'DOI','10.1109/TNSM.2018.2889009',189),(3104,'KEYWORD','Microservice',188),(3105,'NOT_SUPORT','22',190),(3106,'AUTOR','Zou, Deqing',193),(3107,'NOT_SUPORT','1',189),(3108,'NOT_SUPORT','9',190),(3109,'PUBLISHER','ACM Transactions on Internet Technology',188),(3110,'PUBLISHER','International Journal of Advanced Computer Science and Applications',190),(3111,'KEYWORD','dependability',195),(3112,'DOI','10.1109/TPDS.2019.2929389',195),(3113,'AUTOR','Chou, Chun Ting',196),(3114,'KEYWORD','Architectural tactics',187),(3115,'FUENTE','WOS',197),(3116,'NOT_SUPORT','1174',191),(3117,'KEYWORD','operations & administration',189),(3118,'AUTOR','Yang, Renyu',195),(3119,'AUTOR','Wen, Zhenyu',195),(3120,'NOT_SUPORT','New York, NY, USA',188),(3121,'AUTOR','Jin, Hai',193),(3122,'PUBLISHER','IEEE Transactions on Parallel and Distributed Systems',197),(3123,'NOT_SUPORT','18',190),(3124,'NOT_SUPORT','Association for Computing Machinery',194),(3125,'KEYWORD','Saga pattern',190),(3126,'NOT_SUPORT','31',193),(3127,'KEYWORD','Model-based controller',188),(3128,'AUTOR','Xu, Jie',195),(3129,'FUENTE','WOS',189),(3130,'KEYWORD','web applications',192),(3131,'KEYWORD','Uncertainty',188),(3132,'DOI','10.1109/TNSM.2019.2948764',196),(3133,'NOT_SUPORT','1',195),(3134,'KEYWORD','Devops',188),(3135,'KEYWORD','Microservice architecture',190),(3136,'NOT_SUPORT','4',192),(3137,'NOT_SUPORT','28',194),(3138,'FUENTE','WOS',190),(3139,'PUBLISHER','ACM Transactions on Software Engineering and Methodology',194),(3140,'KEYWORD','container-based virtualization',196),(3141,'FUENTE','WOS',191),(3142,'KEYWORD','docker',191),(3143,'AUTOR','Smet, Piet',191),(3144,'AUTOR','Jamshidi, Pooyan',188),(3145,'NOT_SUPORT','706',193),(3146,'FUENTE','WOS',188),(3147,'KEYWORD','microservice',195),(3148,'KEYWORD','mitigation',193),(3149,'NOT_SUPORT','31',195),(3150,'AUTOR','Dhoedt, Bart',191),(3151,'NOT_SUPORT','3',191),(3152,'KEYWORD','container',189),(3153,'NOT_SUPORT','55',189),(3154,'FUENTE','WOS',193),(3155,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3293455',194),(3156,'AUTOR','Bao, Liang',197),(3157,'KEYWORD','REST',194),(3158,'KEYWORD','Architectural style',188),(3159,'KEYWORD','2 phase commit',190),(3160,'AUTOR','Li, Zhi',193),(3161,'AUTOR','Carle, Georg',189),(3162,'AUTOR','Lin, Changting',195),(3163,'AUTOR','Korsten, Andreas',189),(3164,'AUTOR','Pang, Ai Chun',196),(3165,'AUTOR','Ranjan, Rajiv',195),(3166,'AUTOR','Osses, Felipe',187),(3167,'KEYWORD','Microservices',187),(3168,'KEYWORD','Database per service pattern',190),(3169,'KEYWORD','Software architecture',188),(3170,'NOT_SUPORT','16',189),(3171,'NOT_SUPORT','1419',196),(3172,'NOT_SUPORT','26',192),(3173,'AUTOR','Huang, Jian',192),(3174,'NOT_SUPORT','2321',187),(3175,'FUENTE','WOS',187),(3176,'KEYWORD','Systematic literature review',187),(3177,'AUTOR','Yuan, Bin',193),(3178,'DOI','10.1109/TLA.2018.8789551',187),(3179,'DOI','10.1109/TPDS.2019.2942591',193),(3180,'AUTOR','Shen, Mengqing',197),(3181,'NOT_SUPORT','695',193),(3182,'DOI','10.1145/3293455',194),(3183,'DOI','10.1109/TNSM.2018.2844187',191),(3184,'NOT_SUPORT','1',194),(3185,'FUENTE','WOS',192),(3186,'AUTOR','Diekmann, Cornelius',189),(3187,'KEYWORD','No-SQL database',190),(3188,'KEYWORD','cloud computing',197),(3189,'KEYWORD','tools',189),(3190,'KEYWORD','Web service',194),(3191,'KEYWORD','microservices',196),(3192,'KEYWORD','Security management',189),(3193,'KEYWORD','docker',189),(3194,'KEYWORD','on-demand',191),(3195,'AUTOR','Simoens, Pieter',191),(3196,'AUTOR','Arcuri, Andrea',194),(3197,'PUBLISHER','IEEE Transactions on Parallel and Distributed Systems',195),(3198,'NOT_SUPORT','41',189),(3199,'KEYWORD','centralized management',189),(3200,'KEYWORD','Isabelle/HOL',189),(3201,'NOT_SUPORT','129',195),(3202,'DOI','10.1145/3104028',188),(3203,'NOT_SUPORT','1161',191),(3204,'KEYWORD','Architectural patterns',187),(3205,'NOT_SUPORT','Association for Computing Machinery',188),(3206,'NOT_SUPORT','2327',187),(3207,'NOT_SUPORT','2116',197),(3208,'NOT_SUPORT','18',188),(3209,'AUTOR','Lin, Hsin Peng',196),(3210,'NOT_SUPORT','9',187),(3211,'AUTOR','Ji, Shouling',195),(3212,'KEYWORD','edge computing',196),(3213,'NOT_SUPORT','8',190),(3214,'AUTOR','Pahl, Claus',188),(3215,'NOT_SUPORT','4',196),(3216,'KEYWORD','Adaptive system',188),(3217,'NOT_SUPORT','143',195),(3218,'KEYWORD','performance modeling and prediction',197),(3219,'FUENTE','WOS',195),(3220,'AUTOR','Raji, Mohammad',192),(3221,'PUBLISHER','IEEE Transactions on Network and Service Management',189),(3222,'AUTOR','Naab, Johannes',189),(3223,'KEYWORD','taxonomy',187),(3224,'DOI','10.14569/ijacsa.2018.090804',190),(3225,'KEYWORD','visualization systems',192),(3226,'NOT_SUPORT','2101',197),(3227,'KEYWORD','cloud computing',193),(3228,'NOT_SUPORT','https://doi-org.ezproxy.utp.edu.co/10.1145/3104028',188),(3229,'AUTOR','Bu, Xiaoxuan',197),(3230,'AUTOR','Rudrabhatla, Chaitanya K.',190),(3231,'NOT_SUPORT','1434',196),(3232,'KEYWORD','Container',193),(3233,'DOI','10.1109/TVCG.2018.2879672',192),(3234,'KEYWORD','Control theory',188),(3235,'AUTOR','Hota, Alok',192),(3236,'KEYWORD','Microservice',197),(3237,'AUTOR','Wu, Chase',197),(3238,'KEYWORD','services',191),(3239,'NOT_SUPORT','16',196),(3240,'KEYWORD','Service orchestration',195),(3241,'NOT_SUPORT','1774',192),(3242,'NOT_SUPORT','3',193),(3243,'AUTOR','Marquez, Gaston',187),(3244,'AUTOR','Astudillo, Hernan',187),(3245,'PUBLISHER','IEEE Latin America Transactions',187),(3246,'KEYWORD','task scheduling',197),(3247,'KEYWORD','DDoS attack',193),(3248,'KEYWORD','Cloud computing',188),(3249,'AUTOR','Lin, Tao',195),(3250,'PUBLISHER','IEEE Transactions on Network and Service Management',196),(3251,'NOT_SUPORT','New York, NY, USA',194),(3252,'KEYWORD','industry',187),(3253,'KEYWORD','policy',189),(3254,'KEYWORD','long-tail',191),(3255,'NOT_SUPORT','2',188),(3256,'PUBLISHER','IEEE Transactions on Parallel and Distributed Systems',193),(3257,'DOI','10.1109/TPDS.2019.2901467',197),(3258,'AUTOR','Chuang, Ching Chih',196),(3259,'KEYWORD','formal methods',189),(3260,'KEYWORD','firewall',189),(3261,'KEYWORD','placement algorithm',191),(3262,'KEYWORD','cloud computing',192),(3263,'KEYWORD','Testing',194),(3264,'KEYWORD','Service-centric',191),(3265,'KEYWORD','Event choreography',190),(3266,'PUBLISHER','IEEE Transactions on Network and Service Management',191),(3267,'AUTOR','Shih, Yuan Yao',196),(3268,'KEYWORD','Cloud-native',188),(3269,'KEYWORD','Software engineering',194),(3270,'AUTOR','Hobson, Tanner',192),(3271,'NOT_SUPORT','1760',192),(3272,'FUENTE','WOS',196),(3273,'PUBLISHER','IEEE Transactions on Visualization and Computer Graphics',192),(3274,'AUTOR','Romanovsky, Alexander',195),(3275,'KEYWORD','Academy',187),(3276,'KEYWORD','Internet of Things',196),(3277,'KEYWORD','wearable device',196),(3278,'NOT_SUPORT','30',197),(3279,'KEYWORD','Orchestration',190),(3280,'NOT_SUPORT','16',187),(3281,'FUENTE','WOS',194),(3282,'KEYWORD','fog computing',196),(3283,'AUTOR','Zimmermann, Olaf',188),(3284,'KEYWORD','Network functions virtualization',196),(3285,'KEYWORD','Scientific visualization',192),(3286,'NOT_SUPORT','9',197),(3287,'AUTOR','Ren, Nana',197),(3288,'KEYWORD','and distributed visualization',192),(3289,'KEYWORD','access control',189),(3290,'NOT_SUPORT','15',191),(3291,'KEYWORD','microservice',193);
/*!40000 ALTER TABLE `METADATO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `NOTA`
--

DROP TABLE IF EXISTS `NOTA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `NOTA` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `DESCRIPCION` longtext DEFAULT NULL,
  `ETAPA` int(11) DEFAULT NULL,
  `REFERENCIA_ID` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_NOTA_REFERENCIA_ID` (`REFERENCIA_ID`),
  CONSTRAINT `FK_NOTA_REFERENCIA_ID` FOREIGN KEY (`REFERENCIA_ID`) REFERENCES `REFERENCIA` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `NOTA`
--

LOCK TABLES `NOTA` WRITE;
/*!40000 ALTER TABLE `NOTA` DISABLE KEYS */;
/*!40000 ALTER TABLE `NOTA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `OBJETIVO`
--

DROP TABLE IF EXISTS `OBJETIVO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `OBJETIVO` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CODIGO` varchar(255) DEFAULT NULL,
  `DESCRIPCION` varchar(255) DEFAULT NULL,
  `REVISION_ID` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_OBJETIVO_REVISION_ID` (`REVISION_ID`),
  CONSTRAINT `FK_OBJETIVO_REVISION_ID` FOREIGN KEY (`REVISION_ID`) REFERENCES `REVISION` (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `OBJETIVO`
--

LOCK TABLES `OBJETIVO` WRITE;
/*!40000 ALTER TABLE `OBJETIVO` DISABLE KEYS */;
INSERT INTO `OBJETIVO` VALUES (1,'G1','Identificar las estrategias para la implementación de transacciones en arquitectura basada en microservicios',1);
/*!40000 ALTER TABLE `OBJETIVO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `PREGUNTA`
--

DROP TABLE IF EXISTS `PREGUNTA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `PREGUNTA` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CODIGO` varchar(3) NOT NULL,
  `DESCRIPCION` varchar(255) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `PREGUNTA`
--

LOCK TABLES `PREGUNTA` WRITE;
/*!40000 ALTER TABLE `PREGUNTA` DISABLE KEYS */;
INSERT INTO `PREGUNTA` VALUES (1,'RQ1','¿Cuáles son las estrategias usadas para la implementación de transacciones en arquitectura basada en microservicios?'),(2,'RQ2','¿Cuáles son las características de las estrategias para la implementación de transacciones en la arquitectura basada en microservicios?');
/*!40000 ALTER TABLE `PREGUNTA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `PREGUNTA_OBJETIVO`
--

DROP TABLE IF EXISTS `PREGUNTA_OBJETIVO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `PREGUNTA_OBJETIVO` (
  `preguntas_ID` int(11) NOT NULL,
  `objetivos_ID` int(11) NOT NULL,
  PRIMARY KEY (`preguntas_ID`,`objetivos_ID`),
  KEY `FK_PREGUNTA_OBJETIVO_objetivos_ID` (`objetivos_ID`),
  CONSTRAINT `FK_PREGUNTA_OBJETIVO_objetivos_ID` FOREIGN KEY (`objetivos_ID`) REFERENCES `OBJETIVO` (`ID`),
  CONSTRAINT `FK_PREGUNTA_OBJETIVO_preguntas_ID` FOREIGN KEY (`preguntas_ID`) REFERENCES `PREGUNTA` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `PREGUNTA_OBJETIVO`
--

LOCK TABLES `PREGUNTA_OBJETIVO` WRITE;
/*!40000 ALTER TABLE `PREGUNTA_OBJETIVO` DISABLE KEYS */;
INSERT INTO `PREGUNTA_OBJETIVO` VALUES (1,1),(2,1);
/*!40000 ALTER TABLE `PREGUNTA_OBJETIVO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `QUERIES`
--

DROP TABLE IF EXISTS `QUERIES`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `QUERIES` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `QUERIES`
--

LOCK TABLES `QUERIES` WRITE;
/*!40000 ALTER TABLE `QUERIES` DISABLE KEYS */;
/*!40000 ALTER TABLE `QUERIES` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `REFERENCIA`
--

DROP TABLE IF EXISTS `REFERENCIA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `REFERENCIA` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `CITAS` int(11) DEFAULT NULL,
  `FILTRO` int(11) DEFAULT NULL,
  `NOMBRE` longtext DEFAULT NULL,
  `NOTA` longtext DEFAULT NULL,
  `PONDERACIONCITAS` float DEFAULT NULL,
  `RELEVANCIA` int(11) DEFAULT NULL,
  `RESUMEN` longtext DEFAULT NULL,
  `SCI` float DEFAULT NULL,
  `SPSID` varchar(50) DEFAULT NULL,
  `SRRQI` float DEFAULT NULL,
  `TIPO` varchar(255) DEFAULT NULL,
  `TOTALEVALUACIONCALIDAD` float DEFAULT NULL,
  `YEAR` varchar(4) DEFAULT NULL,
  `REVISION_ID` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_REFERENCIA_REVISION_ID` (`REVISION_ID`),
  CONSTRAINT `FK_REFERENCIA_REVISION_ID` FOREIGN KEY (`REVISION_ID`) REFERENCES `REVISION` (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=198 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `REFERENCIA`
--

LOCK TABLES `REFERENCIA` WRITE;
/*!40000 ALTER TABLE `REFERENCIA` DISABLE KEYS */;
INSERT INTO `REFERENCIA` VALUES (1,NULL,1,'Introduction to the special issue on emerging software technologies for internet-based systems: Internetware and DevOps','No aplica',NULL,NULL,NULL,NULL,NULL,NULL,'JOUR',NULL,'2018',1),(2,NULL,1,'Enabling Workload Engineering in Edge, Fog, and Cloud Computing through OpenStack-based Middleware','No aplica',NULL,NULL,'To enable and support smart environments, a recent ICT trend promotes pushing computation from the remote Cloud as close to data sources as possible, resulting in the emergence of the Fog and Edge computing paradigms. Together with Cloud computing, they represent a stacked architecture, in which raw datasets are first pre-processed locally at the Edge and then vertically offloaded to the Fog and/or the Cloud. However, as hardware is becoming increasingly powerful, Edge devices are seen as candidates for offering data processing capabilities, able to pool and share computing resources to achieve better performance at a lower network latency-a pattern that can be also applied to Fog nodes. In these circumstances, it is important to enable efficient, intelligent, and balanced allocation of resources, as well as their further orchestration, in an elastic and transparent manner. To address such a requirement, this article proposes an OpenStack-based middleware platform through which resource containers at the Edge, Fog, and Cloud levels can be discovered, combined, and provisioned to end users and applications, thereby facilitating and orchestrating offloading processes. As demonstrated through a proof of concept on an intelligent surveillance system, by converging the Edge, Fog, and Cloud, the proposed architecture has the potential to enable faster data processing, as compared to processing at the Edge, Fog, or Cloud levels separately. This also allows architects to combine different offloading patterns in a flexible and fine-grained manner, thus providing new workload engineering patterns. Measurements demonstrated the effectiveness of such patterns, even outperforming edge clusters.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(3,NULL,1,'Test-based security certification of composite services','No aplica',NULL,NULL,'The diffusion of service-based and cloud-based systems has created a scenario where software is often made available as services, offered as commodities over corporate networks or the global net. This scenario supports the definition of business processes as composite services, which are implemented via either static or runtime composition of offerings provided by different suppliers. Fast and accurate evaluation of services\' security properties becomes then a fundamental requirement and is nowadays part of the software development process. In this article, we show how the verification of security properties of composite services can be handled by test-based security certification and built to be effective and efficient in dynamic composition scenarios. Our approach builds on existing security certification schemes for monolithic services and extends them towards service compositions. It virtually certifies composite services, starting from certificates awarded to the component services.We describe three heuristic algorithms for generating runtime test-based evidence of the composite service holding the properties. These algorithms are compared with the corresponding exhaustive algorithm to evaluate their quality and performance.We also evaluate the proposed approach in a real-world industrial scenario, which considers ENGpay online payment system of Engineering Ingegneria Informatica S.p.A. The proposed industrial evaluation presents the utility and generality of the proposed approach by showing how certification results can be used as a basis to establish compliance to Payment Card Industry Data Security Standard.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(4,NULL,1,'Cloud pricing models: Taxonomy, survey, and interdisciplinary challenges','No plica',NULL,NULL,'This article provides a systematic review of cloud pricing in an interdisciplinary approach. It examines many historical cases of pricing in practice and tracks down multiple roots of pricing in research. The aim is to help both cloud service provider (CSP) and cloud customers to capture the essence of cloud pricing when they need to make a critical decision either to achieve competitive advantages or to manage cloud resource effectively. Currently, the number of available pricing schemes in the cloud market is overwhelming. It is an intricate issue to understand these schemes and associated pricing models clearly due to involving several domains of knowledge, such as cloud technologies, microeconomics, operations research, and value theory. Some earlier studies have introduced this topic unsystematically. Their approaches inevitably lead to much confusion for many cloud decision-makers. To address their weaknesses, we present a comprehensive taxonomy of cloud pricing, which is driven by a framework of three fundamental pricing strategies that are built on nine cloud pricing categories. These categories can be further mapped onto a total of 60 pricing models. Many of the pricing models have been already adopted by CSPs. Others have been widespread across in other industries. We give descriptions of these model categories and highlight both advantages and disadvantages. Moreover, this article offers an extensive survey of many cloud pricing models that were proposed by many researchers during the past decade. Based on the survey, we identify four trends of cloud pricing and the general direction, which is moving from intrinsic value per physical box to extrinsic value per serverless sandbox. We conclude that hyper-converged cloud resources pool supported by cloud orchestration, virtual machine, Open Application Programming Interface, and serverless sandbox will drive the future of cloud pricing.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(5,NULL,1,'A manifesto for future generation cloud computing: Research directions for the next decade','No aplica, pero puede justificar la adopción de microservicios basado en la escalabilidad y compatibilidad con el cloud computing',NULL,1,'The Cloud computing paradigm has revolutionised the computer science horizon during the past decade and has enabled the emergence of computing as the fifth utility. It has captured significant attention of academia, industries, and government bodies. Now, it has emerged as the backbone of modern economy by offering subscription-based services anytime, anywhere following a pay-as-you-go model. This has instigated (1) shorter establishment times for start-ups, (2) creation of scalable global enterprise applications, (3) better cost-to-value associativity for scientific and high-performance computing applications, and (4) different invocation/execution models for pervasive and ubiquitous applications. The recent technological developments and paradigms such as serverless computing, software-defined networking, Internet of Things, and processing at network edge are creating new opportunities for Cloud computing. However, they are also posing several new challenges and creating the need for new approaches and research strategies, as well as the re-evaluation of the models that were developed to address issues such as scalability, elasticity, reliability, security, sustainability, and application models. The proposed manifesto addresses them by identifying the major open challenges in Cloud computing, emerging trends, and impact areas. It then offers research directions for the next decade, thus helping in the realisation of Future Generation Cloud Computing.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(6,NULL,1,'RESTful API automated test case generation with Evomaster','No aplica',NULL,NULL,'RESTful APIs are widespread in industry, especially in enterprise applications developed with a microservice architecture. A RESTful web service will provide data via an API over the network using HTTP, possibly interacting with databases and other web services. Testing a RESTful API poses challenges, because inputs/outputs are sequences of HTTP requests/responses to a remote server. Many approaches in the literature do black-box testing, because often the tested API is a remote service whose code is not available. In this article, we consider testing from the point of view of the developers, who have full access to the code that they are writing. Therefore, we propose a fully automated white-box testing approach, where test cases are automatically generated using an evolutionary algorithm. Tests are rewarded based on code coverage and fault-finding metrics. However, REST is not a protocol but rather a set of guidelines on how to design resources accessed over HTTP endpoints. For example, there are guidelines on how related resources should be structured with hierarchical URIs and how the different HTTP verbs should be used to represent well-defined actions on those resources. Test-case generation for RESTful APIs that only rely on white-box information of the source code might not be able to identify how to create prerequisite resources needed before being able to test some of the REST endpoints. Smart sampling techniques that exploit the knowledge of best practices in RESTful API design are needed to generate tests with predefined structures to speed up the search. We implemented our technique in a tool called EvoMaster, which is open source. Experiments on five open-source, yet non-trivial, RESTful services show that our novel technique automatically found 80 real bugs in those applications. However, obtained code coverage is lower than the one achieved by the manually written test suites already existing in those services. Research directions on how to further improve such an approach are therefore discussed, such as the handling of SQL databases.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(7,NULL,1,'Cloud Deployment Tradeoffs for the Analysis of Spatially Distributed Internet of Things Systems','No aplica',NULL,NULL,'Internet-enabled devices operating in the physical world are increasingly integrated in modern distributed systems. We focus on systems where the dynamics of spatial distribution is crucial; in such cases, devices may need to carry out complex computations (e.g., analyses) to check satisfaction of spatial requirements. The requirements are partly global - as the overall system should achieve certain goals - and partly individual, as each entity may have different goals. Assurance may be achieved by keeping a model of the system at runtime, monitoring events that lead to changes in the spatial environment, and performing requirements analysis. However, computationally intensive runtime spatial analysis cannot be supported by resource-constrained devices and may be offloaded to the cloud. In such a scenario, multiple challenges arise regarding resource allocation, cost, performance, among other dimensions. In particular, when the workload is unknown at the system\'s design time, it may be difficult to guarantee application-service-level agreements, e.g., on response times. To address and reason on these challenges, we first instantiate complex computations as microservices and integrate them to an IoT-cloud architecture. Then, we propose alternative cloud deployments for such an architecture - based on virtual machines, containers, and the recent Functions-as-a-Service paradigm. Finally, we assess the feasibility and tradeoffs of the different deployments in terms of scalability, performance, cost, resource utilization, and more. We adopt a workload scenario from a known dataset of taxis roaming in Beijing, and we derive other workloads to represent unexpected request peaks and troughs. The approach may be replicated in the design process of similar classes of spatially distributed IoT systems.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(8,NULL,1,'Quantifying cloud performance and dependability: Taxonomy, metric design, and emerging challenges','No aplica',NULL,NULL,'In only a decade, cloud computing has emerged from a pursuit for a service-driven information and communication technology (ICT), becoming a significant fraction of the ICT market. Responding to the growth of the market, many alternative cloud services and their underlying systems are currently vying for the attention of cloud users and providers. To make informed choices between competing cloud service providers, permit the cost-benefit analysis of cloud-based systems, and enable system DevOps to evaluate and tune the performance of these complex ecosystems, appropriate performance metrics, benchmarks, tools, and methodologies are necessary. This requires re-examining old system properties and considering new system properties, possibly leading to the re-design of classic benchmarking metrics such as expressing performance as throughput and latency (response time). In this work, we address these requirements by focusing on four system properties: (i) elasticity of the cloud service, to accommodate large variations in the amount of service requested, (ii) performance isolation between the tenants of shared cloud systems and resulting performance variability, (iii) availability of cloud services and systems, and (iv) the operational risk of running a production system in a cloud environment. Focusing on key metrics for each of these properties, we review the state-of-the-art, then select or propose new metrics together with measurement approaches. We see the presented metrics as a foundation toward upcoming, future industry-standard cloud benchmarks.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(9,NULL,1,'A scalable framework for provisioning large-scale IoT deployments','No aplica',NULL,NULL,'Internet of Things (IoT) devices are usually considered external application dependencies that only provide data or process and execute simple instructions. The recent emergence of IoT devices with embedded execution environments allows practitioners to deploy and execute custom application logic directly on the device. This approach fundamentally changes the overall process of designing, developing, deploying, and managing IoT systems. However, these devices exhibit significant differences in available execution environments, processing, and storage capabilities. To accommodate this diversity, a structured approach is needed to uniformly and transparently deploy application components onto a large number of heterogeneous devices. This is especially important in the context of large-scale IoT systems, such as in the smart city domain. In this article, we present LEONORE, an infrastructure toolset that provides elastic provisioning of application components on resource-constrained and heterogeneous edge devices in large-scale IoT deployments. LEONORE supports push-based as well as pull-based deployments. To improve scalability and reduce generated network traffic between cloud and edge infrastructure, we present a distributed provisioning approach that deploys LEONORE local nodes within the deployment infrastructure close to the actual edge devices. We show that our solution is able to elastically provision large numbers of devices using a testbed based on a real-world industry scenario.',NULL,NULL,NULL,'JOUR',NULL,'2016',1),(10,NULL,1,'Understanding the knowledge gaps of software engineers: An empirical analysis based on SWEBOK','Puede servir para el marco teórico',NULL,1,'Context: Knowledge level and productivity of the software engineering (SE) workforce are the subject of regular discussions among practitioners, educators, and researchers. There have beenmany efforts tomeasure and improve the knowledge gap between SE education and industrial needs. Objective: Although the existing efforts for aligning SE education and industrial needs have provided valuable insights, there is a need for analyzing the SE topics in a more \"fine-grained\" manner; i.e., knowing that SE university graduates should know more about requirements engineering is important, but it is more valuable to know the exact topics of requirements engineering that are most important in the industry. Method: We achieve the above objective by assessing the knowledge gaps of software engineers by designing and executing an opinion survey on levels of knowledge learned in universities versus skills needed in industry. We designed the survey by using the SE knowledge areas (KAs) from the latest version of the Software Engineering Body of Knowledge (SWEBOK v3), which classifies the SE knowledge into 12 KAs, which are themselves broken down into 67 subareas (sub-KAs) in total. Our analysis is based on (opinion) data gathered from 129 practitioners, who are mostly based in Turkey. Results: Based on our findings, we recommend that educators should include more materials on software maintenance, software configuration management, and testing in their SE curriculum. Based on the literature as well as the current trends in industry, we provide actionable suggestions to improve SE curriculum to decrease the knowledge gap.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(11,NULL,1,'A unified model for the mobile-edge-cloud continuum','No esta enfocado en transacciones',NULL,NULL,'Technologies such as mobile, edge, and cloud computing have the potential to form a computing continuum for new, disruptive applications. At runtime, applications can choose to execute parts of their logic on different infrastructures that constitute the continuum, with the goal of minimizing latency and battery consumption and maximizing availability. In this article, we propose A3-E, a unified model for managing the life cycle of continuum applications. In particular, A3-E exploits the Functions-as-a-Service model to bring computation to the continuum in the form of microservices. Furthermore, A3-E selects where to execute a certain function based on the specific context and user requirements. The article also presents a prototype framework that implements the concepts behind A3-E. Results show that A3-E is capable of dynamically deploying microservices and routing the application\'s requests, reducing latency by up to 90% when using edge instead of cloud resources, and battery consumption by 74% when computation has been offloaded.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(12,NULL,1,'Scientific workflows: Moving across paradigms','No aplica',NULL,NULL,'Modern scientific collaborations have opened up the opportunity to solve complex problems that require both multidisciplinary expertise and large-scale computational experiments. These experiments typically consist of a sequence of processing steps that need to be executed on selected computing platforms. Execution poses a challenge, however, due to (1) the complexity and diversity of applications, (2) the diversity of analysis goals, (3) the heterogeneity of computing platforms, and (4) the volume and distribution of data. A common strategy tomake these in silico experiments more manageable is tomodel them as workflows and to use a workflow management system to organize their execution. This article looks at the overall challenge posed by a new order of scientific experiments and the systems they need to be run on, and examines how this challenge can be addressed by workflows and workflow management systems. It proposes a taxonomy of workflow management system (WMS) characteristics, including aspects previously overlooked. This frames a review of prevalent WMSs used by the scientific community, elucidates their evolution to handle the challenges arising with the emergence of the \"fourth paradigm,\" and identifies research needed to maintain progress in this area.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(13,NULL,1,'Online detection of effectively callback free objects with applications to smart contracts','No aplica',NULL,NULL,'Callbacks are essential in many programming environments, but drastically complicate program understanding and reasoning because they allow to mutate object\'s local states by external objects in unexpected fashions, thus breaking modularity. The famous DAO bug in the cryptocurrency framework Ethereum, employed callbacks to steal $150M. We define the notion of Effectively Callback Free (ECF) objects in order to allow callbacks without preventing modular reasoning. An object is ECF in a given execution trace if there exists an equivalent execution trace without callbacks to this object. An object is ECF if it is ECF in every possible execution trace. We study the decidability of dynamically checking ECF in a given execution trace and statically checking if an object is ECF. We also show that dynamically checking ECF in Ethereum is feasible and can be done online. By running the history of all execution traces in Ethereum, we were able to verify that virtually all existing contracts, excluding the DAO or contracts with similar known vulnerabilities, are ECF. Finally, we show that ECF, whether it is verified dynamically or statically, enables modular reasoning about objects with encapsulated state.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(14,NULL,1,'Democratizing authority in the built environment','No aplica',NULL,NULL,'Operating systems and applications in the built environment have relied upon central authorization and management mechanisms that restrict their scalability, especially with respect to administrative overhead. We propose a new set of primitives encompassing syndication, security, and service execution that unifies the management of applications and services across the built environment, while enabling participants to individually delegate privilege across multiple administrative domains with no loss of security or manageability. We show how to leverage a decentralized authorization syndication platform to extend the design of building operating systems beyond the single administrative domain of a building. The authorization system leveraged is based on blockchain smart contracts to permit decentralized and democratized delegation of authorization without central trust. Upon this, a publish/subscribe syndication tier and a containerized service execution environment are constructed. Combined, these mechanisms solve problems of delegation, federation, device protection and service execution that arise throughout the built environment. We leverage a high-fidelity city-scale emulation to verify the scalability of the authorization tier, and briefly describe a prototypical democratized operating system for the built environment using this foundation.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(15,NULL,1,'Performance in the Spotlight','No aplica',NULL,NULL,'Performance in its various guises features prominently in research evaluations, and rightly so. Without adequate performance a system is not fit for purpose. That doesn\'t necessarily mean we should pursue performance at all costs though. In this talk we\'ll explore a variety of additional evaluation criteria, with a focus on those that are most important to practitioners, and ask whether or not considering them can open up interesting avenues of research.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(16,NULL,1,'Machine learning methods for reliable resource provisioning in edge-cloud computing: A survey','No aplica',NULL,NULL,'Large-scale software systems are currently designed as distributed entities and deployed in cloud data centers. To overcome the limitations inherent to this type of deployment, applications are increasingly being supplemented with components instantiated closer to the edges of networks—a paradigm known as edge computing. The problem of how to efficiently orchestrate combined edge-cloud applications is, however, incompletely understood, and a wide range of techniques for resource and application management are currently in use. This article investigates the problem of reliable resource provisioning in joint edge-cloud environments, and surveys technologies, mechanisms, and methods that can be used to improve the reliability of distributed applications in diverse and heterogeneous network environments. Due to the complexity of the problem, special emphasis is placed on solutions to the characterization, management, and control of complex distributed applications using machine learning approaches. The survey is structured around a decomposition of the reliable resource provisioning problem into three categories of techniques: workload characterization and prediction, component placement and system consolidation, and application elasticity and remediation. Survey results are presented along with a problem-oriented discussion of the state-of-the-art. A summary of identified challenges and an outline of future research directions are presented to conclude the article.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(17,NULL,1,'EIC Message','No aplica',NULL,NULL,NULL,NULL,NULL,NULL,'JOUR',NULL,'2020',1),(18,NULL,1,'MARC: A resource consumption modeling service for self-aware autonomous agents','No aplica',NULL,NULL,'Autonomicity is a golden featurewhen dealing with a high level of complexity. This complexity can be tackled partitioning huge systems in small autonomous modules, i.e., agents. Each agent then needs to be capable of extracting knowledge from its environment and to learn from it, in order to fulfill its goals: this could not be achievedwithout proper modeling techniques that alloweach agent to gaze beyond its sensors. Unfortunately, the simplicity of agents and the complexity of modeling do not fit together, thus demanding for a third party to bridge the gap. Given the opportunities in the field, the main contributions of this work are twofold: (1) we propose a general methodology to model resource consumption trends and (2) we implemented it into MARC, a Cloudservice platform that produces Models-as-a-Service, thus relieving self-aware agents from the burden of building their custom modeling framework. In order to validate the proposed methodology, we set up a custom simulator to generate a wide spectrum of controlled traces: this allowed us to verify the correctness of our framework from a general and comprehensive point of view.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(19,NULL,1,'End-to-end security for local and remote human genetic data applications at the EGA','No aplica',NULL,NULL,'Sensitive genomic data should remain secure - whether on disk for storage, or analysis, or in transport. However, secure storage, delivery, and usage of genomic data is complicated by the size of files and diversity of workflows. This paper presents solutions developed by GA4GH and EGA to use custom-ized encryption, encrypted file formats, toolchain integration, and intelligent APIs to help solve this problem.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(20,NULL,1,'Vehicular-OBUs-As-On-Demand-Fogs: Resource and Context Aware Deployment of Containerized Micro-Services','No aplica',NULL,NULL,'Observing the headway in vehicular industry, new applications are developed demanding more resources. For instance, real-time vehicular applications require fast processing of the vast amount of generated data by vehicles in order to maintain service availability and reachability while driving. Fog devices are capable of bringing cloud intelligence near the edge, making them a suitable candidate to process vehicular requests. However, their location, processing power, and technology used to host and update services affect their availability and performance while considering the mobility patterns of vehicles. In this paper, we overcome the aforementioned limitations by taking advantage of the evolvement of On-Board Units, Kubeadm Clustering, Docker Containerization, and micro-services technologies. In this context, we propose an efficient resource and context aware approach for deploying containerized micro-services on on-demand fogs called Vehicular-OBUs-As-On-Demand-Fogs. Our proposed scheme embeds (1) a Kubeadm based approach for clustering OBUs and enabling on-demand micro-services deployment with the least costs and time using Docker containerization technology, (2) a hybrid multi-layered networking architecture to maintain reachability between the requesting user and available vehicular fog cluster, and (3) a vehicular multi-objective container placement model for producing efficient vehicles selection and services distribution. An Evolutionary Memetic Algorithm is elaborated to solve our vehicular container placement problem. Experiments and simulations demonstrate the relevance and efficiency of our approach compared to other recent techniques in the literature.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(21,NULL,1,'Formal foundations of serverless computing','No aplica',NULL,NULL,'Serverless computing (also known as functions as a service) is a new cloud computing abstraction that makes it easier to write robust, large-scale web services. In serverless computing, programmers write what are called serverless functions, and the cloud platform transparently manages the operating system, resource allocation, load-balancing, and fault tolerance. When demand for the service spikes, the platform automatically allocates additional hardware to the service and manages load-balancing; when demand falls, the platform silently deallocates idle resources; and when the platform detects a failure, it transparently retries affected requests. In 2014, Amazon Web Services introduced the first serverless platform, AWS Lambda, and similar abstractions are now available on all major cloud computing platforms. Unfortunately, the serverless computing abstraction exposes several low-level operational details that make it hard for programmers to write and reason about their code. This paper sheds light on this problem by presenting $\\lambda_\\Lambda$, an operational semantics of the essence of serverless computing. Despite being a small (half a page) core calculus, $\\lambda_\\Lambda$ models all the low-level details that serverless functions can observe. To show that $\\lambda_\\Lambda$ is useful, we present three applications. First, to ease reasoning about code, we present a simplified naive semantics of serverless execution and precisely characterize when the naive semantics and $\\lambda_\\Lambda$ coincide. Second, we augment $\\lambda_\\Lambda$ with a key-value store to allow reasoning about stateful serverless functions. Third, since a handful of serverless platforms support serverless function composition, we show how to extend $\\lambda_\\Lambda$ with a composition language. We have implemented this composition language and show that it outperforms prior work.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(22,NULL,1,'Visualizing Distributed System Executions','No aplica',NULL,NULL,'Distributed systems pose unique challenges for software developers. Understanding the system\'s communication topology and reasoning about concurrent activities of system hosts can be difficult. The standard approach, analyzing system logs, can be a tedious and complex process that involves reconstructing a system log from multiple hosts\' logs, reconciling timestamps among hosts with non-synchronized clocks, and understanding what took place during the execution encoded by the log. This article presents a novel approach for tackling three tasks frequently performed during analysis of distributed system executions: (1) understanding the relative ordering of events, (2) searching for specific patterns of interaction between hosts, and (3) identifying structural similarities and differences between pairs of executions. Our approach consists of XVector, which instruments distributed systems to capture partial ordering information that encodes the happens-before relation between events, and ShiViz, which processes the resulting logs and presents distributed system executions as interactive time-space diagrams. Two user studies with a total of 109 students and a case study with 2 developers showed that our method was effective, helping participants answer statistically significantly more system-comprehension questions correctly, with a very large effect size.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(23,NULL,1,'Derecho: Fast state machine replication for cloud services','No aplica',NULL,NULL,'Cloud computing services often replicate data and may require ways to coordinate distributed actions. Here we present Derecho, a library for such tasks. The API provides interfaces for structuring applications into patterns of subgroups and shards, supports state machine replication within them, and includes mechanisms that assist in restart after failures. Running over 100Gbps RDMA, Derecho can send millions of events per second in each subgroup or shard and throughput peaks at 16GB/s, substantially outperforming prior solutions. Configured to run purely on TCP, Derecho is still substantially faster than comparable widely used, highly-tuned, standard tools. The key insight is that on modern hardware (including non-RDMA networks), data-intensive protocols should be built from non-blocking data-flow components.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(24,54,3,'Architectural principles for cloud software','RQ1 (posiblemente)\n\nUna nube es un sistema de software distribuido basado en Internet que proporciona recursos como servicios en niveles. Mediante la orientación al servicio y la virtualización para el aprovisionamiento de recursos, las aplicaciones en la nube se pueden implementar y administrar dinámicamente. Hablamos de los bloques de construcción de un estilo arquitectónico para sistemas de software basados en la nube. Capturamos principios y patrones arquitectónicos que definen el estilo para arquitecturas basadas en modelos y teóricos de control para software en la nube. Si bien la orientación del servicio se acuerda en forma de arquitectura orientada a servicios y microservicios, los desafíos resultantes de arquitecturas de nube de varios niveles, distribuidas y heterogéneas causan incertidumbre que no se ha abordado suficientemente. Definimos los principios y patrones necesarios para el desarrollo y el funcionamiento efectivos de sistemas adaptables nativos de la nube.',NULL,2,'A cloud is a distributed Internet-based software system providing resources as tiered services. Through service-orientation and virtualization for resource provisioning, cloud applications can be deployed and managed dynamically. We discuss the building blocks of an architectural style for cloud-based software systems. We capture style-defining architectural principles and patterns for control-theoretic, model-based architectures for cloud software. While service orientation is agreed on in the form of service-oriented architecture and microservices, challenges resulting from multi-tiered, distributed and heterogeneous cloud architectures cause uncertainty that has not been sufficiently addressed. We define principles and patterns needed for effective development and operation of adaptive cloud-native systems.',18,'SPS005',0,'JOUR',1,'2018',1),(25,NULL,1,'A meta-model for information systems quality: A mixed study of the financial sector','No aplica',NULL,NULL,'Information Systems Quality (ISQ) is a critical source of competitive advantages for organizations. In a scenario of increasing competition on digital services, ISQ is a competitive differentiation asset. In this regard, managing, maintaining, and evolving IT infrastructures have become a primary concern of organizations. Thus, a technical perspective on ISQ provides useful guidance to meet current challenges. The financial sector is paradigmatic, since it is a traditional business, with highly complex business-critical legacy systems, facing a tremendous change due to market and regulation drivers. We carried out a Mixed-Methods study, performing a Delphi-like study on the financial sector. We developed a specific research framework to pursue this vertical study. Data were collected in four phases starting with a high-level randomly stratified panel of 13 senior managers and then a target panel of 124 carefully selected and well-informed domain experts. We have identified and dealt with several quality factors; they were discussed in a comprehensive model inspired by the ISO 25010, 42010, and 12207 standards, corresponding to software quality, software architecture, and software process, respectively. Our results suggest that the relationship among quality, architecture, and process is a valuable technical perspective to explain the quality of an information system. Thus, we introduce and illustrate a novel meta-model, named SQuAP (Software Quality, Architecture, Process), which is intended to give a comprehensive picture of ISQ by abstracting and connecting detailed individual ISO models.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(26,NULL,1,'Handling SQL Databases in Automated System Test Generation','No aplica',NULL,NULL,NULL,NULL,NULL,NULL,'JOUR',NULL,'2020',1),(27,NULL,1,'Stateful functions as a service in action','No aplica',NULL,NULL,'In the serverless model, users upload application code to a cloud platform and the cloud provider undertakes the deployment, execution and scaling of the application, relieving users from all operational aspects. Although very popular, current serverless offerings offer poor support for the management of local application state, the main reason being that managing state and keeping it consistent at large scale is very challenging. As a result, the serverless model is inadequate for executing stateful, latency-sensitive applications. In this paper we present a high-level programming model for developing stateful functions and deploying them in the cloud. Our programming model allows functions to retain state as well as call other functions. In order to deploy stateful functions in a cloud infrastructure, we translate functions and their data exchanges into a stateful data ow graph. With this paper we aim at demonstrating that using a modified version of an open-source data ow engine as a runtime for stateful functions, we can deploy scalable and stateful services in the cloud with surprisingly low latency and high throughput.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(28,NULL,1,'Guest editors\' introduction to the special issue on fog, edge, and cloud integration for smart environments','No aplica',NULL,NULL,NULL,NULL,NULL,NULL,'JOUR',NULL,'2019',1),(29,NULL,1,'From devops to bizops: Economic sustainability for scalable cloud applications','No aplica',NULL,NULL,'Virtualization of resources in cloud computing has enabled developers to commission and recommission resources at will and on demand. This virtualization is a coin with two sides. On one hand, the flexibility in managing virtual resources has enabled developers to efficiently manage their costs; they can easily remove unnecessary resources or add resources temporarily when the demand increases. On the other hand, the volatility of such environment and the velocity with which changes can occur may have a greater impact on the economic position of a stakeholder and the business balance of the overall ecosystem. In this work, we recognise the business ecosystem of cloud computing as an economy of scale and explore the effect of this fact on decisions concerning scaling the infrastructure of web applications to account for fluctuations in demand. The goal is to reveal and formalize opportunities for economically optimal scaling that takes into account not only the cost of infrastructure but also the revenue from service delivery and eventually the profit of the service provider. The end product is a scaling mechanism that makes decisions based on both performance and economic criteria and takes adaptive actions to optimize both performance and profitability for the system.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(30,NULL,1,'A history of Clojure','No aplica',NULL,NULL,NULL,NULL,NULL,NULL,'JOUR',NULL,'2020',1),(31,NULL,1,'A.M.B.R.O.S.I.A: providing performant virtual resiliency for distributed applications','No aplica',NULL,NULL,'When writing today\'s distributed programs, which frequently span both devices and cloud services, programmers are faced with complex decisions and coding tasks around coping with failure, especially when these distributed components are stateful. If their application can be cast as pure data processing, they benefit from the past 40-50 years of work from the database community, which has shown how declarative database systems can completely isolate the developer from the possibility of failure in a performant manner. Unfortunately, while there have been some attempts at bringing similar functionality into the more general distributed programming space, a compelling general-purpose system must handle non-determinism, be performant, support a variety of machine types with varying resiliency goals, and be language agnostic, allowing distributed components written in different languages to communicate. This paper introduces Ambrosia, the first system to satisfy all these requirements. We coin the term \"virtual resiliency\", analogous to virtual memory, for the platform feature which allows failure oblivious code to run in a failure resilient manner. We also introduce novel programming language constructs for resiliently handling non-determinism. Of further interest is the effective reapplication of much database performance optimization technology to make Ambrosia more performant than many of today\'s non-resilient cloud solutions.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(32,NULL,1,'A survey of opinion mining in Arabic: A comprehensive system perspective covering challenges and advances in tools, resources, models, applications, and visualizations','No aplica',NULL,NULL,'Opinion-mining or sentiment analysis continues to gain interest in industry and academics. While there has been significant progress in developing models for sentiment analysis, the field remains an active area of research for many languages across the world, and in particular for the Arabic language, which is the fifth most-spoken language and has become the fourth most-used language on the Internet. With the flurry of research activity in Arabic opinion mining, several researchers have provided surveys to capture advances in the field. While these surveys capture a wealth of important progress in the field, the fast pace of advances in machine learning and natural language processing (NLP) necessitates a continuous need for a more up-to-date literature survey. The aim of this article is to provide a comprehensive literature survey for state-of-the-art advances in Arabic opinion mining. The survey goes beyond surveying previous works that were primarily focused on classification models. Instead, this article provides a comprehensive system perspective by covering advances in different aspects of an opinion-mining system, including advances in NLP software tools, lexical sentiment and corpora resources, classification models, and applications of opinion mining. It also presents future directions for opinion mining in Arabic. The survey also covers latest advances in the field, including deep learning advances in Arabic Opinion Mining. The article provides state-of-the-art information to help new or established researchers in the field as well as industry developers who aim to deploy an operational complete opinion-mining system. Key insights are captured at the end of each section for particular aspects of the opinion-mining system giving the reader a choice of focusing on particular aspects of interest.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(33,NULL,1,'Fog computing for the Internet of Things: A survey','No aplica',NULL,NULL,'Research in the Internet of Things (IoT) conceives a world where everyday objects are connected to the Internet and exchange, store, process, and collect data from the surrounding environment. IoT devices are becoming essential for supporting the delivery of data to enable electronic services, but they are not sufficient in most cases to host application services directly due to their intrinsic resource constraints. Fog Computing (FC) can be a suitable paradigm to overcome these limitations, as it can coexist and cooperate with centralized Cloud systems and extends the latter toward the network edge. In this way, it is possible to distribute resources and services of computing, storage, and networking along the Cloud-to-Things continuum. Assuch, FC brings all the benefits of Cloud Computing (CC) closer to end (user) devices. This article presents a survey on the employment of FC to support IoT devices and services. The principles and literature characterizing FC are described, highlighting six IoT application domains that may benefit from the use of this paradigm. The extension of Cloud systems towards the network edge also creates new challenges and can have an impact on existing approaches employed in Cloud-based deployments. Research directions being adopted by the community are highlighted, with an indication of which of these are likely to have the greatest impact. An overview of existing FC software and hardware platforms for the IoT is also provided, along with the standardisation efforts in this area initiated by the OpenFog Consortium (OFC).',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(34,NULL,1,'Participatory design that matters—Facing the big issues','No aplica',NULL,NULL,'At a time where computer technology is putting human lives and work under pressure, we discuss how to provide alternatives. We look back at Participatory Design (PD) which was originally about possibilities and alternatives as much as it was about specific solutions. The paper aims to revitalize and revise PD to help people influence big issues. The agenda for this is set through proposing a set of key elements for realizing new, important possibilities. We discuss the possible changes of partnership with users, call for a new role of researchers as activists, debate how to work with demanding visions for lasting impact, and democratic control. We focus on high technological ambitions, on deployment of working prototypes, on alliances, and on scaling up, all seen as important for a PD that matters. We conclude the paper with an invitation to participate in the continued discussion, codesign, and realization of a PD that matters.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(35,NULL,1,'GA-Par: Dependable Microservice Orchestration Framework for Geo-Distributed Clouds','Puede servir como antecedente \n\nLos avances recientes en la composición de aplicaciones en la nube se han basado en implementaciones de microservicios heterogéneos entre redes en varios centros de datos de la nube. La fiabilidad del sistema ha sido de la máxima importancia y crítica tanto para los proveedores de servicios como para los clientes. La seguridad, un atributo medible, se considera cada vez más como el ejemplo representativo de la fiabilidad. Literalmente, con el incremento de los tipos de microservicios y la dinámica, las aplicaciones están expuestas a amenazas de seguridad internas agravadas e incertidumbres ambientales externas. El trabajo existente se centra principalmente en la composición compatible con QoS de los componentes nativos de la aplicación cloud basados en máquinas virtuales, al tiempo que ignora las incertidumbres y los riesgos de seguridad entre los microservicios interactivos e interdependientes basados en contenedores. Aún así, la organización de un conjunto de microservicios entre centros de datos bajo esas restricciones sigue siendo computacionalmente intratable. En este documento se describe un nuevo marco de orquestación de microservicios fiable GA-Par para seleccionar e implementar eficazmente microservicios, al tiempo que se reduce la discrepancia entre los requisitos de seguridad del usuario y la prestación de servicios real. Adoptamos un enfoque híbrido (tanto basado en la caja blanca como en la caja negra) para medir la satisfacción de los requisitos de seguridad y el impacto ambiental de QoS de la red en la confiabilidad del sistema. Debido al crecimiento exponencial del espacio de soluciones, desarrollamos un marco de algoritmo genético paralelo basado en Spark para acelerar las operaciones para calcular la solución óptima o casi óptima. Los conjuntos de datos del mundo real a gran escala se utilizan para validar modelos y enfoque de orquestación. Los experimentos muestran que nuestra solución supera al método de reconocimiento de seguridad basado en la seguridad con una mejora del 42,34 por ciento. GA-Par es aproximadamente 4 veces más rápido que un solucionador de algoritmos genéticos basado en Hadoop y la eficacia se puede garantizar constantemente bajo diferentes escalas de aplicación.',NULL,1,'Recent advances in composing Cloud applications have been driven by deployments of inter-networking heterogeneous microservices across multiple Cloud datacenters. System dependability has been of the upmost importance and criticality to both service vendors and customers. Security, a measurable attribute, is increasingly regarded as the representative example of dependability. Literally, with the increment of microservice types and dynamicity, applications are exposed to aggravated internal security threats and externally environmental uncertainties. Existing work mainly focuses on the QoS-aware composition of native VM-based Cloud application components, while ignoring uncertainties and security risks among interactive and interdependent container-based microservices. Still, orchestrating a set of microservices across datacenters under those constraints remains computationally intractable. This paper describes a new dependable microservice orchestration framework GA-Par to effectively select and deploy microservices whilst reducing the discrepancy between user security requirements and actual service provision. We adopt a hybrid (both whitebox and blackbox based) approach to measure the satisfaction of security requirement and the environmental impact of network QoS on system dependability. Due to the exponential grow of solution space, we develop a parallel Genetic Algorithm framework based on Spark to accelerate the operations for calculating the optimal or near-optimal solution. Large-scale real world datasets are utilized to validate models and orchestration approach. Experiments show that our solution outperforms the greedy-based security aware method with 42.34 percent improvement. GA-Par is roughly 4x faster than a Hadoop-based genetic algorithm solver and the effectiveness can be constantly guaranteed under different application scales.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(36,NULL,1,'Next Generation Platform as a Service: Toward Virtualized DVB-RCS2 Decoding System','No aplica',NULL,NULL,'Platform-as-a-Service (PaaS) cloud computing services have emerged in the last few years, offering an abstraction framework to enable the development, execution, and management of applications, which is de-coupled from complex infrastructure considerations. The next generation of PaaS solutions (NGPaaS) will have to address more stringent performance requirements compared to traditional PaaSes. They will have to support Telco-specific requirements in terms of resource efficiency, availability, and resilience. According to the 5G promise of convergence between vertical and Telco markets, they will also have to be able to address new use case scenarios. One of the possible scenarios to address could be the combining of Telco and vertical components as digital video broadcasting (DVB). This paper demonstrates how NGPaaS features enable the implementation of 5G-oriented connectivity services in cloud data centers. Regarding the convergence aspect, it aims to demonstrate how NGPaaS features facilitate the build of a combined Telco-broadcasting PaaS system on the cloud where a DVB-RCS2 system is able to bring its own components and integrate them with the connectivity services deployed on the PaaS by a Telco operator. This is achieved by applying specific customizations and enhancements to Kubernetes.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(37,NULL,1,'Agile Network Access Control in the Container Age','No aplica\nLos contenedores de Linux, como los administrados por Docker, son una forma cada vez más popular de empaquetar e implementar aplicaciones complejas. Sin embargo, la primitiva de seguridad fundamental del control de acceso a la red para una implementación de microservicio distribuida a menudo se omite o se deja al equipo de operaciones de red. Las listas de control de acceso de red de bajo nivel no aplican adecuadamente los requisitos de seguridad específicos de la aplicación de alto nivel. Además de la separación de grano grueso de redes virtuales, Docker no admite al desarrollador de aplicaciones para especificar ni a los operadores de red para aplicar un control de acceso de red detallado entre contenedores. En una historia ficticia, seguimos a La ingeniera de DevOp Alice a través del ciclo de vida de una aplicación web. Desde el diseño inicial y la ingeniería de software hasta las operaciones de red y la automatización, mostramos la tarea esperada de Alice y proponemos soporte de herramientas para ayudar. Como devOp de pila completa, Alice participa en decisiones de diseño de alto nivel, así como en la solución de problemas de red de bajo nivel. Centrándonos en el control del acceso a la red, demostramos deficiencias en la gestión de políticas actual y esbozamos una solución compatible con herramientas. Encuestamos el trabajo académico relacionado y mostramos que muchas herramientas existentes no logran establecer puentes entre los diferentes niveles de abstracciones en las que opera un ingeniero de pila completa. Nuestro conjunto de herramientas se verifica formalmente utilizando Isabell/HOL y está disponible como código abierto.',NULL,NULL,'Linux containers, such as those managed by Docker, are an increasingly popular way to package and deploy complex applications. However, the fundamental security primitive of network access control for a distributed microservice deployment is often ignored or left to the network operations team. High-level application-specific security requirements are not appropriately enforced by low-level network access control lists. Apart from coarse-grained separation of virtual networks, Docker neither supports the application developer to specify nor the network operators to enforce fine-grained network access control between containers. In a fictional story, we follow DevOp engineer Alice through the lifecycle of a Web application. From the initial design and software engineering through network operations and automation, we show the task expected of Alice and propose tool-support to help. As a full-stack DevOp, Alice is involved in high-level design decisions as well as low-level network troubleshooting. Focusing on network access control, we demonstrate shortcomings in today\'s policy management and sketch a tool-supported solution. We survey related academic work and show that many existing tools fail to bridge between the different levels of abstractions a full-stack engineer is operating on. Our toolset is formally verified using Isabell/HOL and is available as an open source.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(38,NULL,0,'Vehicular-OBUs-As-On-Demand-Fogs: Resource and Context Aware Deployment of Containerized Micro-Services',NULL,NULL,NULL,'Observing the headway in vehicular industry, new applications are developed demanding more resources. For instance, real-time vehicular applications require fast processing of the vast amount of generated data by vehicles in order to maintain service availability and reachability while driving. Fog devices are capable of bringing cloud intelligence near the edge, making them a suitable candidate to process vehicular requests. However, their location, processing power, and technology used to host and update services affect their availability and performance while considering the mobility patterns of vehicles. In this paper, we overcome the aforementioned limitations by taking advantage of the evolvement of On-Board Units, Kubeadm Clustering, Docker Containerization, and micro-services technologies. In this context, we propose an efficient resource and context aware approach for deploying containerized micro-services on on-demand fogs called Vehicular-OBUs-As-On-Demand-Fogs. Our proposed scheme embeds (1) a Kubeadm based approach for clustering OBUs and enabling on-demand micro-services deployment with the least costs and time using Docker containerization technology, (2) a hybrid multi-layered networking architecture to maintain reachability between the requesting user and available vehicular fog cluster, and (3) a vehicular multi-objective container placement model for producing efficient vehicles selection and services distribution. An Evolutionary Memetic Algorithm is elaborated to solve our vehicular container placement problem. Experiments and simulations demonstrate the relevance and efficiency of our approach compared to other recent techniques in the literature.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(39,NULL,1,'Docker Layer Placement for On-Demand Provisioning of Services on Edge Clouds','no aplica',NULL,NULL,'Driven by the increasing popularity of the microservice architecture, we see an increase in services with unknown demand pattern located in the edge network. Pre-deployed instances of such services would be idle most of the time, which is economically infeasible. Also, the finite storage capacity limits the amount of deployed instances we can offer. Instead, we present an on-demand deployment scheme using the Docker platform. In Docker, service images consist of layers, each layer adding specific functionality. This allows different services to reuse layers, avoiding cluttering the storages with redundant replicas. We propose a layer placement method which allows users to connect to a server, retrieve all necessary layers -possibly from multiple locations- and deploy an instance of the requested service within the desired response time. We search for the best layer placement which maximizes the satisfied demand given the storage and delay constraints. We developed an iterative optimization heuristic which is less exhaustive by dividing the global problem in smaller subproblems. Our simulation results show that our heuristic is able to solve the problem with less system resources. Last, we present interesting use-cases to use this approach in real-life scenarios.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(40,NULL,1,'Dynamic On-Demand Fog Formation Offering On-the-Fly IoT Service Deployment','no aplica',NULL,NULL,'With the increasing number of IoT devices, fog computing has emerged, providing processing resources at the edge for the tremendous amount of sensed data and IoT computation. The advantage of the fog gets eliminated if it is not present near IoT devices. Fogs nowadays are pre-configured in specific locations with pre-defined services, which limit their diverse availabilities and dynamic service update. In this paper, we address the aforementioned problem by benefiting from the containerization and micro-service technologies to build our on-demand fog framework with the help of the volunteering devices. Our approach overcomes the current limitations by providing available fog devices with the ability to have services deployed on the fly. Volunteering devices form a resource capacity for building the fog computing infrastructure. Moreover, our framework leverages intelligent container placement scheme that produces efficient volunteers\' selection and distribution of services. An Evolutionary Memetic Algorithm (MA) is elaborated to solve our multi-objective container placement optimization problem. Real life and simulated experiments demonstrate various improvements over existing approaches interpreted by the relevance and efficiency of (1) forming volunteering fog devices near users with maximum time availability and shortest distance, and (2) deploying services on the fly on selected fogs with improved QoS.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(41,NULL,1,'Scientific Visualization as a Microservice','No aplica',NULL,NULL,'In this paper, we propose using a decoupled architecture to create a microservice that can deliver scientific visualization remotely with efficiency, scalability, and superior availability, affordability and accessibility. Through our effort, we have created an open source platform, Tapestry, which can be deployed on Amazon AWS as a production use microservice. The applications we use to demonstrate the efficacy of the Tapestry microservice in this work are: (1) embedding interactive visualizations into lightweight web pages, (2) creating scientific visualization movies that are fully controllable by the viewers, (3) serving as a rendering engine for high-end displays such as power-walls, and (4) embedding data-intensive visualizations into augmented reality devices efficiently. In addition, we show results of an extensive performance study, and suggest how applications can make optimal use of microservices such as Tapestry.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(42,NULL,1,'Exploring new opportunities to defeat low-rate DDoS attack in container-based cloud environment','No aplica',NULL,NULL,'DDoS attacks are rampant in cloud environments and continually evolve into more sophisticated and intelligent modalities, such as low-rate DDoS attacks. But meanwhile, the cloud environment is also developing in constant. Now container technology and microservice architecture are widely applied in cloud environment and compose container-based cloud environment. Comparing with traditional cloud environments, the container-based cloud environment is more lightweight in virtualization and more flexible in scaling service. Naturally, a question that arises is whether these new features of container-based cloud environment will bring new possibilities to defeat DDoS attacks. In this paper, we establish a mathematical model based on queueing theory to analyze the strengths and weaknesses of the container-based cloud environment in defeating low-rate DDoS attack. Based on this, we propose a dynamic DDoS mitigation strategy, which can dynamically regulate the number of container instances serving for different users and coordinate the resource allocation for these instances to maximize the quality of service. And extensive simulations and testbed-based experiments demonstrate our strategy can make the limited system resources be utilized sufficiently to maintain the quality of service acceptable and defeat DDoS attack effectively in the container-based cloud environment.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(43,NULL,1,'An Intelligent Anomaly Detection Scheme for Micro-Services Architectures With Temporal and Spatial Data Analysis','no aplica',NULL,NULL,'Service-oriented 5G mobile systems are commonly believed to reshape the landscape of the Internet with ubiquitous services and infrastructures. The micro-services architecture has attracted significant interests from both academia and industry, offering the capabilities of agile development and scale capacity. The emerging mobile edge computing is able to firmly maintain efficient resource utility of 5G systems, which can be empowered by micro-services. However, such capabilities impose significant challenges on micro-services system management. Although substantial data are produced for system maintenance, the interleaved temporal-spatial information has not been fully exploited. Additionally, the flooding data impose heavy pressures on automatic analysis tools. Automated digestion of data is in an urgent need for system maintenance. In this paper, we propose a new learning-based anomaly detection framework for service-provision systems with micro-services architectures using service execution logs (temporally) and query traces (spatially). It includes two major parts: logging and tracing representation, and two-stage identification via a sequential model and temporal-spatial analysis. The experimental results show that the temporal-spatial features can accurately capture the nature of operational data. The proposed framework performs well on anomaly detection, and helps gain in-depth insights of large-scale systems.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(44,NULL,1,'IBrownout: An Integrated Approach for Managing Energy and Brownout in Container-Based Clouds','No aplica',NULL,NULL,'Energy consumption of Cloud data centers has been a major concern of many researchers, and one of the reasons for huge energy consumption of Clouds lies in the inefficient utilization of computing resources. Besides energy consumption, another challenge of data centers is the unexpected loads, which leads to the overloads and performance degradation. Compared with VM consolidation and Dynamic Voltage Frequency Scaling that cannot function well when the whole data center is overloaded, brownout has shown to be a promising technique to handle both overloads and energy consumption through dynamically deactivating application optional components, which are also identified as containers/microservices. In this work, we propose an integrated approach to manage energy consumption and brownout in container-based cloud data centers. We also evaluate our proposed scheduling policies with real traces in a prototype system. The results show that our approach reduces about 40, 20, and 10 percent energy than the approach without power-saving techniques, brownout-overbooking approach and auto-scaling approach, respectively, while ensuring Quality of Service.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(45,NULL,1,'Management Framework for Biosignals in Biomedical Studies: From Study Design to Data Statistics','No aplica',NULL,NULL,'A centralized and structured management framework for biosignals is proposed. This framework is dedicated to design biomedical studies, acquire and store biosignals and the associated metadata, as well as validate, synchronize, view, and evaluate these signals from an individual study-related perspective. We introduce a five-layer model as the basis of the framework to facilitate data management, which includes the acquisition, validation, postprocessing, and statistics layers, as well as the vertical presentation layer. The strategic interaction between external data (i.e., metadata) and internal data (i.e., recorded biosignals) is defined to favor high-quality results and sustainability of recorded data. For the first time, a systematic software solution was designed to mimic the proposed layer model and to reasonably combine internal and external data management using microservices within a private cloud. Researchers can individually access and manipulate all data using a client implementation or a Web browser in order to address research-related questions, whereas developers can easily implement modular functions and algorithms. A simplified implementation of the proposed framework shows its strong potential in the unification and structuring of biomedical studies as well as in the associated acquisition, storage, and analysis of biosignals.',NULL,NULL,NULL,'JOUR',NULL,'2016',1),(46,NULL,1,'Energy Efficient Scheduling of Cloud Application Components with Brownout','No aplica',NULL,NULL,'It is common for cloud data centers meeting unexpected loads like request bursts, which may lead to overloaded situation and performance degradation. Dynamic Voltage Frequency Scaling and VM consolidation have been proved effective to manage overloads. However, they cannot function when the whole data center is overloaded. Brownout provides a promising direction to avoid overloads through configuring applications to temporarily degrade user experience. Additionally, brownout can also be applied to reduce data center energy consumption. As a complementary option for Dynamic Voltage Frequency Scaling and VM consolidation, our combined brownout approach reduces energy consumption through selectively and dynamically deactivating application optional components, which can also be applied to self-contained microservices. The results show that our approach can save more than 20 percent energy consumption and there are trade-offs between energy saving and discount offered to users.',NULL,NULL,NULL,'JOUR',NULL,'2016',1),(47,NULL,1,'Performance modeling and workflow scheduling of microservice-based applications in clouds','No aplica',NULL,1,'Microservice has been increasingly recognized as a promising architectural style for constructing large-scale cloud-based applications within and across organizational boundaries. This microservice-based architecture greatly increases application scalability, but meanwhile incurs an expensive performance overhead, which calls for a careful design of performance modeling and task scheduling. However, these problems have thus far remained largely unexplored. In this paper, we develop a performance modeling and prediction method for independent microservices, design a three-layer performance model for microservice-based applications, formulate a Microservice-based Application Workflow Scheduling problem for minimum end-to-end delay under a user-specified Budget Constraint (MAWS-BC), and propose a heuristic microservice scheduling algorithm. The performance modeling and prediction method are validated and justified by experimental results generated through a well-known microservice benchmark on disparate computing nodes, and the performance superiority of the proposed scheduling solution is illustrated by extensive simulation results in comparison with existing algorithms.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(48,NULL,1,'An NFV-Based Service Framework for IoT Applications in Edge Computing Environments','No aplica',NULL,NULL,'Emerging Internet of Things (IoT) applications share the same characteristics of involving multiple processing components (i.e., function modules) and requiring a massive amount of data to be processed with low latency. To meet these needs, edge/fog computing has been proposed for next-generation mobile networks to migrate the computing from the cloud to the edge of the network. Thanks to the development of Network Functions Virtualization (NFV), with which edge computing platform can virtualize function modules and deploy them on any edge devices to provide flexible services on the edge networks. However, such platform would need to deal with complicated function module calling relationship (i.e., call graph) of applications and user mobility, and both are not thoroughly considered by existing works of NFV and edge computing. In this paper, based on our previous idea of virtual local-hub (VLH), we propose a complete design of edge computing framework, which applies NFV technology on edge computing environment for IoT applications. To handle the complicated call graphs of IoT applications with better resource utilization, the VLH framework adapts the technologies of container-based virtualization and microservice architecture, which enables remote function module sharing on the edge computing environment. The framework includes the heuristic algorithm for function module allocation with the objective of minimizing total bandwidth consumption. We also present a design of protocols for system operations and mobility handling in the framework. Then we implement the framework on commodity hardware as a testbed. Via simulations under a large-scale environment with practical settings and experiments on the testbed under real-world scenarios, we demonstrate and verify the effectiveness and practicability of the proposed VLH framework for IoT application service provision.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(49,10,3,'Review of architectural patterns and tactics for microservices in academic and industrial literature','RQ1 (posiblemente)\n\nLos microservicios son una tendencia emergente para el desarrollo de software orientado a servicios. Este enfoque propone crear cada aplicación como una colección de pequeños servicios que se ejecutan en procesos independientes e intersocante con mecanismos ligeros. El desarrollo sistemático de microservicios se ve obstaculizado por la falta de un catálogo de soluciones arquitectónicas recurrentes emergentes (patrones arquitectónicos) y decisiones de diseño (tácticas arquitectónicas). Este artículo describe una revisión sistemática de la literatura académica e industrial con respecto a los patrones arquitectónicos y tácticas arquitectónicas para los microservicios. La revisión produce 44 patrones arquitectónicos en fuentes académicas y 74 en las industriales, así como algunas tácticas arquitectónicas propuestas originalmente para abordar problemas relacionados. La mayoría de los patrones y tácticas arquitectónicas están asociados a uno de los cinco atributos de calidad: escalabilidad, flexibilidad, capacidad de prueba, rendimiento y elasticidad. Además, la mayoría de los microservicios en la literatura académica (pero no industrial) están relacionados con DevOps e IoT. Los hallazgos conducen a proponer una nueva taxonomía de patrones arquitectónicos de microservicios.',NULL,2,'Microservices are an emerging trend for development of service-oriented software. This approach proposes to build each application as a collection of small services running on separate process and inter-communicating with lightweight mechanisms. Systematic development of microservices is hampered by the lack of a catalog of emerging recurrent architectural solutions (architectural patterns) and design decisions (architectural tactics). This article describes a systematic review of academic and industrial literature regarding architectural patterns and architectural tactics for microservices. The review yield 44 architectural patterns in academic sources and 74 in industrial ones, as well as a few architectural tactics originally proposed to address related problems. Most architectural patterns and tactics are associated to one of just five quality attributes: Scalability, flexibility, testability, performance, and elasticity. Also, most microservices in academic (but not industrial) literature are related to DevOps and IoT. The findings lead to propose a new taxonomy of microservice architectural patterns.',3.33333,'SPS012',0,'JOUR',0.5,'2018',1),(50,NULL,1,'Cloud Container Technologies: a State-of-the-Art Review','Estado del arte de tecnologías cloud container',NULL,2,'Containers as a lightweight technology to virtualise applications have recently been successful, particularly to manage applications in the cloud. Often, the management of clusters of containers becomes essential and the orchestration of the construction and deployment becomes a central problem. This emerging topic has been taken up by researchers, but there is currently no secondary study to consolidate this research. We aim to identify, taxonomically classify and systematically compare the existing research body on containers and their orchestration and specifically the application of this technology in the cloud. We have conducted a systematic mapping study of 46 selected studies. We classified and compared the selected studies based on a characterisation framework. This results in a discussion of agreed and emerging concerns in the container orchestration space, positioning it within the cloud context, but also moving it closer to current concerns in cloud platforms, microservices and continuous development.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(51,NULL,1,'Action-Oriented Programming Model: Collective Executions and Interactions in the Fog','No aplica',NULL,NULL,'Today\'s dominant design for the Internet of Things (IoT) is a Cloud-based system, where devices transfer their data to a back-end and in return receive instructions on how to act. This view is challenged when delays caused by communication with the back-end become an obstacle for IoT applications with, for example, stringent timing constraints. In contrast, Fog Computing approaches, where devices communicate and orchestrate their operations collectively and closer to the origin of data, lack adequate tools for programming secure interactions between humans and their proximate devices at the network edge. This paper fills the gap by applying Action-Oriented Programming (AcOP) model for this task. While originally the AcOP model was proposed for Cloud-based infrastructures, presently it is re-designed around the notion of coalescence and disintegration, which enable the devices to collectively and autonomously execute their operations in the Fog by serving humans in a peer-to-peer fashion. The Cloud\'s role has been minimized—it is being leveraged as a development and deployment platform.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(52,NULL,1,'Systematic literature reviews in software engineering—enhancement of the study selection process using Cohen\'s Kappa statistic','No aplica',NULL,NULL,'Context: Systematic literature reviews (SLRs) rely on a rigorous and auditable methodology for minimizing biases and ensuring reliability. A common kind of bias arises when selecting studies using a set of inclusion/exclusion criteria. This bias can be decreased through dual revision, which makes the selection process more time-consuming and remains prone to generating bias depending on how each researcher interprets the inclusion/exclusion criteria. Objective: To reduce the bias and time spent in the study selection process, this paper presents a process for selecting studies based on the use of Cohen\'s Kappa statistic. We have defined an iterative process based on the use of this statistic during which the criteria are refined until obtain almost perfect agreement (k>0.8). At this point, the two researchers interpret the selection criteria in the same way, and thus, the bias is reduced. Starting from this agreement, dual review can be eliminated; consequently, the time spent is drastically shortened. Method: The feasibility of this iterative process for selecting studies is demonstrated through a tertiary study in the area of software engineering on works that were published from 2005 to 2018. Results: The time saved in the study selection process was 28% (for 152 studies) and if the number of studies is sufficiently large, the time saved tend asymptotically to 50%. Conclusions: Researchers and students may take advantage of this iterative process for selecting studies when conducting SLRs to reduce bias in the interpretation of inclusion and exclusion criteria. It is especially useful for research with few resources.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(53,NULL,1,'Cyber-physical production system fingerprinting','No aplica',NULL,NULL,'Modern machines in manufacturing are equipped with integrated computing, communication, and self-x capabilities, thus transforming into Cyber-Physical Production Systems (CPPS). Common security relies on communication encryption and machine identity is often ensured by certificates and PKI. This paper examines the possibilities regarding security and secure identity for CPPS. We look at concepts which have been presented by researchers in the past, e.g. device or OS fingerprinting, biometrical respectively hylemetrical methods and self-description abilities of CPPS components. We propose how they can be used to construct a hybrid fingerprint for CPPS, to increase security and build a secure identity for CPPS.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(54,NULL,1,'Using docker for factory system software management: Experience report','No aplica',NULL,NULL,'As factories become increasingly computerised, and with the increasing interest in Cyber-Physical-Systems and the Internet-of-Things, the issues of software management, deployment, configuration and integration are expected to become increasingly important. This paper reports on the ongoing experiences of using the Docker container technology in a major EU research project targeting smart factories. Docker is used to distribute, deploy and manage the configuration of multiple software modules between multiple teams and demonstrator sites in multiple locations, where each module can use its own mixture of protocols, programming languages and platforms.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(55,NULL,1,'Understanding the impact of cloud patterns on performance and energy consumption','No aplica',NULL,NULL,'Cloud patterns are abstract solutions to recurrent design problems in the cloud. Previous work has shown that these patterns can improve the Quality of Service (QoS) of cloud applications but their impact on energy consumption is still unknown. In this work, we conduct an empirical study on two multi-processing and multi-threaded applications deployed in the cloud, to investigate the individual and the combined impact of six cloud patterns (Local Database Proxy, Local Sharding Based Router, Priority Queue, Competing Consumers, Gatekeeper and Pipes and Filters) on the energy consumption. We measure the energy consumption using Power-API; an application programming interface (API) written in Java to monitor the energy consumed at the process-level. Results show that cloud patterns can effectively reduce the energy consumption of a cloud-based application, but not in all cases. In general, there appear to be a trade-off between an improved response time of the application and the energy consumption. Moreover, our findings show that migrating an application to a microservices architecture can improve the performance of the application, while significantly reducing its energy consumption. We summarize our contributions in the form of guidelines that developers and software architects can follow during the implementation of a cloud-based application.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(56,NULL,1,'Components and development in Big Data system: A survey','No aplica',NULL,NULL,'With the growth of distributed computing systems, the modern Big Data analysis platform products often have diversified characteristics. It is hard for users to make decisions when they are in early contact with Big Data platforms. In this paper, we discussed the design principles and research directions of modern Big Data platforms by presenting research in modern Big Data products. We provided a detailed review and comparison of several state-ofthe- art frameworks and concluded into a typical structure with five horizontal and one vertical. According to this structure, this paper presents the components and modern optimization technologies developed for Big Data, which helps to choose the most suitable components and architecture from various Big Data technologies based on requirements.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(57,35,3,'MiCADO—Microservice-based Cloud Application-level Dynamic Orchestrator','RQ1 (tal vez)\nVarias aplicaciones científicas y comerciales requieren escalabilidad y orquestación automatizadas en los recursos de computación en la nube. Sin embargo, no es posible ampliar las aplicaciones con esta escalabilidad automatizada de forma individual. Este documento investiga cómo se puede agregar dicha orquestación automatizada a las aplicaciones en la nube sin una reingeniería importante del código de la aplicación. Sugerimos una arquitectura genérica para un marco de orquestación en la nube de nivel de aplicación, denominado MiCADO que admite varios escenarios de aplicación en varias nubes federadas heterogéneas. Además de la descripción de la arquitectura genérica, el documento también presenta la primera implementación de referencia de MiCADO y explica cómo se puede mejorar la escalabilidad del servicio Data Avenue que se aplica para la transferencia de datos en puertas de enlace científicas basadas en WS-PGRADE/gUSE. Se presenta la evaluación del rendimiento de la escalabilidad implementada basada en experimentos de escalado vertical y descendente.',NULL,1,'Various scientific and commercial applications require automated scalability and orchestration on cloud computing resources. However, extending applications with such automated scalability on an individual basis is not feasible. This paper investigates how such automated orchestration can be added to cloud applications without major reengineering of the application code. We suggest a generic architecture for an application level cloud orchestration framework, called MiCADO that supports various application scenarios on multiple heterogeneous federated clouds. Besides the generic architecture description, the paper also presents the first MiCADO reference implementation, and explains how the scalability of the Data Avenue service that is applied for data transfer in WS-PGRADE/gUSE based science gateways, can be improved. Performance evaluation of the implemented scalability based on up and downscaling experiments is presented.',17.5,'SPS010',0,'JOUR',1,'2019',1),(58,NULL,1,'Reference architecture to integrate heterogeneous manufacturing systems for the digital thread','No aplica',NULL,NULL,'The increasing growth of digital technologies in manufacturing has provided industry with opportunities to improve its productivity and operations. One such opportunity is the digital thread, which links product lifecycle systems so that shared data may be used to improve design and manufacturing processes. The development of the digital thread has been challenged by the inherent difficulty of aggregating and applying context to data from heterogeneous systems across the product lifecycle. This paper presents a reference four-tiered architecture designed to manage the data generated by manufacturing systems for the digital thread. The architecture provides segregated access to internal and external clients, which protects intellectual property and other sensitive information, and enables the fusion of manufacturing and other product lifecycle data. We have implemented the architecture with a contract manufacturer and used it to generate knowledge and identify performance improvement opportunities that would otherwise be unobservable to a manufacturing decision maker.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(59,13,3,'A flexible data acquisition system for storing the interactions on mashup user interfaces','RQ1 (Posiblemente)\nHabla de microservicios aplicado en la mashups applications. Pero no es claro el uso de la parte transaccional.',NULL,NULL,'Nowadays, mashups applications are growing in popularity. They are accessible by cross-device applications, supporting multiple forms of interaction in cloud environments. In general, mashups manage a huge amount of heterogeneous data from different sources and handle different kinds of users. In this respect, mashup User Interfaces are becoming one of the most important pieces in many kinds of current management systems, such as for certain geographic or environmental information systems working on the Internet. In this type of systems, the user interface plays a particular role due to the huge variety of components or apps that the users need to manage at the same time. However, currently, there has been scant attention paid to the management of the user\'s interaction with mashups interfaces. This goal involves the need of having important, well-constructed tools and methods conducting the data acquisition process for managing properly: (a) the interaction over the mashup user interfaces, at the front-end side; (b) the storage of the interaction in relational databases; and (c) well-supported microservices structures handled in the cloud. The fact of having valuable and flexible data acquisition processes encourages the deployment of others important issues of the interaction management, i.e., data searching, data mining, marketing, security, accessibility, usability or traceability of interaction data, among others. In this article, we present a flexible Data Acquisition System capable of capturing the human-computer interactions performed by users over mashup (User) Interfaces with the aim of storing them in a relational database. Firstly, the morphology of traditional mashup applications, their specifications and the relevant information that surrounds an interaction have been studied. Thereupon, a data acquisition system that stores user interaction on mashup based on such specifications was constructed. To achieve that purpose, an architecture of microservices was also designed in the cloud to detect, acquire, and collect the interactions performed over this kind of interfaces. The whole process is ready for acquiring internal data of the information system as well as context information and location awareness. To validate the data acquisition system, some tests on empirical case studies have been developed. Efficiency and effectiveness have also been determined by evaluating the performance of the acquisition system during different load tests. Finally, in order to ensure the software quality, a continuous integration strategy for software development and an easy management of the code have been used, facilitating the software maintenance alongside the microservice architecture, where functionalities are well encapsulated.',4.33333,'SPS001',0,'JOUR',0.5,'2018',1),(60,NULL,1,'BOINC Forks, Issues and Directions of Development','No aplica',NULL,NULL,'The article based on the experience of running BOINC projects. We interviewed developers of projects on the platform BOINC in order to adopt their experience with the platform: issues with which they are confronted, how they have solved them, what changes have they done in BOINC and their opinion about BOINC platform, what should be improved in BOINC platform to make it better. Next we were study materials about experience of using the BOINC platform and BOINC issues. Finally we made conclusions about the actions to be taken for the development of BOINC: increase number of crunchers; rewrite the platform using modern architectural solutions and the latest technologies; initiate creation of services providing access to computing resources of crunchers.',NULL,NULL,NULL,'JOUR',NULL,'2016',1),(61,NULL,1,'Lightweight formalisation of adaptive middleware','No aplica',NULL,NULL,'The development of adaptive middleware systems is still a challenge due to the complexity of dealing with traditional adaptation issues, such as Why to adapt? When to adapt? Where is the need for change? What kind of change is needed? How is the adaptation performed? The emerging of new technologies (e.g., process mining) and maturation of existing ones (e.g., model checkers) create new opportunities to face those challenges. This paper presents an end-to-end solution for developing adaptive middleware that integrates software architecture concepts, lightweight formalisation and process mining to handle the mentioned challenges. The proposed solution allows developers to build adaptive middleware by working at a high level of abstraction, i.e., at the architectural level. In this way, it potentially reduces the effort to implement the middleware and reinforces structural, safety and quantitative properties at development time and when the middleware is already in execution.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(62,NULL,1,'A web service security governance approach based on dedicated micro-services','No esta enfocado en la parte transaccional, pero si en la seguridad. \nContiene definición de microservicios y MSA Micro Service  Architecture\n\nLa arquitectura orientada a los servicios (SOA) se caracteriza por su apertura, su agilidad y su composibilidad. Dicha arquitectura incluye servicios autónomos, interoperables y potencialmente reutilizables, que se implementan como servicios web (WS). Cuando se implementa en el entorno de nube, las amenazas de seguridad pueden aumentar en el nivel WS, lo que plantea algunos desafíos de seguridad, como la detección de vulnerabilidades y la violación de la confianza o la disponibilidad. Para solucionar problemas de seguridad, se requieren tareas complejas que deben tratarse por separado con las preocupaciones asociadas. Para hacer frente a este problema, nos referimos aquí a una arquitectura alternativa conocida como Micro-Services Architecture (MSA) que se basa en el principio de descomponer proyectos de software grandes y complejos en muchos subpro proyectos atómicos. Además, para controlar, administrar y garantizar que las vulnerabilidades se tratan adecuadamente y se alcanzan los objetivos de seguridad esperados, encontramos que la gobernanza de la seguridad del servicio web es inevitablemente necesaria. Por lo tanto, sugerimos aquí un enfoque de gobierno de seguridad de servicios web tiene como objetivo reducir los defectos de seguridad y mejorar la confianza entre los servicios web. Este enfoque consiste en combinar microservicios mediante el uso de un subconsulto de GDPR (Reglamento General de Protección de Datos (RGPD) de la UE sustituye a la Directiva 95/46/CE de protección de datos y fue diseñado para armonizar las leyes de privacidad de datos en toda Europa, para proteger y facultar la privacidad de los datos de los ciudadanos de la UE y para remodelar la forma en que las organizaciones de toda la región abordan las normas de privacidad de datos.) y un conjunto de políticas de seguridad definidas. Este enfoque permite adivinar el microservicio dedicado refiriéndose a los requisitos de seguridad del usuario.',NULL,1,'Service-oriented architecture (SOA) is known to be characterized by its openness, its agility and its composability. Such architecture includes autonomous, interoperable and potentially reusable services, which are implemented as Web Services (WS). When deployed in the Cloud Environment, security threats may increase at the WS level, raising some security challenges, such as vulnerability discovery and trust or availability violation. Addressing security issues require complex tasks that should be treated separately with associated concerns. To deal with this problem, we refer here to an alternative architecture known as Micro-Services Architecture (MSA) which is based on the principle of decomposing large and complex software projects into many atomic sub-projects. In Addition, to control, manager and ensure that vulnerabilities are appropriately treated and the expected security objectives are achieved, we find that the governance of Web Service security is inevitably required. Hence, we suggest here a Web Service security governance approach aims to reduce the security flaws and to enhance trust between web services. This approach consists in combining micro-services by using a sub-set of GDPR(EU General Data Protection Regulation (GDPR) replaces the Data Protection Directive 95/46/EC and was designed to harmonize data privacy laws across Europe, to protect and empower all EU citizens data privacy and to reshape the way organizations across the region approach data privacy.) rules and a set of defined security policies. This approach allows guessing the dedicated micro-service referring to user security requirements.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(63,NULL,1,'The effects of database complexity on SQL query formulation','No aplica',NULL,NULL,'In Structured Query Language (SQL) education, students often execute queries against a simple exercise database. Recently, databases that are more realistic have been utilized to the effect that students find exercises more interesting and useful, as these databases more accurately mimic databases students are likely to encounter in their future work environments. However, using even the most engaging database can be counterproductive to learning, if a student is not able to formulate correct queries due to the complexity of the database schema. Scientific evidence on the effects of database complexity on student\'s query formulation is limited, and with queries from 744 students against three databases of varying logical complexity, we set out to study how database complexity affects the success rates in query formulation. The success rates against a simple database were significantly higher than against a semi-complex and a complex database, which indicates that it is easier for students to write SQL queries against simpler databases. This suggests, at least in the scale of our exercise databases, that educators should also consider the negative effects of more realistic databases, even though they have been shown to increase student engagement.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(64,NULL,1,'Executable Behavioral Modeling of System and Software Architecture Specifications to Inform Resourcing Decisions','no aplica',NULL,NULL,'The size, cost, and slow rate of change of DoD Information Technology (IT) systems in comparison with commercial IT makes introduction of a new DoD system or capability challenging. Making design decisions without consideration of the whole system and its environment may result in unintended behaviors that have operational and financial impacts, often not visible until later testing. The complexity of these system interactions isn\'t cheap, impacting intellectual, programmatic, and organizational resources. Precise behavioral modeling offers a way to assess architectural design decisions prior to, during, and after implementation to mitigate the impacts of complexity, but in and of itself does not lead to estimates of the effort and the cost of those design decisions. This research introduces a methodology to extract Unadjusted Function Point (UFP) counts from architectural behavioral models utilizing a framework called Monterey Phoenix (MP), lightweight formal methods, and high level pseudocode for use in cost estimation models such as COCOMO II. Additionally, integration test estimates are informed by extracts of MP model event traces. These unambiguous, executable architecture models and their views can be inspected and revised, in order to facilitate communication with stakeholders, reduce the potential for software failure, and lower costs in implementation.',NULL,NULL,NULL,'JOUR',NULL,'2016',1),(65,NULL,1,'The fog cloud of things: A survey on concepts, architecture, standards, tools, and applications','No aplica',NULL,NULL,'The Fog computing paradigms are becoming popular means of utilizing resources optimally by the IoT devices, extending quality of service to the vicinity of the user, and achieve fast processing in the IoT-cloud ecosystems. Fog models allow fast processing of data, easy to reach storage, and reduce bulky network transition. The inefficiencies of the cloud inspire unnecessarily big data to be sent to the backhaul of the network, which incapacitates the cloud infrastructure. Fog computing addresses the limitation of the cloud systems by improving robustness, efficiency, and performance of cloud infrastructure. The need to process some of the big data produced at the peripheral of the network using keen techniques in the fog-cloud ecosystems is a key to new interesting architectures filed in the recent literature. These architectures provide new business opportunities that drive the Internet of things devices to function according to users\' demands. In this paper, we provide an extensive survey on Fog-Edge computing to give a foundation to solutions proposed in studies that involve IoT-Fog-Cloud ecosystems. This is done by providing insights of new research aspects filed, the state-of-art in fog computing architectures, standards, tools and applications. We project the future development trends and provide open issues in fog cloud of things. This will focus developers to develop applications that work well in a cloud-based controlled ecosystem across a range of network terminals.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(66,NULL,1,'Loom: Complex large-scale visual insight for large hybrid IT infrastructure management','No aplica',NULL,NULL,'Interactive visual exploration techniques (IVET) such as those advocated by Shneiderman and extreme scale visual analytics have successfully increased our understanding of a variety of domains that produce huge amounts of complex data. In spite of their complexity, IT infrastructures have not benefited from the application of IVET techniques. Loom is inspired in IVET techniques and builds on them to tame increasing complexity in IT infrastructure management systems guaranteeing interactive response times and integrating key elements for IT management: Relationships between managed entities coming from different IT management subsystems, alerts and actions (or reconfigurations) of the IT setup. The Loom system builds on two main pillars: (1) a multiplex graph spanning data from different ITIMs; and (2) a novel visualisation arrangement: the Loom “Thread” visualisation model. We have tested this in a number of real-world applications, showing that Loom can handle million of entities without losing information, with minimum context switching, and offering better performance than other relational/graph-based systems. This ensures interactive response times (few seconds as 90th percentile). The value of the “Thread” visualisation model is shown in a qualitative analysis of users’ experiences with Loom.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(67,NULL,1,'When blockchain meets Internet of Things: Characteristics, challenges, and business opportunities','No aplica',NULL,NULL,'Researches in Blockchain Technology (BCT) and Internet of Things (IoT) are experiencing exponential growth in recent years. They are being witnessed as mainstream technologies that have the potential of revolutionizing our society. However, these two contain technologically unrelated in philosophies. This article has a special interest in exploring how BCT and IoT can benefit in innovating business models. The purpose of this work is to understand the state of the art how BCT can be utilized within IoT context to create secure decentralized architecture. IoT is not secure by design, making its applications vulnerable especially to security and privacy threats. This hinders the proliferation of IoT applications in a large scale. With BCT capabilities, BCT can be used as integral part that can solve many shortcomings of IoT applications. Thus, existing businesses can be improved, and new business models can be brought into reality. Eliminating the need of third parties to guarantee trust of business transactions is a significant value towards business innovation in many areas, such as digital supply chain, vehicular systems, surveillance systems, and the creation of new business models, e.g. sharing economy, local energy trading, smart city, to name but a few. In an effort to understand the state of the art, this article (1) highlights intrinsic characteristics of IoT, (2) describes BCT modes and their characteristics to be considered for IoT integration, (3) presents a comprehensive survey on business opportunities based on the usage of BCT and IoT from a wide variety of literatures, (4) analyse strengths and weaknesses, and (5) discusses research possibilities that can be a solution to the problems. This paper will serve as a good starting and reference point to new researchers or those who are interested in adopting these technologies in businesses.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(68,NULL,1,'Understanding Service-Oriented Architecture (SOA): A systematic literature review and directions for further investigation','Puede servir para marco de referencia',NULL,1,'Service-Oriented Architecture (SOA) has emerged as an architectural approach that enhances the service delivery performance of existing traditional systems while still retaining their most important features. This approach, due to its flexibility of adoption, has gained the attention of both academic and business entities, especially in the development of world-leading technologies such as Cloud Computing (CC) and the Internet of Things (IoT). Although many studies have listed the success factors of SOA, a few minor failures have also been reported in the literature. Despite the availability of rich material on SOA, there is a lack of systematic reviews covering the different aspects of the SOA concept in Information Systems (IS) research. Therefore, the central objective of this study is to review existing issues of SOA and share the findings with the academia. Hence, a systematic literature review (SLR) was conducted to analyse existing studies related to SOA and the factors that led to SOA success and failure from 2009 to 2019. To completely cover all SOA-related research in the IS field, a two-stage review protocol that included automatic and manual searching was applied, resulting in 103 primary studies. The articles were categorised into four research themes, namely: SOA Adoption, SOA Concepts, SOA Impact, and SOA Practice. The result shows that the academic research interest on SOA increased recently with most of the articles covering SOA Practice followed by SOA Adoption. Moreover, the findings of this review highlighted SOA Governance, SOA Strategy, Financial Issues and Costs, and Education and Training as the most significant factors of SOA adoption and implementation. Consequently, the outcomes will assist professionals and experts in organisations as well as academic researchers to focus more on these factors for successfully adopting and implementing SOA.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(69,NULL,1,'Digital construction: From point solutions to IoT ecosystem','No aplica',NULL,NULL,'This paper takes a longitudinal view of literature to explain the current period as disruptive technology drives an evolutionary adaptation of the construction industry in a historical socio-technological process. The authors argue the way Internet of Things (IoT) solutions are conceived as singularly focused “point solutions” undermine future opportunities. An evolutionary view is overlooked because extant literature describes technology in a particular epoch. An ecosystem perspective needs to influence IT strategy as an emerging “digital layer” transcends a smart city and continues to function long after a traditional construction project completes. We describe innovation as a succession of transformational waves in an evolutionary process that is currently manifesting as “Industry 4.0” and changing expectations for the construction industry. The paper concludes by listing emerging trends and warns existing UK construction companies must understand the transformational process they are in and learn how to adapt with a stronger drive for R&D.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(70,NULL,1,'White-box modernization of legacy applications: The oracle forms case study','No aplica',NULL,NULL,'Software modernization consists of transforming legacy applications into modern technologies, mainly to minimize maintenance costs. This transformation often produces a new application that is a poor copy of the legacy due to the degradation of quality attributes, for example. This paper presents a white-box transformation approach that changes the application architecture and the technological stack without losing business value and quality attributes. This approach obtains a technology agnostic model from the original sources, such a model facilitates the architecture configuration before performing the actual transformation of the application into the new technology. The architecture for the new application can be configured considering aspects such as data access, quality attributes, and process. We evaluate our approach through an industrial case study, the gist of which is the transformation of Oracle Forms applications—where the presentation layer is highly coupled to the data access layer—to multitiered applications.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(71,NULL,1,'Looking over the Research Literature on Software Engineering from 2016 to 2018','Puede servir para marco de referencia',NULL,1,'This paper carries out a bibliometric analysis to detect (i) what is the most influential research on software engineering at the moment, (ii) where is being published that relevant research, (iii) what are the most commonly researched topics, (iv) and where is being undertaken that research (i.e., in which countries and institutions). For that, 6,365 software engineering articles, published from 2016 to 2018 on a variety of conferences and journals, are examined.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(72,NULL,1,'The role of big data analytics in industrial Internet of Things','No aplica',NULL,NULL,'Big data production in industrial Internet of Things (IIoT) is evident due to the massive deployment of sensors and Internet of Things (IoT) devices. However, big data processing is challenging due to limited computational, networking and storage resources at IoT device-end. Big data analytics (BDA) is expected to provide operational- and customer-level intelligence in IIoT systems. Although numerous studies on IIoT and BDA exist, only a few studies have explored the convergence of the two paradigms. In this study, we investigate the recent BDA technologies, algorithms and techniques that can lead to the development of intelligent IIoT systems. We devise a taxonomy by classifying and categorising the literature on the basis of important parameters (e.g. data sources, analytics tools, analytics techniques, requirements, industrial analytics applications and analytics types). We present the frameworks and case studies of the various enterprises that have benefited from BDA. We also enumerate the considerable opportunities introduced by BDA in IIoT. We identify and discuss the indispensable challenges that remain to be addressed, serving as future research directions.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(73,NULL,1,'A microservice composition approach based on the choreography of BPMN fragments','RQ1\nRQ2\ncoreografia en microservicios\n\nContexto: los microservicios deben estar compuestos para proporcionar a los usuarios funcionalidades complejas y elaboradas. Parece que la naturaleza descentralizada de los microservicios hace que un estilo de coreografía sea más apropiado para lograr dicha cooperación, donde generalmente se utilizan soluciones más ligeras basadas en eventos asincrónicos. Sin embargo, una composición de microservicios basada en coreografía distribuye la lógica de flujo de la composición entre los microservicios, lo que dificulta el análisis y la actualización, es decir, no hay una imagen general de la composición que facilite estas tareas. Business Process Model and Notation (BPMN) es el estándar OMG desarrollado para representar procesos de negocio (BPs), siendo ampliamente utilizado para definir el panorama general de dichas composiciones. Sin embargo, BPMN se suele considerar en soluciones basadas en orquestaciones y la orquestación puede ser un inconveniente para lograr el desacoplamiento perseguido por una arquitectura de microservicios. Objetivo: Definir un enfoque de composición de microservicios que nos permita crear una composición en un modelo BPMN, que facilite un análisis posterior para la toma de decisiones de ingeniería, y ejecutarlas a través de una coreografía basada en eventos para tener un alto grado de desacoplamiento e independencia entre los microservicios. Método: Seguimos una metodología de investigación para los sistemas de información que consiste en un proceso de 5 pasos: conciencia del problema, sugerencia, desarrollo, evaluación y conclusión. Resultados: Presentamos un enfoque de composición de microservicios basado en la coreografía de fragmentos de BPMN. Por un lado, proponemos describir el panorama general de la composición con un modelo BPMN, proporcionando un mecanismo valioso para analizarla cuando sea necesario tomar decisiones de ingeniería. Por otro lado, este modelo se divide en fragmentos para ser ejecutados a través de una forma de coreografía basada en eventos, proporcionando el alto grado de desacoplamiento entre los microservicios exigidos en este tipo de arquitectura. Este enfoque de composición es compatible con una arquitectura de microservicio definida para lograr que ambas descripciones de una composición (imagen grande y división una) coexistan. También se presenta una realización de esta arquitectura en la tecnología Java/Primavera. Conclusiones: La evaluación que se hace a nuestro trabajo nos permite concluir que el enfoque propuesto para componer microservicios es más eficiente que las soluciones basadas en el desarrollo ad hoc.',NULL,NULL,'Context: Microservices must be composed to provide users with complex and elaborated functionalities. It seems that the decentralized nature of microservices makes a choreography style more appropriate to achieve such cooperation, where lighter solutions based on asynchronous events are generally used. However, a microservice composition based on choreography distributes the flow logic of the composition among microservices making further analysis and updating difficult, i.e. there is not a big picture of the composition that facilitates these tasks. Business Process Model and Notation (BPMN) is the OMG standard developed to represent Business Processes (BPs), being widely used to define the big picture of such compositions. However, BPMN is usually considered in orchestration-based solutions, and orchestration can be a drawback to achieve the decoupling pursued by a microservice architecture. Objective: Defining a microservice composition approach that allows us to create a composition in a BPMN model, which facilitates further analysis for taking engineering decisions, and execute them through an event-based choreography to have a high degree of decoupling and independence among microservices. Method: We followed a research methodology for information systems that consists of a 5-step process: awareness of the problem, suggestion, development, evaluation, and conclusion. Results: We presented a microservice composition approach based on the choreography of BPMN fragments. On the one hand, we propose to describe the big picture of the composition with a BPMN model, providing a valuable mechanism to analyse it when engineering decisions need to be taken. On the other hand, this model is split into fragments in order to be executed through an event-based choreography form, providing the high degree of decoupling among microservices demanded in this type of architecture. This composition approach is supported by a microservice architecture defined to achieve that both descriptions of a composition (big picture and split one) coexist. A realization of this architecture in Java/Spring technology is also presented. Conclusions: The evaluation that is done to our work allows us to conclude that the proposed approach for composing microservices is more efficient than solutions based on ad-hoc development.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(74,NULL,1,'Decentralized cloud manufacturing-as-a-service (CMaaS) platform architecture with configurable digital assets','No aplica',NULL,NULL,'Contemporary Cloud Manufacturing-as-a-Service (CMaaS) platforms now promise customers instant pricing and access to a large capacity of manufacturing nodes. However, many of the CMaaS platforms are centralized with data flowing through an intermediary agent connecting clients with service providers. This paper reports the design, implementation and validation of middleware software architectures which aim to directly connect client users with manufacturing service providers while improving transparency, data integrity, data provenance and retaining data ownership to its creators. In the first middleware, clients have the ability to directly customize and configure parts parametrically, leading to an instant generation of downstream manufacturing process plan codes. In the second middleware, clients can track the data provenance generated in a blockchain based decentralized architecture across a manufacturing system. The design of digital assets across a distributed manufacturing system infrastructure controlled by autonomous smart contracts through Ethereum based ERC-721 non-fungible tokens is proposed to enable communication and collaboration across decentralized CMaaS platform architectures. The performance of the smart contracts was evaluated on three different global Ethereum blockchain test networks with the centrality and dispersion statistics on their performance provided as a reference benchmark for future smart contract implementations.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(75,NULL,1,'Architecture design evaluation of PaaS cloud applications using generated prototypes: PaaSArch Cloud Prototyper tool','No aplica',NULL,NULL,'Platform as a Service (PaaS) cloud domain brings great benefits of an elastic platform with many prefabricated services, but at the same time challenges software architects who need to navigate a rich set of services, variability of PaaS cloud environment and quality conflicts in existing design tactics, which makes it almost impossible to foresee the impact of architectural design decisions on the overall application quality without time-consuming implementation of application prototypes. To ease the architecture design of PaaS cloud applications, this paper proposes a design-time quality evaluation approach for PaaS cloud applications based on automatically generated prototypes, which are deployed to the cloud and repeatedly evaluated in the context of multiple quality attributes and environment configurations. In this paper, all steps of the approach are described and demonstrated on an example of a real-world complex IoT system for collection and processing of Smart Home sensor data. The approach has been implemented and the automated prototype generation and evaluation tool, referred to as PaaSArch Cloud Prototyper, is presented together with the approach.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(76,NULL,1,'Authentication and load balancing scheme based on JSON Token for Multi-Agent Systems','No aplica',NULL,NULL,'This paper aims to present a new model of distributed system based on the Json Web Token (JWT) technology to answer the problems of load balancing on the one hand and the security of the communication between the agents on the other hand. This model is built around a new multi-agent system middleware. The proposed model is essentially based on an authentication module ensuring efficient load balancing as well as security of the communication, by guaranteeing, the integrity of the exchanged messages between the agents, the authentication of the agents, and non-repudiation, based on the asymmetric cryptographic technology. The article presents a theoretical analysis of the proposed model architecture, describing a secure, lightweight and highly scalable system for better security and load balancing management in distributed systems.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(77,NULL,1,'Real-Time HazMat Environmental Information System: A micro-service based architecture','No aplica',NULL,NULL,'The dangerous goods are important to businesses and the life of a city. Thousands of tons of oil, toxic, chemical, corrosive, flammable and radioactive materials are transported each day. However, an accident involving hazardous materials could entail serious consequences for road users, infrastructure, and the environment. In order to build a planning aid system to reduce the risks of transporting hazardous, we adopt a microservices-based architecture on a cloud environment. This type of architecture consists of a set of loosely coupled and independently deployable services for more scalable applications. Due to distributed nature of microservices, the system will be developed as a suite of small services aligned with risk management process; each service will be running in its own logical machine or container technology such as Docker.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(78,NULL,1,'Big Data Systems Meet Machine Learning Challenges: Towards Big Data Science as a Service','No aplica',NULL,NULL,'Recently, we have been witnessing huge advancements in the scale of data we routinely generate and collect in pretty much everything we do, as well as our ability to exploit modern technologies to process, analyze and understand this data. The intersection of these trends is what is, nowadays, called Big Data Science. Big Data Science requires scalable architectures for storing and processing data. Cloud computing represents a practical and cost-effective solution for supporting Big Data storage, processing and for sophisticated analytics applications. We analyze in details the building blocks of the software stack for supporting Big Data Science as a commodity service for data scientists. In addition, we analyze and classify the state-of-the-art of big data analytics frameworks, available today mostly on Clouds, based on their supported service models. Furthermore, we provide various insights about the latest ongoing developments and open challenges in this domain.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(79,NULL,1,'A Service Oriented Framework for Analysing Social Network Activities','No aplica',NULL,NULL,'Analysing and monitoring Social Networking activities raise multiple challenges for the evolution of Service Oriented Systems Engineering. This is particularly evident for event detection in social networks and, more in general, for large-scale Social Analytics, which require continuous processing of data. In this paper we present a service oriented framework exploring effective ways to leverage the opportunities coming from innovations and evolutions in computational power, storage, and infrastructures, with particular focus on modern architectures including in-memory database technology, in-database computation, massive parallel processing, Open Data Services, and scalability with multi-node clusters in Cloud. A prototype of this system was experimented in the contest of a specific kind of social event, an art exhibition of sculptures, where the system collected and analyzed in real-time the tweets issued in an entire region, including exhibition sites, and continuously updated analytical dashboards placed in one of the exhibition rooms.',NULL,NULL,NULL,'JOUR',NULL,'2016',1),(80,NULL,1,'DevOps Contract for Assuring Execution of IoT Microservices in the Edge','No aplica',NULL,NULL,'The increasing availability of edge and IoT infrastructure-as-a-service allows us to develop lightweight IoT components and deploy them into edge/IoT infrastructures, enabling edge analytics and controls. This paper introduces the development of service contracts for IoT microservices from DevOps perspectives. We analyze stakeholders and present our methods to support stakeholders to program IoT service contracts. We address the diversity of service contracts by using common languages for IoT data and programming. We integrate the development and operation lifecycle of IoT contracts with IoT software components and with supporting DevOps services. To illustrate our approach, we use a real-world Base Transceiver Station maintenance application with Raspberry Pi, Java, Javascript, JSON and other microservices.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(81,NULL,1,'A framework for on-line timing error detection in software systems','No aplica',NULL,NULL,'On-line timing error detection entails gathering and analyzing monitoring data to pinpoint deviations from the expected timing behavior of a given software system. Current solutions for system monitoring and runtime analysis present several practical drawbacks that limit their usability in real industrial systems, such as the need of kernel-level probes or the coarse per-node/per-process monitoring granularity. This paper proposes a novel framework for timing error detection that capitalizes on the systematic interleaving of logging instructions across the functional code in order to overcome above limitations. The paper faces the practical challenges related to the specification and implementation of a log weaving technique, detection algorithms, and a data centralization platform to collect and analyze fine-grained execution traces in distributed systems. We experiment the proposed framework in two real-world critical information systems from the Crisis Management and the Air Traffic Control domains. Results show that our framework achieves 95% timing error coverage and allows reconstructing error trends with high statistical confidence at negligible performance overhead.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(82,NULL,1,'A data-driven approach for quality analytics of screwing processes in a global learning factory','No aplica',NULL,NULL,'Quality problems of screwing processes in assembly systems, which are an important issue for operation excellence, needs to be quickly analyzed and solved. A network can be very beneficial for root cause analysis due to different data from various factories. Nevertheless, it is difficult to obtain reliable and consistent data. In this context, this paper aims to develop a method for data-driven oriented quality analytics of screwing processes considering a global production network. Firstly, the overview of data structure is introduced. Further, the data transformation is modelled for edge- and cloud-based analytics across the global production network. Lastly, the rules for analyzing are identified. A joint case study based on Learning Factory Global Production (LF) in Germany and I4.0 Innovation Centre and Artificial Intelligence Innovation Factory (IC&AIIF) in China is used to validate the proposed approach, which is also a new teaching method for quality analysis in the framework of learning factory.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(83,NULL,1,'Latency-aware failover strategies for containerized web applications in distributed clouds','No aplica',NULL,NULL,'Despite advances in Cloud computing, ensuring high availability (HA) remains a challenge due to varying loads and the potential for Cloud outages. Deploying applications in distributed Clouds can help overcome this challenge by geo-replicating applications across multiple Cloud data centers (DCs). However, this distributed deployment can be a performance bottleneck due to network latencies between users and DCs as well as inter-DC latencies incurred during the geo-replication process. For most web applications, both HA and Performance (HAP) are essential and need to meet pre-agreed Service Level Objectives (SLOs). Efficiently placing and managing primary and backup replicas of applications in distributed Clouds to achieve HAP is a challenging task. Existing solutions consider either HA or performance but not both. In this paper we propose an approach for automating the process of providing a latency-aware failover strategy through a server placement algorithm leveraging genetic algorithms that factor in the proximity of users and inter-DC latencies. To facilitate the distributed deployment of applications and avoid the overheads of Clouds, we utilize container technologies. To evaluate our proposed approach, we conduct experiments on the Australia-wide National eResearch Collaboration Tools and Resources (NeCTAR - www.nectar.org.au) Research Cloud. Our results show at least a 23.3% and 22.6% improvement in response times under normal and failover conditions respectively compared to traditional, latency-unaware approaches. Also, the 95th percentile of response times in our approach are at most1.5 ms above the SLO compared to 11–32 ms using other approaches.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(84,0,3,'An API gateway design strategy optimized for persistence and coupling','RQ1 (probable)\nParace hablar en mayor medida de las API gateway aplicadas a microservicios con el fin de homogenizar la exposición y el llamado \n\nLos microservicios desempeñan un papel cada vez más importante en el desarrollo de software hoy en día. Casi todos los lenguajes de programación tienen su propio marco de desarrollo de microservicios. Las características de los microservicios hacen que los microservicios tengan problemas de compatibilidad entre plataformas y problemas de estándares de llamadas incoherentes en el proceso de desarrollo y llamen a microservicios. El nacimiento de API Gateway alivia estos problemas en cierta medida. Para las pequeñas y medianas empresas que utilizan las populares puertas de enlace API de hoy en día, es difícil para ellas obtener un equilibrio entre costo, rendimiento y mantenimiento. Este documento propone un esquema para optimizar API Gateway. En primer lugar, se optimiza el marco de API Gateway. A continuación, el grado de acoplamiento de API Gateway se optimiza reduciendo el grado de acoplamiento de los servicios principales y las funciones extendidas. De esta manera, la puerta de enlace optimizada puede adaptarse al modo plug-in, mejorar la experiencia del usuario y reducir los costes de desarrollo. A continuación, se lleva a cabo el diseño persistente de la información de configuración de API Gateway y se lleva a cabo la optimización de lectura y escritura para que API Gateway optimizada no solo tenga ventajas en la persistencia de la configuración, sino que también haya mejorado aún más el rendimiento de E/S. Basado en el diseño optimizado, este documento implementa una puerta de enlace de API compatible con varias plataformas. A continuación, compara el rendimiento de dos esquemas populares de API Gateway a través de pruebas de rendimiento. Los resultados de las pruebas muestran que el diseño optimizado de API Gateway logra un nuevo equilibrio entre el costo, el rendimiento y la capacidad de mantenimiento. Al final de este documento, se resume el trabajo de este documento y se proyecta el siguiente trabajo.',NULL,2,'Microservices play a more and more important role in software development nowadays. Almost every programming language has its own microservices development framework. The characteristics of microservices make microservices have cross-platform compatibility issues and inconsistent call standards issues in the process of development and call microservices. The birth of API Gateway alleviates these problems to some extent. For small and medium-sized enterprises using today\'s popular API Gateways, it is difficult for them to get a balance between cost, performance and maintainability. This paper proposes a scheme to optimize the API Gateway. Firstly, the framework of API Gateway is optimized. Next, the coupling degree of API Gateway is optimized by reducing the coupling degree of core services and extended functions. In this way, the optimized Gateway can adapt to the plug-in mode, improve the user experience and reduce development costs. Then, the persistent design of the configuration information of the API Gateway is carried out, and the read-write optimization is carried out so that the optimized API Gateway not only has advantages in the configuration persistence, but also has further improved the I/O performance. Based on the optimized design, this paper implements a cross platform compatible API Gateway. Then it compares the performance of two popular API Gateway schemes through performance testing. The test results show that the optimized design of API Gateway achieves a new balance among cost, performance and maintainability. At the end of this paper, the work of this paper is summarized, and the next work is projected.',0,'SPS003',0,'JOUR',0,'2020',1),(85,NULL,1,'StoRM: A social agent-based trust model for the internet of things adopting microservice architecture','No aplica',NULL,NULL,'Over the last years, the Internet of Things attracted much attention mainly due to its potential to change our daily life. It attempts to create a world where everyone and everything will be connected while knowledge will be diffused effortlessly. Yet, this open, distributed and heterogeneous environment raises important challenges, such as intelligence and trustworthiness. Intelligent Agents can deal with these challenges since they form an alternative to traditional interactions among people and objects while, at the same time, they are involved in a rich research effort regarding trust management. Additionally, intelligent agents seem able to deal with potential societal impacts and relationships, although they are not primary social networks, as well as the heterogeneity in the Internet of Things when combined with novel approaches such as the microservice architecture. To this end, this article proposes a novel, reputation oriented, trust model, called StoRM, for the Internet of Things that combines social dimensions and microservice architecture with agent technology. StoRM is based on well-established estimation parameters while it provides a reputation estimation mechanism based on social principles. Additionally, it proposes the use of microservices combined with learning and adoption properties facilitating the implementation of the agent-based system and the trust establishment among its members. Furthermore, it adopts a distributed locating mechanism based on social graphs and peer-to-peer networks. StoRM combining a set of features is able to address many of the challenges of trust management in the Internet of Things while it is one of the first approaches that involve the microservice architecture in a trust management model. Finally, a multi-agent simulation is presented that illustrates the viability of the proposed approach.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(86,NULL,1,'Blockchain Enabled Cyber-Physical Society Framework','No aplica',NULL,NULL,'Blockchain is a disrupting technology that is transforming the technological ecosystem that drives and governs the transactions. Establishing the distributed trust in the cyber-physical society without any intermediaries has the potential to impact and change many industries. This paper focuses on the possibility of blockchain in transforming cyber-physical society and proposes a blockchain enabled cyber-physical society framework. The framework will help various stakeholders to develop distributed and decentralized trust-based cyber-physical society.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(87,NULL,1,'Performance Evaluation of Replication Policies in Microservice Based Architectures','No aplica\n',NULL,NULL,'Nowadays applications tend to be executed on distributed environments provisioned using on-demand infrastructures. The use of techniques such as application containers simplifies the orchestration of complex systems. In this context, microservices based architectures offer a promising solution for what concerns software development and scalability. In this paper, we propose an approach to study the automatic scalability of microservices architectures deployed in public and private clouds. A Fluid Petri Net model describes the characterise of the platform, and a real trace drives the approach to consider a realistic scenario. Our focus is on evaluating the performances, costs and energy consumptions from both the service provider and infrastructure provider point of view.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(88,NULL,1,'Trust management in a blockchain based fog computing platform with trustless smart oracles','No aplica',NULL,NULL,'Trust is a crucial aspect when cyber-physical systems have to rely on resources and services under ownership of various entities, such as in the case of Edge, Fog and Cloud computing. The DECENTER\'s Fog Computing Platform is developed to support Big Data pipelines, which start from the Internet of Things (IoT), such as cameras that provide video-streams for subsequent analysis. It is used to implement Artificial Intelligence (AI) algorithms across the Edge-Fog-Cloud computing continuum which provide benefits to applications, including high Quality of Service (QoS), improved privacy and security, lower operational costs and similar. In this article, we present a trust management architecture for DECENTER that relies on the use of blockchain-based Smart Contracts (SCs) and specifically designed trustless Smart Oracles. The architecture is implemented on Ethereum ledger (testnet) and three trust management scenarios are used for illustration. The scenarios (trust management for cameras, trusted data flow and QoS based computing node selection) are used to present the benefits of establishing trust relationships among entities, services and stakeholders of the platform.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(89,NULL,1,'A survey on decision-making based on system reliability in the context of Industry 4.0','No aplica',NULL,NULL,'The business world is continually changing. Dynamic environments, full of uncertainties, complexities, and ambiguities, demand faster and more confident decisions. To compete in this environment, Industry 4.0 emerges as an essential alternative. In this context, the reliability of manufacturing is an essential aspect for companies to make successful decisions. In the literature, several technologies associated with Industry 4.0 have been applied to improve the availability of equipment, including the Internet of Things (IoT), Cyber-Physical Systems (CPS), blockchain, and data mining. Nevertheless, there is still no survey study that seeks to show how reliability has collaborated to support decision-making in organizations, in the context of Industry 4.0. In general, most applications still focus on the productivity and health of individual equipment. However, in today\'s volatile and complex businesses, local decisions are no longer sufficient; it is necessary to analyze the organization entirely. Thus, being aware of the impacts that a local failure can impose on the entire company has significant weight in the decision-making process. In this context, this article presents a survey to identify how researches on systems reliability has contributed to and supported the development of decision-making in Industry 4.0. The main contribution of this article is to highlight how reliability can be used to support different types of strategic decisions in the context of Industry 4.0. Finally, it highlights the need for research associating management decisions with the technologies of Industry 4.0.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(90,NULL,1,'Data exfiltration: A review of external attack vectors and countermeasures','No aplica',NULL,NULL,'Context One of the main targets of cyber-attacks is data exfiltration, which is the leakage of sensitive or private data to an unauthorized entity. Data exfiltration can be perpetrated by an outsider or an insider of an organization. Given the increasing number of data exfiltration incidents, a large number of data exfiltration countermeasures have been developed. These countermeasures aim to detect, prevent, or investigate exfiltration of sensitive or private data. With the growing interest in data exfiltration, it is important to review data exfiltration attack vectors and countermeasures to support future research in this field. Objective This paper is aimed at identifying and critically analysing data exfiltration attack vectors and countermeasures for reporting the status of the art and determining gaps for future research. Method We have followed a structured process for selecting 108 papers from seven publication databases. Thematic analysis method has been applied to analyse the extracted data from the reviewed papers. Results We have developed a classification of (1) data exfiltration attack vectors used by external attackers and (2) the countermeasures in the face of external attacks. We have mapped the countermeasures to attack vectors. Furthermore, we have explored the applicability of various countermeasures for different states of data (i.e., in use, in transit, or at rest). Conclusion This review has revealed that (a) most of the state of the art is focussed on preventive and detective countermeasures and significant research is required on developing investigative countermeasures that are equally important; (b) Several data exfiltration countermeasures are not able to respond in real-time, which specifies that research efforts need to be invested to enable them to respond in real-time (c) A number of data exfiltration countermeasures do not take privacy and ethical concerns into consideration, which may become an obstacle in their full adoption (d) Existing research is primarily focussed on protecting data in ‘in use’ state, therefore, future research needs to be directed towards securing data in ‘in rest’ and ‘in transit’ states (e) There is no standard or framework for evaluation of data exfiltration countermeasures. We assert the need for developing such an evaluation framework.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(91,NULL,1,'Patterns for emerging application integration scenarios: A survey','No aplica',NULL,NULL,'The discipline of enterprise application integration (EAI) enables the decoupled communication between (business) applications, and thus became a cornerstone of today\'s IT architectures. In 2004, the book by Hohpe and Woolf on Enterprise Integration Patterns (EIP) provided a fundamental collection of messaging patterns, denoting the building blocks of many EAI system implementations. Since then, multiple new trends and a broad range of new application scenarios have emerged, e. g., cloud and mobile computing, multimedia streams. These developments ultimately lead to conceptual changes and challenges such as larger data volumes (i. e., message sizes), a growing number of messages (i. e., velocity) and communication partners, and even more diverse message formats (i. e., variety). However, the research since 2004 focused on isolated EAI solutions, and thus a broader and integrated analysis of solutions and new patterns is missing. In this survey, we summarize new trends and application scenarios which serve as a frame to structure our survey of academic research on EIP, existing systems for EAI and also to classify integration patterns from these sources. We evaluate recently developed integration solutions and patterns in the context of real-world integration scenarios. Finally, we derive and summarize remaining challenges and open research questions.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(92,NULL,1,'A distributed authentication model for composite Web services','No aplica',NULL,NULL,'Proliferation of Web services based applications, collaboration and interoperability between companies, extremely heterogeneous policies of security, and, more generally, reply attacks over Internet are major challenges in the design of security infrastructures for Web services. In this paper, we focus our study on authentication of composite Web services. Authentication is certainly at the heart of any secure system. Thus, we propose a distributed model of authentication based on the circle of trust concept for composite Web services. This model has several functionalities: First, it ensures authentication for arbitrary composite Web services over Internet. Second, it can process across and beyond domain authentication boundaries. Third, it takes over the conflicts of security policies using the concept of Web Single Sign On (SSO) and client\'s profile using ontologies. Furthermore, the proposed model is scalable and dynamic because it is designed in a fully distributed manner, there are no central points and it evolves over time. An implementation of a prototype and a simulation design demonstrate that a strong security can be achieved for both the client and the composite Web service through the combination of a dynamic and collaborative trust model with a number of enhancements: (i) a combined encryption technique, (ii) a distributed authority of certificates, and (iii) semantic annotations.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(93,NULL,1,'Cloudification of my.eskwela for e-Governance in Philippine Education','No aplica',NULL,NULL,'On-premise implementation of information systems suffers from performance problems due to the inability to scale or allocate computing resources because of high user demands. Such a case was experienced by many teachers accessing the Philippines Department of Education (DepEd) Learners Information System(LIS)1. The system just breaks2 during submission of report in a scheduled time and forces the teachers to do extra work in waiting for systems availability just to re-submit the report. Such scenario is an impediment to the implementation of e-Government3 as envisioned by the Philippine government. An alternative approach was explored and a student information system, named my.eskwela version 2.0, was deployed to a Philippine Public Elementary School with budgetary constraints. The original my.eskwela4 system was housed on-premise through virtual system but was redeveloped to fit the needs of the Philippine K-12 curriculum and re-deployed to the cloud for the purpose of enhancing the services of the beneficiary school. The process of deploying the on-premise application to the cloud is called cloudification. Cloudification of my.eskwela has greatly impacted the primary school community that hopes to improve its processes through e-governance. Deploying the application into the cloud allowed the possibility of focusing on the software features instead of worrying on finding the funds for the initial IT infrastructure into which the application will run. Cloudification further enabled e-governance to its full extent and it was able to overcome most of the implementation challenges for providing better service to the community.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(94,NULL,1,'Twenty years of coordination technologies: COORDINATION contribution to the state of art','No aplica',NULL,NULL,'Complexity of intra- and inter-systems interactions is steadily increasing in modern application scenarios such as the Internet of Things, therefore coordination technologies are required to take a crucial step forward towards full maturity. In this paper we look back at the history of the COORDINATION conference series with the goal of shedding light on the current status of the coordination technologies there proposed throughout the years, also in comparison with other venues and industrial proposals, in an attempt to emphasise success stories as well as limitations, and possibly reveal a gap between actual technologies, theoretical models, and novel application needs.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(95,NULL,1,'Modified deep residual network architecture deployed on serverless framework of IoT platform based on human activity recognition application','No aplica',NULL,NULL,'In the last few years, human activity recognition (HAR) is a subject undergoing intense study in various contexts such as pattern recognition and human-device interaction. HAR applications come to an aid of Telecare system which is paving the way for doctors and nurses to measure the health status of their patients. Due to the ubiquitous influence of smartphones in an individual\'s life, we take embedded smartphone sensors into account as our case study. The proposed method, Modified Deep Residual Network, outperforms the accuracy of Human activity recognition compared with state-of-the-art machine learning techniques which are using Raw signals as their input. we defined new pooling layer called smooth-pooling to leverage the model performance. The accuracy of proposed architecture is evaluated on three common dataset that comprises accelerometer and gyroscope raw data. The results demonstrated the proposed method outperforms accuracy of classification while requiring just raw data with lower parameters compared to other works. Furthermore, The proposed HAR method is deployed in our IoT cloud platform which enables users to create scenarios based on what they are doing at home. Using Function as a Service (FaaS) architecture in this platform solves the scalability issues by running each function in a separate container. The IoT platform prepares an infrastructure for developers who want to integrate their application into the platform and use its functionality along with other IoT platform options.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(96,NULL,1,'A formal approach to the engineering of domain-specific distributed systems','No aplica',NULL,NULL,'We review some results regarding specification, programming and verification of different classes of distributed systems which stemmed from the research of the Concurrency and Mobility Group at University of Firenze. More specifically, we examine the distinguishing features of network-aware programming, service-oriented computing, autonomic computing, and collective adaptive systems programming. We then present an overview of four different languages, namely KLAIM, COWS, SCEL and AbC. For each language, we discuss design choices, present syntax and semantics, show how the different formalisms can be used to model and program a travel booking scenario, and describe programming environments and verification techniques.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(97,NULL,1,'The Performance Metric for Enterprise Service Bus (ESB) in SOA system: Theoretical underpinnings and empirical illustrations for information processing','no aplica',NULL,NULL,'Now days, the businesses are going online and e-Commerce industry is on its boom. In this changing era of development, services are to be Robust, Agile, Accessible and Available to its clients. For secured and guaranteed delivery of services, every big organization is shifting their service delivery model to Enterprise Service Bus (ESB). It promises to set up a strong guideline to build System Oriented Architecture (SOA) system, which leverages multiple services from different application domains. This paper presents an analytical survey of ESB on different parameters influencing the performance of SOA in the present changing scenario and service patterns.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(98,NULL,1,'An industrial evaluation of data access techniques for the interoperability of engineering software tools','no aplica',NULL,NULL,'New industrial initiatives such as Industrie 4.0 rely on digital end-to-end engineering across the entire product lifecycle, which in turn depends on the ability of the supporting software tools to interoperate. A tool interoperability approach based on Linked Data, and the OASIS OSLC standard, has the potential to provide such integration, where each software tool can expose its information and services to other tools using the web as a common technology base. In this paper, we report on our negative findings when attempting to use existing ontology-based Linked Data access techniques to expose and manipulate the structured content managed in engineering tools. Such techniques typically target the Data Access Layer (DAL) of a tool to access and manipulate its content, with the assumption that sufficient information and control is available within this layer to automate the process. Based on a case study with the truck manufacturer Scania CV AB, our study finds that an engineering tool controls its artefacts using business logic that is not necessarily reflected at the data layer. This renders such ontology-based access techniques inadequate. Instead we propose an alternative Linked Data extraction architecture that can mitigate the identified shortcomings. While less automated compared to the existing solutions, the proposed architecture is realised as a standalone library that can still facilitate the extraction process.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(99,NULL,1,'Two novel semi-quantum-reflection protocols applied in connected vehicle systems with blockchain','No aplica',NULL,NULL,'The increasing evolution of Internet of Vehicles (IoV) is bringing about a crucial challenge in information security, which is typically classified into network and large data storage security areas. A quantum cryptosystem is secure against cloning, and is thus immune to many types of traditional network attacks. Blockchain is a distributed ledger technology based on a game theory consensus, and has already shown significant advantages in terms of data security. In this study, a method to extend the use of quantum and blockchain technologies in the security of IoV is considered. Herein, we present a semi-quantum system with a blockchain architecture and provide two lightweight approaches for its application to IoV with unconditional security and a single round of completion. Moreover, with our two protocols, only two modular exponentiations are applied, and the remaining computations are hash or XOR operations, which can be ignored. The results of our study may provide a guide for future applications toward IoV in the era of quantum and blockchain technologies.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(100,NULL,1,'Approaches for resilience and antifragility in collaborative business ecosystems','No aplica',NULL,NULL,'Contemporary business ecosystems are continuously challenged by unexpected disruptive events, which are increasing in their frequency and effects. A critical question is why do some organizations collapse in face of extreme events, while others not? On the other hand, current engineering and socio-technical systems were designed to operate in “mostly stable” situations; sporadic instability and disturbances are at best captured by exception handling mechanisms, focusing on reliability and robustness. Recent and more ambitious design goals, however, aim at building systems that are expected to cope with severe disruptions, and survive or even thrive in a context of volatility and uncertainty. This led to an increasing attention to the concepts of resilience and antifragility. As such, this article introduces the findings of a comprehensive literature survey aimed at shedding light on emerging concepts and approaches to handle disruptions in business ecosystems. Main contributions include a clarification of related concepts, identification and classification of disruption sources and drivers, and extensive lists of strategies and underlying capabilities to cope with disruptions. Related perspectives and approaches developed in multiple knowledge areas are also analysed and synthesized. Finally, a collection of engineered systems implementing promising approaches to increase resilience and antifragility are presented.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(101,NULL,1,'Capturing Software Architecture Knowledge for Pattern-Driven Design','Podria ser util ',NULL,1,'Context: Software architecture is a knowledge-intensive field. One mechanism for storing architecture knowledge is the recognition and description of architectural patterns. Selecting architectural patterns is a challenging task for software architects, as knowledge about these patterns is scattered among a wide range of literature. Method: We report on a systematic literature review, with the aim of building a decision model for the architectural pattern selection problem. Moreover, twelve experienced practitioners at software-producing organizations evaluated the usability and usefulness of the extracted knowledge.\\newline Results: An overview is provided of 29 patterns and their effects on 40 quality attributes. Furthermore, we report in which systems the 29 patterns are applied and in which combinations. The practitioners confirmed that architectural knowledge supports software architects with their decision-making process to select a set of patterns for a new problem. We investigate the potential trends among architects to select patterns. Conclusion: With the knowledge available, architects can more rapidly select and eliminate combinations of patterns to design solutions. Having this knowledge readily available supports software architects in making more efficient and effective design decisions that meet their quality concerns.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(102,NULL,1,'A new pedestrians\' intuitionistic fuzzy risk exposure indicator and big data trajectories analytics on Spark-Hadoop ecosystem','No aplica',NULL,NULL,'Pedestrians are vulnerable users of the road system. The ability to meet pedestrian safety is an important component of efforts to prevent accidents in road traffic. The approach proposed in this paper aligns the theory of intuitionistic fuzzy numbers on pedestrian risk modeling goals. New indicators are proposed to model pedestrian exposure to hazards. The approach seems promising since it allows addressing behavioral psychology of pedestrians with intuitive methods based on fuzzy set theory. We develop a software system for this opportunity and we reuse simulation models of pedestrian developed in our previous work. Pedestrians\' trajectories are also stored in a Spark-Hadoop eco-system for analytical purposes and discovering patterns. Intuitionistic fuzzy set theory is very useful in providing a flexible model to elaborate uncertainty and vagueness involved in decision-making. The integration of behavioral factors related to the perception of space and the decision of the two antagonists are often missing or poorly considered. As such, the intuitionist approach allows connecting the two realities perceived by antagonists\' actors.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(103,NULL,1,'Exploiting load testing and profiling for Performance Antipattern Detection','No aplica',NULL,NULL,'Context: The performance assessment of complex software systems is not a trivial task since it depends on the design, code, and execution environment. All these factors may affect the system quality and generate negative consequences, such as delays and system failures. The identification of bad practices leading to performance flaws is of key relevance to avoid expensive rework in redesign, reimplementation, and redeployment. Objective: The goal of this manuscript is to provide a systematic process, based on load testing and profiling data, to identify performance issues with runtime data. These performance issues represent an important source of knowledge as they are used to trigger the software refactoring process. Software characteristics and performance measurements are matched with well-known performance antipatterns to document common performance issues and their solutions. Method: We execute load testing based on the characteristics of collected operational profile, thus to produce representative workloads. Performance data from the system under test is collected using a profiler tool to create profiler snapshots and get performance hotspot reports. From such data, performance issues are identified and matched with the specification of antipatterns. Software refactorings are then applied to solve these performance antipatterns. Results: The approach has been applied to a real-world industrial case study and to a representative laboratory study. Experimental results demonstrate the effectiveness of our tool-supported approach that is able to automatically detect two performance antipatterns by exploiting the knowledge of domain experts. In addition, the software refactoring process achieves a significant performance gain at the operational stage in both case studies. Conclusion: Performance antipatterns can be used to effectively support the identification of performance issues from load testing and profiling data. The detection process triggers an antipattern-based software refactoring that in our two case studies results in a substantial performance improvement.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(104,NULL,1,'Detection of time series patterns and periodicity of cloud computing workloads','No aplica',NULL,NULL,'Workload pattern detection can be used as part of a proactive decision-making approach to optimize resource provisioning strategies and anticipate any performance problem in cloud computing environments. Existing workload pattern detection approaches suffer from two essential limitations which restrict their effectiveness in such environments. Specifically, they require massive human intervention, and are specific to particular types of workload data. To overcome these limitations, we propose in this paper a generic workload pattern and periodicity detection technique that employs the prefix transposition approach from the molecular biology domain to detect workload periodicity in node-specific and aggregated cloud environments. The strengths of the proposed technique compared to the state of the art lie in its ability to be applied to any type of workload, and also to detect patterns of varying lengths, amplitudes, and shapes. Experiments conducted on cloud server nodes and aggregated CPU and throughput workload datasets collected from Information Technology (IT) and Telecom domains reveal that our solution improves the accuracy of the detections, especially in harsh environments, where the lengths, shapes, and amplitudes of patterns vary, as compared to the autocorrelation technique. Other findings show that the proposed approach is also highly efficient at detecting multiple short-term and long-term periodic patterns on any type of time series-based cloud computing workloads of different time granularity.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(105,NULL,1,'Reprint of : LEGIoT: A Lightweight Edge Gateway for the Internet of Things','No aplica',NULL,NULL,'The stringent latency together with the higher bandwidth requirements of current Internet of Things (IoT) applications, are leading to the definition of new network-infrastructures, such as Multi-access Edge Computing (MEC). This emerging paradigm encompasses the execution of many network tasks at the edge and in particular on constrained gateways that have also to deal with the plethora of disparate technologies available in the IoT landscape. To cope with these issues, we introduce a Lightweight Edge Gateway for the Internet of Things (LEGIoT) architecture. It relies on the modular characteristic of microservices and the flexibility of lightweight virtualization technologies to guarantee an extensible and flexible solution. In particular, by combining the implementation of specific frameworks and the benefits of container-based virtualization, our proposal enhances the suitability of edge gateways towards a wide variety of IoT protocols/applications (for both downlink and uplink) enabling an optimized resource management and taking into account requirements such as energy efficiency, multi-tenancy, and interoperability. LEGIoT is designed to be hardware agnostic and its implementation has been tested within a real sensor network. Achieved results demonstrate its scalability and suitability to host different applications meant to provide a wide range of IoT services.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(106,NULL,1,'Blockchain-enabled logistics finance execution platform for capital-constrained E-commerce retail','No aplica',NULL,NULL,'As one of the most prevailing retail channels, E-commerce has nowadays facilitated retailers to sell goods to customers worldwide and tremendously increased the supply chain efficiency by removing most intermediate links. The broaden business scope and accelerated goods circulation, nevertheless, have generally led to capital shortages for retailers, especially small and medium enterprises (SMEs). Given the SMEs’ difficulty in acquiring capital from financial institutions such as banks, logistics finance (LF) has emerged as an alternative, which is the combination of logistics and financial service. However, the frequent order fulfillment and diversity of pledges in E-commerce hinder SMEs in meeting LF\'s financing requirements. Furthermore, the current LF relies more on large and reputable third-party logistics (3PLs) to alleviate financing risks, which in turn raises the entry threshold for other 3PLs. Hence, this paper has proposed a blockchain-enabled logistics finance execution platform (BcLFEP) as an integrated solution to facilitate LF for E-commerce retail. A cross-layered architecture is proposed to organize and manage involved resources, workflows and decisions based on the object-oriented methodology (OOM). A hybrid finite state machine-based smart contract (HFSM-SC) is designed to associate and coordinate with all kinds of agents for LF operations throughout its lifecycle. Moreover, blockchain is integrated with agent technology to construct a blockchain-enabled multi-agent system (BcMAS), providing a trusted runtime environment to more autonomously and efficiently execute smart contract. Finally, a case study is conducted to implement BcLFEP-enabled dynamic pledge management for verification and evaluation.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(107,NULL,1,'Enabling runtime flexibility in data-centric and data-driven process execution engines','No aplica',NULL,NULL,'Contemporary process management systems support users during the execution of predefined business processes. However, when unforeseen situations occur, which are not part of the process model serving as the template for process execution, contemporary technology is often unable to offer adequate user support. One solution to this problem is to allow for ad-hoc changes to process models, i.e., changes that may be applied on the fly to a running process instance. As opposed to the widespread activity-centric process modeling paradigm, for which the support of instance-specific ad-hoc changes is well researched, albeit not properly supported by most commercial process engines, there is no corresponding support for ad-hoc changes in other process support paradigms, such as artifact-centric or object-aware process management. This article presents concepts for supporting ad-hoc changes in data-centric and data-driven processes, and gives insights into the challenges to be tackled when implementing this kind of process flexibility in the PHILharmonicFlows process execution engine. We evaluated the concepts by implementing a proof-of-concept prototype and applying it to various scenarios. The development of advanced flexibility features is highly relevant for data-centric processes, as the research field is generally perceived as having low maturity compared to activity-centric processes.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(108,NULL,1,'EasyMiner.eu: Web framework for interpretable machine learning based on rules and frequent itemsets','No aplica',NULL,NULL,'EasyMiner (http://www.easyminer.eu) is a web-based system for interpretable machine learning based on frequent itemsets. It currently offers association rule learning (apriori, FP-Growth) and classification (CBA). EasyMiner offers a visual interface designed for interactivity, allowing the user to define a constraining pattern for the mining task. The CBA algorithm can also be used for pruning of the rule set, thus addressing the common problem of “too many rules” on the output, and the implementation supports automatic tuning of confidence and support thresholds. The development version additionally supports anomaly detection (FPI and its variations) and linked data mining (AMIE+). EasyMiner is dockerized, some of its components are available as open source R packages.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(109,NULL,1,'Using the Operations Research Methods to Address Distribution Tasks at a City Logistics Scale','No aplica',NULL,NULL,'The manuscript discusses the overview and specification of the existing Operations Research methods for their implementation in terms of addressing distribution tasks in particular to optimize delivery routes at a City logistics scale. First of all a detailed literature review in a given context is elaborated while the description of potentially relevant techniques to be applied is presented. The manuscript objective is to identify the most appropriate and benefit methods for their implementation to solve vehicle routing problem (hereinafter as VRP) at a City logistics scale and related optimization operations; i.e. to seek the shortest possible routes during the customer\'s delivery activities. In this matter it is important to state that relevant distribution (pick-up and delivery) tasks can be expressed in a form of graphs on specified transport networks and thereby use the individual techniques of graph theory. The particular transport network as the basic concept of transport theory is defined as a finite set of vertices and edges representing the infrastructure of roads of a network. Each network must be coherent i.e. there must be at least one path for each vertex pair connecting these two vertices. Each network edge as well as vertex is defined by a certain value or set of values for example the edge length the time it takes to pass the amount of work that needs to be done on the edge etc.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(110,NULL,1,'Evaluating REST architectures - Approach, tooling and guidelines','No aplica',NULL,NULL,'Architectural decisions determine the ability of the implemented system to satisfy functional and quality attribute requirements. The Representational State Transfer (REST) architectural style has been extensively used recently for integrating services and applications. Its adoption to build SOA-based distributed systems brings several benefits, but also poses new challenges and risks. Particularly important among those risks are failures to effectively address quality attribute requirements such as security, reliability, and performance. A proved efficient technique to identify and help mitigate those risks is the architecture evaluation. In this paper we propose an approach, tooling, and guidelines to aid architecture evaluation activities in REST-based systems. These guidelines can be systematically used along with evaluation methods to reason about design considerations and tradeoffs. To demonstrate how the guidelines can help architecture evaluators, we present a proof of concept describing how to use the guidelines in an ATAM (Architecture Tradeoff Analysis Method) evaluation. We also present the results of a survey conducted with industry specialists who have performed architecture evaluations in real world REST-based systems in order to gauge the suitability and utility of the proposed guidelines. Finally, the paper describes a Web tool developed to facilitate the use of the evaluation guidelines.',NULL,NULL,NULL,'JOUR',NULL,'2016',1),(111,34,3,'A Microservice-based Middleware for the Digital Factory','RQ1 (probablemente no sirva)\nAplicación de los microservicios en una arquitectura Middleware para fabricas digitales.',NULL,2,'In recent years a considerable effort has been spent by research and industrial communities in the digitalization of production environments with the main objective of achieving a new automation paradigm, more flexible, responsive to changes, and safe. This paper presents the architecture, and discusses the benefits, of a distributed middleware prototype supporting a new generation of smart-factory-enabled applications with special attention paid to simulation tools. Devised within the scope of MAYA EU project, the proposed platform aims at being the first solution capable of empowering shop-floor Cyber-Physical-Systems (CPSs), providing an environment for their Digital Twin along the whole plant life-cycle. The platform implements a microservice IoT-Big Data architecture supporting the distributed publication of multidisciplinary simulation models, managing in an optimized way streams of data coming from the shop-floor for real-digital synchronization, ensuring security and confidentiality of sensible data.',8.5,'SPS002',0,'JOUR',0.5,'2017',1),(112,NULL,1,'Modeling requirements of multiple single products to feature model','No aplica',NULL,NULL,'This work investigates how the requirements of multiple single products can be modeled into a feature model as part of domain engineering process in software product line engineering (SPLE) methodology. It adopts an extractive strategy in devising a two-step process for creating the feature model. The first step is by identifying the business process and list of features across all products into a product roadmap. The second step is identifying the commonality and variability of features based on the product roadmap into a feature model. The proposed approach may help a software company that produces software products for certain domain to migrate from traditional single product development lifecycle to software product line development lifecycle.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(113,NULL,1,'Agent-based Internet of Things: State-of-the-art and research challenges','No aplica',NULL,NULL,'The disruptive potentials of the Internet of Things (IoT) entails multifaceted requirements and development issues (large scale deployments, heterogeneity, cyberphysicality, interoperability, distributed smartness, self-management, etc.). To adequately tackle them and to comprehensively support the development of the IoT ecosystem, the Agent-Based Computing (ABC) represents a proper and solid modeling, programming and simulation paradigm. Indeed, abstractions, design methods, technology and frameworks related to the ABC have been widely exploited, possibly jointly with other well-established/emerging computing paradigms, to actually develop advanced IoT ecosystem. This survey, an extension of our previous work, reports most relevant contemporary contributions in the field, aiming at assessing suitability of the ABC paradigm for the (current and future) IoT development.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(114,NULL,1,'Efficient mobile clouds: Forecasting the future connectivity of mobile and IoT devices to save energy and bandwidth','No aplica',NULL,NULL,'Use cases in the Internet of Things (IoT) and in mobile clouds often require the interaction of one or more mobile devices with their infrastructure to provide users with services. Ideally, this interaction is based on a reliable connection between the communicating devices, which is often not the case. Since most use cases do not adequately address this issue, service quality is often compromised. Aimed to address this issue, this paper proposes a novel approach to forecast the connectivity and bandwidth of mobile devices by applying machine learning to the context data recorded by the various sensors of the mobile device. This concept, designed as a microservice, has been implemented in the mobile middleware CloudAware, a system software infrastructure for mobile cloud computing that integrates easily with mobile operating systems, such as Android. We evaluate our approach with real sensor data and show how to enable mobile devices in the IoT to make assumptions about their future connectivity, allowing for intelligent and distributed decision making on the mobile edge of the network.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(115,NULL,1,'A blockchain use case in food distribution: Do you know where your food has been?','No aplica\n',NULL,NULL,'This paper aims to explain the implementation of blockchain technology in the production and supply chain delivery system for eggs from farm to consumer by a company based in the Midwestern USA. One of the primary research questions answered is how blockchain can be utilized and applied to more accurately and transparently move goods through global supply chains. This company is at the forefront of developing such systems for use in industry, and a use case for egg distribution is detailed. The goal is to track products from farm to fork using blockchain and internet of things (IoT) enabled technologies. By creating traceable and transparent supply chains for food, consumers can attain the information they need to make informed choices about the food they buy and the companies they support. For stakeholders in the food supply chain, having traceability and transparency builds better relationships with their customers, increases efficiency, and reduces the risk and cost of food recalls, fraud, and product loss. The blockchain technology and this business are creating a case for fixing and transforming the world\'s food system.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(116,NULL,1,'Engineering design analysis utilizing a cloud platform','No aplica',NULL,NULL,'In this paper we present a novel methodology for modeling engineered and other systems based on integrating a set of component models that are accessible as “model-as-a-service” components within a cloud platform. These component models can be combined together to form a systems model. The component models are stateless and web-enabled. The advantage of being web-enabled is that developers can use the models as API endpoints as opposed to library components, hence making the models themselves language agnostic and less restrictive in their use. These ideas are presented within the context of a previously published engineering model for the thermal analysis and preliminary design of a small biomass cookstove. In this paper the monolithic biomass cookstove model is separated into six independent, stateless component models supported by a generic model application infrastructure. Interaction between the models is orchestrated by a federated model system. Finally, the results of the cookstove from the monolithic model were compared with the distributed systems model. It was found that there was no change in the results. However, the systems model increased the time-to-solution due to network latency. However, the ability to share models and data via API endpoints, will likely offset the overall wall-clock time for model integration, since model developers do not have to make code changes. In conclusion, it is advantageous to build web-enabled component models for their easy reuse across multiple systems models.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(117,NULL,1,'How does docker affect energy consumption? Evaluating workloads in and out of Docker containers','No aplica',NULL,NULL,'Context: Virtual machines provide isolation of services at the cost of hypervisors and more resource usage. This spurred the growth of systems like Docker that enable single hosts to isolate several applications, similar to VMs, within a low-overhead abstraction called containers. Motivation: Although containers tout low overhead performance, how much do they increase energy use? Methodology: This work statistically compares the energy consumption of three application workloads in Docker and on bare-metal Linux. Results: In all cases, there was a statistically significant (t-test and Wilcoxon p <.05) increase in energy consumption when running tests in Docker, mostly due to the performance of I/O system calls. Developers worried about I/O overhead could consider baremetal deployments over Docker container deployments.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(118,NULL,1,'ElaClo: A framework for optimizing software application topology in the cloud environment','No aplica',NULL,NULL,'Application architectures in the cloud employ elastic components, and achieve lower operating costs without sacrificing quality. Software architects strive to provide efficient services by deciding on software topology: a set of structural architectural decisions. For a given application, there can be numerous software topology alternatives creating the need for automated optimization methods. Current optimization approaches rely on experts providing application performance models built upfront, based on their experience and the requirements provided. While such techniques are effective and valuable, they require additional maintenance effort as the software evolves. This paper introduces ElaClo, a framework for optimizing application topologies in a cloud environment. ElaClo\'s main contribution is in providing optimization in the software assembly phase from automatically extracted application models. ElaClo provides workload generation, monitoring, topology management, elasticity mechanisms, and algorithms to support the optimization process. We have implemented ElaClo as an expert tool and evaluated it on a real-life cloud application from the retailing business domain. ElaClo was used to select optimal topologies with regards to service response time objectives and infrastructure costs. The efficiency of the optimization process and the quality of optimization results were validated quantitatively on a set of optimization runs. Results demonstrate the effectiveness of the suggested framework in yielding optimal topologies.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(119,NULL,1,'On blockchain and its integration with IoT. Challenges and opportunities','No aplica',NULL,NULL,'In the Internet of Things (IoT) vision, conventional devices become smart and autonomous. This vision is turning into a reality thanks to advances in technology, but there are still challenges to address, particularly in the security domain e.g., data reliability. Taking into account the predicted evolution of the IoT in the coming years, it is necessary to provide confidence in this huge incoming information source. Blockchain has emerged as a key technology that will transform the way in which we share information. Building trust in distributed environments without the need for authorities is a technological advance that has the potential to change many industries, the IoT among them. Disruptive technologies such as big data and cloud computing have been leveraged by IoT to overcome its limitations since its conception, and we think blockchain will be one of the next ones. This paper focuses on this relationship, investigates challenges in blockchain IoT applications, and surveys the most relevant work in order to analyze how blockchain could potentially improve the IoT.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(120,NULL,1,'Platform as a service gateway for the Fog of Things','No aplica',NULL,NULL,'Internet of Things (IoT), one of the key research topics in recent years, together with concepts from Fog Computing, brings rapid advancements in Smart City, Monitoring Systems, industrial control, transportation and other fields. These applications require a reconfigurable sensor architecture that can span multiple scenarios, devices and use cases that allow storage, networking and computational resources to be efficiently used on the edge of the network. There are a number of platforms and gateway architectures that have been proposed to manage these components and enable application deployment. These approaches lack horizontal integration between multiple providers as well as higher order functionalities like load balancing and clustering. This is partly due to the strongly coupled nature of the deployed applications, a lack of abstraction of device communication layers as well as a lock-in for communication protocols. This limitation is a major obstacle for the development of a protocol agnostic application environment that allows for single application to be migrated and to work with multiple peripheral devices with varying protocols from different local gateways. This research looks at existing platforms and their shortcomings as well as proposes a messaging based modular gateway platform that enables clustering of gateways and the abstraction of peripheral communication protocol details. These novelties allow applications to send and receive messages regardless of their deployment location and destination device protocol, creating a more uniform development environment. Furthermore, it results in a more streamlined application development and testing while providing more efficient use of the gateway\'s resources. Our evaluation of a prototype for the system shows the need for the migration of resources and the QoS advantages of such a system. The examined use case scenarios show that clustering proves to be an advantage in certain use cases as well as presenting the deployment of a larger testing and control environment through the platform.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(121,NULL,1,'A cluster of CP-ABE microservices for VANET','No aplica',NULL,NULL,'The promising high data rate of a 5G network enables the reality of Vehicular Ad Hoc Networks (VANET). VANETS are ad-hoc networks and they have limited resources. Providing the confidentiality of data by an access control system in a highly dynamic and automated network is a major challenge. Ciphertext Policy Attribute Based Encryption (CP-ABE) enables the encryption of the access control system to provide the confidentiality of data in a broadcast message. However, as CP-ABE is a form of public key encryption, it consumes high resources. That is a feasibility issue in VANET networks. In this paper, we designing a new algorithm that distribute the CP-ABE encryption tasks on the vehicles cluster. In our scheme, we use Kubernetes to build a cluster of vehicles. Applying CP-ABE microservices to ensure the confidentiality of data greatly mitigates the computation cost on vehicle resources. Our scheme allows to distribute CP-ABE tasks between vehicles using (V2V) connection without needing assistant network components such as a Road-Side Unit (RSU). In our algorithm, we distribute the encryption tasks based on the resource information of vehicles that Kubernetes collect to reduce the execution time of CP-ABE operations. We provide a numerical analysis for our algorithm and discuss our results.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(122,NULL,1,'Scalability Assessment of Microservice Architecture Deployment Configurations: A Domain-based Approach Leveraging Operational Profiles and Load Tests','No aplica',NULL,NULL,'Microservices have emerged as an architectural style for developing distributed applications. Assessing the performance of architecture deployment configurations — e.g., with respect to deployment alternatives — is challenging and must be aligned with the system usage in the production environment. In this paper, we introduce an approach for using operational profiles to generate load tests to automatically assess scalability pass/fail criteria of microservice configuration alternatives. The approach provides a Domain-based metric for each alternative that can, for instance, be applied to make informed decisions about the selection of alternatives and to conduct production monitoring regarding performance-related system properties, e.g., anomaly detection. We have evaluated our approach using extensive experiments in a large bare metal host environment and a virtualized environment. First, the data presented in this paper supports the need to carefully evaluate the impact of increasing the level of computing resources on performance. Specifically, for the experiments presented in this paper, we observed that the evaluated Domain-based metric is a non-increasing function of the number of CPU resources for one of the environments under study. In a subsequent series of experiments, we investigate the application of the approach to assess the impact of security attacks on the performance of architecture deployment configurations.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(123,NULL,1,'On the testing resource allocation problem: Research trends and perspectives','No aplica',NULL,NULL,'In testing a software application, a primary concern is how to effectively plan the assignment of resources available for testing to the software components so as to achieve a target goal under given constraints. In the literature, this is known as testing resources allocation problem (TRAP). Researchers spent a lot of effort to propose models for supporting test engineers in this task, and a variety of solutions exist to assess the best trade-off between testing time, cost and quality of delivered products. This article presents a systematic mapping study aimed at systematically exploring the TRAP research area in order to provide an overview on the type of research performed and on results currently available. A sample of 68 selected studies has been classified and analyzed according to defined dimensions. Results give an overview of the state of the art, provide guidance to improve practicability and allow outlining a set of directions for future research and applications of TRAP solutions.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(124,NULL,1,'CloudFNF: An ontology structure for functional and non-functional features of cloud services','No aplica',NULL,NULL,'Recently, cloud computing becomes one of the main orientations of many researchers and companies in the IT area. Therefore, a huge number of cloud services have been developed. Because of the diversity and heterogeneity in providing these services, it is urgently needed to develop a unified cloud ontology. Such ontology can classify these services appropriately and participate as a mapping layer to present such services in a unified description format. Although many studies have been conducted to build cloud ontologies, they have adopted the cloud service layers-based structure. On the other hand, the existing cloud services may involve functionalities from different layers due to the continual increase in the complexity of customer demands. Unfortunately, there are no clear relations to organize the interventions among these layers. Therefore, such services may be difficult to be classified into a specific cloud service layer. Additionally, the layers-based structure of ontologies represents an obstacle to address important issues, such as cloud service recommendation. Despite there are few cloud service functionality-based cloud ontologies, they suffer from many overlaps, lack of semantic relations, or poor granularity of concepts. Also, all the existing cloud ontologies (i.e., layers-based and functionality-based) lack important criteria, such as completeness, consistency, conciseness, clarity, preciseness, and granularity. In this paper, a comprehensive cloud ontology called CloudFNF has been proposed to overcome such drawbacks. According to the structure of the proposed ontology, cloud services are classified as functionality-based instead of layers-based. Also, non-functional features of cloud services (i.e., configuration and QoS features) are considered to enable services of the same functionalities to be ranked efficiently. Based on our previously suggested cloud ontology evaluation framework, our proposed cloud ontology has been evaluated compared to the most related cloud ontologies. The evaluation results show that the proposed CloudFNF ontology outperforms the other ontologies.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(125,NULL,1,'Towards an IoT-based Framework for Evolvable Assembly Systems','No aplica',NULL,NULL,'The manufacturing industry is facing the challenge to address the individual requirements of customers that lead to increased product variety and volume reduction. Evolvable assembly systems (ASs) have been defined during the past years to enable quick adaptation of manufacturing assets to respond to the evolving market requirements. On the other side the manufacturing era is changing due to the fourth industrial revolution that will change the traditional manufacturing environment to an IoT-based one. In this context, this paper presents a framework for cyber-physical ASs with the intention to exploit the benefits of the IoT technologies but also utilize the existing huge investment based on traditional technologies in this domain. The framework is based on a model-driven engineering approach that has been extended to exploit IoT technologies for the automation of various tasks of the development and operation phases of the AS. A case study from everyday life was adopted to demonstrate the approach even to non-experts of this domain.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(126,NULL,1,'BrownoutCon: A software system based on brownout and containers for energy-efficient cloud computing','no aplica',NULL,NULL,'VM consolidation and Dynamic Voltage Frequency Scaling approaches have been proved to be efficient to reduce energy consumption in cloud data centers. However, the existing approaches cannot function efficiently when the whole data center is overloaded. An approach called brownout has been proposed to solve the limitation, which dynamically deactivates or activates optional microservices or containers. In this paper, we propose a brownout-based software system for container-based clouds to handle overloads and reduce power consumption. We present its design and implementation based on Docker Swarm containers. The proposed system is integrated with existing Docker Swarm without the modification of their configurations. To demonstrate the potential of BrownoutCon software in offering energy-efficient services in brownout situation, we implemented several policies to manage containers and conducted experiments on French Grid’5000 cloud infrastructure. The results show the currently implemented policies in our software system can save about 10%–40% energy than the existing baselines while ensuring quality of services.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(127,NULL,1,'Research on key technologies of deduction of multinational power trading in the context of Global Energy Interconnection','No aplica',NULL,NULL,'When transnationalized electricity trade is conducted in the context of Global Energy Interconnection (GEI), the transaction settlement usually has a long cycle and high cost and is influenced by the volatility of the exchange rate. It is thus necessary to overcome the problems associated with the transaction settlement, change in the trading model data, and trading strategy in the transnational transaction deduction. To overcome the problem of trade settlement, this paper proposes the use of a digital currency (energy currency) for the cross-border electricity trading settlement based on the special drawing rights of the International Monetary Fund, which is controlled by the Global Energy Interconnection Development and Cooperation Organization (GEIDCO), to enable the proposed currency to become a stable digital currency. The traders can use the energy coins as a unit of currency for quotes, combined with the data pertaining to the changes in the energy information obtained from the GEI framework and data regarding the optimally extrapolated reference trading indicators. To realize the implementation of the multi-trader concurrent transaction deduction using a microservice architecture, this paper proposes a method of computing the microservice and synchronous interaction among the traders, based on the database table data, because the large amount of computation is required to be accomplished asynchronously with a single process. The key technology behind these cross-national electricity trading simulations can not only enable the GEI transnational traders to performed daily real-time trading, but it also demonstrates the advantages of the rapid settlement of the energy currency and the realization of a stable payment in the global energy interconnection cross-border electricity trading.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(128,NULL,1,'S-InTime: A social cloud analytical service oriented system','No aplica',NULL,NULL,'Social Networking activities raise multiple challenges for the evolution of Service Oriented Systems Engineering. The purpose of this research work is to demonstrate how a specific core technology and cloud platform with micro-services can be designed and used for performing data-intensive computations and implementing services in a real case of social analytics. In detail, we face the challenges of real-time data-intensive processing with the systematic application of in-memory view-based information modeling & computation, which is based on different types of non-materialized views without pre-aggregation of data. Finally, our study presents and compares design alternatives for these mappings, and demonstrates their effective application for implementing a large set of social analytics service types, with particular reference to the case of streaming sources of twitter data. A prototype of this system was experimented in the contest of a specific kind of social event, a permanent exhibition of Artworks, where the system collected and analyzed in real-time the tweets issued in an entire region, including exhibition sites, and continuously updated analytical dashboards placed in one of the exhibition rooms.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(129,NULL,1,'Architecting a Geo-Enabled CRM: The Way to Seamless Integration','No aplica',NULL,NULL,'In the paper the problem of geo-marketing and multiple CRM systems integration is considered in scope of small developers\' team with extremely limited resources. Several alternative CRM systems were assessed for being a candidate as an initial targeting platform for geomarketing integration. These out-of-the-box CRM solutions were chosen to be assessed against developed criteria to determine how good it fits developers\' constraints.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(130,NULL,1,'Hierarchical Criterion Approach for Architecture Structure Selection of Transportation Software','No aplica',NULL,NULL,'Architectural structural design of modern transportation software has a huge impact on a quality and cost of the development process, hence it\'s required to pay reasonable attention while making architecture design decisions. The technique proposed in this paper allows selecting the optimal software architecture among several alternatives. This selection technique is reduced to the criteria importance theory for decision-making problems with a hierarchical criterion structure. For applying it, we need to pick up a set of metrics that assess the characteristics of the software architecture. Next, we need to determine metrics scale and create the hierarchical criterion structure with all the relations between software metric groups.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(131,NULL,1,'Introducing the new paradigm of Social Dispersed Computing: Applications, Technologies and Challenges','No aplica',NULL,1,'If last decade viewed computational services as a utilitythen surely this decade has transformed computation into a commodity. Computation is now progressively integrated into the physical networks in a seamless way that enables cyber-physical systems (CPS) and the Internet of Things (IoT) meet their latency requirements. Similar to the concept of “platform as a service” or “software as a service”, both cloudlets and fog computing have found their own use cases. Edge devices (that we call end or user devices for disambiguation) play the role of personal computers, dedicated to a user and to a set of correlated applications. In this new scenario, the boundaries between the network node, the sensor, and the actuator are blurring, driven primarily by the computation power of IoT nodes like single board computers and the smartphones. The bigger data generated in this type of networks needs clever, scalable, and possibly decentralized computing solutions that can scale independently as required. Any node can be seen as part of a graph, with the capacity to serve as a computing or network router node, or both. Complex applications can possibly be distributed over this graph or network of nodes to improve the overall performance like the amount of data processed over time. In this paper, we identify this new computing paradigm that we call Social Dispersed Computing, analyzing key themes in it that includes a new outlook on its relation to agent based applications. We architect this new paradigm by providing supportive application examples that include next generation electrical energy distribution networks, next generation mobility services for transportation, and applications for distributed analysis and identification of non-recurring traffic congestion in cities. The paper analyzes the existing computing paradigms (e.g., cloud, fog, edge, mobile edge, social, etc.), solving the ambiguity of their definitions; and analyzes and discusses the relevant foundational software technologies, the remaining challenges, and research opportunities.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(132,NULL,1,'Model-based prediction of automatic memory management and garbage collection behavior','No aplica',NULL,NULL,'Performance models focus on resource consumption and the effects of CPU, network, or hard-disk utilization. These resources usually have the largest effect on the response times and throughput of an application. However, deficient memory management can have severe effects on an application and its runtime, such as overlong response times or even crashes. As memory management has been disregarded in performance simulations, we address this gap with an approach based on memory measurements and derived metrics to predict the behavior of this resource and the effects on the CPU. Although numerous works exist that analyze memory management and especially garbage collections, accurate prediction models are rare. We demonstrate the automatic extraction of memory behavior using a performance model generator. Furthermore, the approach is evaluated using the SPECjEnterprise2010 and the SPECjEnterpriseNEXT industry benchmark, using different resource environments, garbage collection algorithms, and workloads. This work demonstrates that a certain set of probabilities allows one to create a memory profile for an architecture and predict the behavior of the memory management. The results of such predictions can be used for better capacity planning (on-premise), cost-prediction (cloud), architecture evaluation and optimization, or memory profiling. This approach allows for a continuous model-based evaluation of an enterprise architecture regarding its memory footprint.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(133,NULL,1,'LEGIoT: A Lightweight Edge Gateway for the Internet of Things','No aplica',NULL,NULL,'The stringent latency together with the higher bandwidth requirements of current Internet of Things (IoT) applications, are leading to the definition of new network-infrastructures, such as Multi-access Edge Computing (MEC). This emerging paradigm encompasses the execution of many network tasks at the edge and in particular on constrained gateways that have also to deal with the plethora of disparate technologies available in the IoT landscape. To cope with these issues, we introduce a Lightweight Edge Gateway for the Internet of Things (LEGIoT) architecture. It relies on the modular characteristic of microservices and the flexibility of lightweight virtualization technologies to guarantee an extensible and flexible solution. In particular, by combining the implementation of specific frameworks and the benefits of container-based virtualization, our proposal enhances the suitability of edge gateways towards a wide variety of IoT protocols/applications (for both downlink and uplink) enabling an optimized resource management and taking into account requirements such as energy efficiency, multi-tenancy, and interoperability. LEGIoT is designed to be hardware agnostic and its implementation has been tested within a real sensor network. Achieved results demonstrate its scalability and suitability to host different applications meant to provide a wide range of IoT services.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(134,NULL,1,'Towards Antifragile Software Architectures','No aplica',NULL,NULL,'Antifragility is a rising issue in Software Engineering. Due to pervasiveness of software in a growing number of mission critical applications, traditional resilience and recovery systems may not be sufficient. Software has taken over many functionalities which are of vital interest in today and future world. We relay a lot on software applications which may be faulty and cause immense damages. To cope with this scenario, claiming to develop better software is not enough, since unexpected events a.k.a. Black Swans, may disrupt and overcome our system. The purpose of this paper is to propose a new architectural design that responds to the need to build antifragile systems for contemporary complex scenarios. We suggest a system which enhances its strength through experience and errors. It is a self adaptive system architecture improving when facing errors. The most relevant aspect of this approach is that architectures are not only resilient, they extract the intrinsic value of faults. This paper suggests that a fine grained architecture is the key issue to build antifragile systems.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(135,5,3,'Composition of heterogeneous web services: A systematic review','RQ2 (probablemente)\nLos desarrollos iniciales en La informática orientada a servicios (SOC) llevaron al desarrollo de servicios web utilizando el protocolo SOAP y un amplio conjunto de herramientas y métodos para componer nuevos servicios a partir de los existentes. Posteriormente, también surgieron otros tipos de servicios, como servicios orientados a eventos y servicios RESTful. Sin embargo, todos los tipos de servicio mencionados exponen datos y funcionalidad, y los usuarios pueden beneficiarse de su composición, independientemente del tipo de servicio elegido para su implementación. En el Internet de las cosas, es relevante emplear servicios orientados a eventos para la detección y LAS API web SOAP, RESTful o ligeras para el control. En el campo emergente de los microservicios, la heterogeneidad se adopta como principio de diseño y los servicios que forman parte de un único sistema pueden implementarse utilizando tecnologías y paradigmas heterogéneos. La pregunta de investigación de esta revisión es: ¿Qué tan heterogéneos se pueden componer los servicios? Hay varias encuestas que cubren la composición del servicio con cada uno de los tipos de servicios existentes, pero la composición de los servicios heterogéneos sólo se aborda marginalmente. Esta revisión sistemática de la literatura se centra explícitamente en la heterogeneidad de los tipos de servicios antes mencionados. Se han encuestado un total de 66 documentos, publicados entre 2005 y 2018, dirigidos a todas las combinaciones posibles de los tres tipos de servicios. Además de resumir las obras existentes, los métodos específicos empleados para apoyar la heterogeneidad del tipo de servicio se agrupan en arquetipos y se analizan sus limitaciones y capacidades. A pesar del gran número de documentos encontrados, hay varios problemas abiertos sobre la composición de servicios heterogéneos. Los resultados de esta revisión se enfrentan a campos emergentes en informática de servicios, a saber, microservicios, sin servidor e IoT, lo que proporciona instrucciones de investigación adicionales.',NULL,2,'Initial developments in Service-Oriented Computing (SOC) led to the development of Web Services using the SOAP protocol and an extensive set of tools and methods for composing new services from those existing. Subsequently, other types of services also emerged, such as event-oriented services and RESTful services. Nevertheless, all mentioned service types expose data and functionality, and users can benefit from their composition, regardless of the service type chosen for their implementation. In the Internet of Things, it is relevant to employ event-oriented services for sensing and SOAP, RESTful or lightweight web APIs for control. In the emerging field of microservices, heterogeneity is embraced as a design principle and services that are part of a single system may be implemented using heterogeneous technologies and paradigms. The research question of this review is: How heterogeneous services can be composed? There are several surveys that cover service composition with each of the existing service types, but the composition of heterogeneous services is only marginally addressed. This systematic literature review focuses explicitly on the heterogeneity of the aforementioned service types. A total of 66 documents, published from 2005 to 2018, have been surveyed, targeting all possible combinations of the three service types. In addition to summarizing existing works, the specific methods employed for supporting service type heterogeneity are grouped into archetypes and have their limitations and capabilities analyzed. Despite the large number of documents found, there are several open issues on heterogeneous service composition. The results of this review are confronted with emerging fields in service computing, namely microservices, serverless and IoT, yielding additional research directions.',2.5,'SPS007',0,'JOUR',0,'2019',1),(136,NULL,1,'Transformative effects of IoT, Blockchain and Artificial Intelligence on cloud computing: Evolution, vision, trends and open challenges','No aplica',NULL,NULL,'Cloud computing plays a critical role in modern society and enables a range of applications from infrastructure to social media. Such system must cope with varying load and evolving usage reflecting societies’ interaction and dependency on automated computing systems whilst satisfying Quality of Service (QoS) guarantees. Enabling these systems are a cohort of conceptual technologies, synthesised to meet demand of evolving computing applications. In order to understand current and future challenges of such system, there is a need to identify key technologies enabling future applications. In this study, we aim to explore how three emerging paradigms (Blockchain, IoT and Artificial Intelligence) will influence future cloud computing systems. Further, we identify several technologies driving these paradigms and invite international experts to discuss the current status and future directions of cloud computing. Finally, we proposed a conceptual model for cloud futurology to explore the influence of emerging paradigms and technologies on evolution of cloud computing.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(137,NULL,1,'Towards a virtual network function research agenda: A systematic literature review of VNF design considerations','No aplica',NULL,NULL,'The traditional hardware-based physical network functions are increasingly being replaced with software-only Virtual Network Functions (VNFs). A systematic review on the VNF, scoped to cover research papers, open source projects, and standards, is conducted in this work. The review identifies a globally recognized technology trend towards the implementations of VNFs. Based on the design criteria proposed and analyzed in this paper, and the research questions used to structure this review, a window on the current state of the art for VNFs is provided to establish a research agenda. Common themes in future research directions for VNFs are identified. These include: better ways of managing VNF state information to improve flexibility and agility during load balancing, failover, and life cycle operations, and designing VNFs to enable their transparent migration across central and edge clouds.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(138,NULL,1,'Improving construction industry process interoperability with Industry Foundation Processes (IFP)','No aplica',NULL,NULL,'With massive amounts of information generated during the life cycle of large-scale construction projects, interoperability among project stakeholders’ information systems is a requirement for effective and timely communication, collaboration, and information exchange, and ultimately for project success. While data interoperability has been substantially improved by initiatives such as IFC (Industry Foundation Classes) standardizing construction industry data, emphasis on process interoperability which facilitates timely and effective exchange of information via interaction of workflow processes is in its early stage. By conforming to a reference model such as IFP (Industry Foundation Processes), project stakeholders can communicate and collaborate using workflow processes while abstracting the information exchange to essential items to preserve their privacy. This paper explores interoperability in the AEC/FM domain, reviews the main components of the IFP system, presents two IFP interoperability models, and discusses their relationships with the IFP system. The models are demonstrated with specific examples and implemented with a process customization framework based on workflow inheritance rules. Interoperability models that conform to the IFP system not only allow seamless information exchange but can also yield active interaction and communication among stakeholders.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(139,NULL,1,'A neural blockchain for a tokenizable e-Participation model','No aplica',NULL,NULL,'Currently, Distributed Ledger Technologies (DLTs) and, especially, Blockchain technology represent a great opportunity for public institutions to improve citizen participation and foster democratic innovation. These technologies facilitate the simplification of processes and provide secure management of recorded data, guaranteeing the transmission and public transparency of information. Based on the combination of a Blockchain as a Service (BaaS) platform and G-Cloud solutions, our proposal consists of the design of an e-Participation model that uses a tokenizable system of the actions and processes undertaken by citizens in participatory processes providing incentives to promote greater participation in public affairs. In order to develop a sustainable, scalable and resilient e-Participation system, a new blockchain concept, which organizes the blocks as a neural system, is combined with the implementation of a virtual token to reward participants. Furthermore, this virtual token is deployed through a smart contract that the block itself produces, containing information about the transaction and all the documents involved in the process. Finally, our Neural Distributed Ledger (NDL) framework facilitates the interconnection of blockchain networks in a transparent, certified, secure, auditable, scalable and traceable way.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(140,NULL,1,'Examining end users’ ability to select business services: A conceptual framework and an empirical study','No aplica',NULL,NULL,'Software made from autonomous business services is gaining popularity. Now end users can build large applications by assembling a suite of services. Because some end users might have limited knowledge of their requirements and the functionality of available services, the key challenge is to find the services needed to build an application. The task of finding the services matching requirements requires specialized knowledge—knowledge of requirements and the functionality of available services—not just mere general competence. Moreover, the complexity of the requirements could also hinder the ability of end users to select services. However, there is little research into how the end users’ sophistication and requirement complexity affect their ability to avoid duplication (i.e., select the most cost-effective set of services) and select a set of services that satisfy their requirements. We provide a conceptual framework for the choice problem faced by the decision maker and develop a set of hypotheses on end user\'s sophistication and requirement complexity, and the impact of these factors on outcome performance—the ability to avoid duplication and select the appropriate services. Then we conduct an empirical study to test the hypotheses. Empirical results offer support for all hypotheses. Our work has several implications. We demonstrate both conceptually and empirically that end users’ naivety has a significant impact on service duplication. For a profit-maximizing service vendor, knowledge of the end user\'s sophistication/naivety allows there to be different pricing strategies: (1) a pure component strategy, (2) a pure bundling strategy, or (3) a mixed bundling strategy.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(141,NULL,1,'Session types and subtyping for orchestrated interactions','No aplica',NULL,NULL,'In the setting of the π-calculus with binary sessions, we aim at relaxing the notion of duality of session types by the concept of retractable compliance developed in contract theory. This leads to extending session types with a new type operator of “speculative selection” including choices not necessarily offered by a compliant partner. We address the problem of selecting successful communicating branches by means of an operational semantics based on orchestrators, which has been shown to be equivalent to the retractable semantics of contracts, but clearly more feasible. A type system, sound with respect to such a semantics, is hence provided. The introduction of subtyping when interactions are orchestrated naturally leads to explicit subtyping, where coercions are functors on orchestrators. Besides, priority-governed selection policies (either at type- or process-level) are investigated in order to get rid of nondeterministic behaviours but those of the partner processes of the interactions.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(142,NULL,1,'Current and Future Challenges of Software Engineering for Services and Applications','No aplica',NULL,NULL,'ICT (Information and Communication Technology) and, in particular, software is more and more pervasive and it cannot be considered anymore as a minor element of a complex systems. In domains like cloud, big data, IoT (Internet of Things), CPS (Cyber-Physical Systems) it is the core element. We need to consolidate the software engineering discipline, which, despite the impressive achievements in the area of software technology, is probably one of the youngest scientific and technological disciplines with about 60 years of history. This paper summarizes the challenges that the Software Engineering for Services and Applications (SE4SA) cluster is considering as relevant.',NULL,NULL,NULL,'JOUR',NULL,'2016',1),(143,NULL,1,'Data management techniques for Internet of Things','No aplica',NULL,NULL,'Internet of Things (IoT) is a network paradigm in which physical, digital, and virtual objects are equipped with identification, detection, networking, and processing functions to communicate with each other and with other devices and services on the Internet in order to perform the users’ required tasks. Many IoT applications are provided to bring comfort and facilitate the human life. In addition, the application of IoT technologies in the automotive industry has given rise to the concept of Industrial Internet of Things (IIoT) which facilitated using of Cyber Physic Systems, in which machines and humans interact. Due to the diversity, heterogeneity, and large volume of data generated by these entities, the use of traditional database management systems is not suitable in general. In the design of IoT data management systems, many distinctive principles should be considered. These different principles allowed the proposal of several approaches for IoT data management. Some middleware or architecture-oriented solutions facilitate the integration of generated data. Other available solutions provide efficient storage and indexing structured and unstructured data as well as the support to the NoSQL language. Thus, this paper identifies the most relevant concepts of data management in IoT, surveys the current solutions proposed for IoT data management, discusses the most promising solutions, and identifies relevant open research issues on the topic providing guidelines for further contributions.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(144,1,3,'Dynamic microservices to create scalable and fault tolerance architecture','RQ1 (posiblemente)\n\nUna de las tendencias más importantes de la industria en arquitectura empresarial está relacionada con el uso de microservicios, en detrimento de las arquitecturas monolíticas, que están empezando a no utilizarse. Debido a las arquitecturas nativas de la nube, la implementación de sistemas de microservicios es más productiva, flexible y rentable. De todos modos, muchas empresas comenzaron a migrar de un tipo de arquitectura a otra, pero todavía está en la fase inicial. En este artículo abordamos los desafíos planteados por la necesidad de desarrollar un sistema escalable y de tolerancia a errores basado en microservicios. En nuestros experimentos consideramos dos tipos de microservicios, simples y extendidos y la solución propuesta resulta ser una solución innovadora especialmente basada en su comportamiento dinámico.',NULL,2,'One of the industry\'s most important trends in enterprise architecture is related to the use of microservices, to the detriment of monolithic architectures, which are beginning to no longer be used. Due the cloud-native architectures the deployment of microservices systems is more productive, flexible and cost effective. Anyway, a lot of companies started to migrate from one type of architecture to another, but it is still in the early phase. In this paper we address the challenges raised by the need to develop a scalable and fault tolerance system based on microservices. In our experiments we consider two types of microservices, simple and extended and the proposed solution proves to be an innovative one especially based on its dynamic behavior.',0.5,'SPS009',0,'JOUR',0,'2019',1),(145,NULL,1,'Systematic survey of big data and data mining in internet of things','No aplica',NULL,NULL,'In recent years, the Internet of Things (IoT) has emerged as a new opportunity. Thus, all devices such as smartphones, transportation facilities, public services, and home appliances are used as data creator devices. All the electronic devices around us help our daily life. Devices such as wrist watches, emergency alarms, and garage doors and home appliances such as refrigerators, microwaves, air conditioning, and water heaters are connected to an IoT network and controlled remotely. Methods such as big data and data mining can be used to improve the efficiency of IoT and storage challenges of a large data volume and the transmission, analysis, and processing of the data volume on the IoT. The aim of this study is to investigate the research done on IoT using big data as well as data mining methods to identify subjects that must be emphasized more in current and future research paths. This article tries to achieve the goal by following the conference and journal articles published on IoT-big data and also IoT-data mining areas between 2010 and August 2017. In order to examine these articles, the combination of Systematic Mapping and literature review was used to create an intended review article. In this research, 44 articles were studied. These articles are divided into three categories: Architecture & Platform, framework, and application. In this research, a summary of the methods used in the area of IoT-big data and IoT-data mining is presented in three categories to provide a starting point for researchers in the future.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(146,30,3,'Architecting with microservices: A systematic mapping study','RQ1 (posiblemente)\n\nContexto: una arquitectura de microservicios se compone de un conjunto de servicios pequeños, cada uno que se ejecuta en su propio proceso y se comunica con mecanismos ligeros. Muchos aspectos sobre la arquitectura con microservicios siguen sin explorarse y la investigación existente todavía está lejos de ser nítidamente clara. Objetivo: Nuestro objetivo es identificar, clasificar y evaluar el estado de la técnica en la arquitectura con microservicios desde las siguientes perspectivas: tendencias de publicación, enfoque de la investigación y potencial de adopción industrial. Método: Aplicamos la metodología de mapeo sistemático. Seleccionamos rigurosamente 103 estudios primarios y definimos y aplicamos un marco de clasificación para extraer información clave para su posterior análisis. Sintetizamos los datos obtenidos y producimos una visión clara del estado de la técnica. Resultados: Este trabajo contribuye con i) un marco de clasificación para estudios de investigación sobre arquitectura con microservicios, (ii) un mapa sistemático de la investigación actual del campo, (iii) una evaluación del potencial de adopción industrial de los resultados de la investigación, y (iv) un análisis de los hallazgos emergentes y las implicaciones para la investigación futura. Conclusión: Este estudio proporciona una imagen sólida, rigurosa y replicable del estado de la técnica en la arquitectura con microservicios. Sus resultados pueden beneficiar tanto a los investigadores como a los profesionales del campo.',NULL,4,'Context: A microservice architecture is composed of a set of small services, each running in its own process and communicating with lightweight mechanisms. Many aspects on architecting with microservices are still unexplored and existing research is still far from being crispy clear. Objective: We aim at identifying, classifying, and evaluating the state of the art on architecting with microservices from the following perspectives: publication trends, focus of research, and potential for industrial adoption. Method: We apply the systematic mapping methodology. We rigorously selected 103 primary studies and we defined and applied a classification framework to them for extracting key information for subsequent analysis. We synthesized the obtained data and produced a clear overview of the state of the art. Results: This work contributes with (i) a classification framework for research studies on architecting with microservices, (ii) a systematic map of current research of the field, (iii) an evaluation of the potential for industrial adoption of research results, and (iv) a discussion of emerging findings and implications for future research. Conclusion: This study provides a solid, rigorous, and replicable picture of the state of the art on architecting with microservices. Its results can benefit both researchers and practitioners of the field.',15,'SPS004',0,'JOUR',1,'2019',1),(147,NULL,1,'Fuzzy similarities for road environment-type detection by a connected vehicle from traffic sign probabilistic data','No aplica',NULL,NULL,'The road environment recognition using embedded technologies has been researched intensively recently. Several papers deal with the detection of the urban road environment-type (RET), such as downtown, residential area, business/industrial area. These RETs can characterize the road environment around an ego-car. A RET detection approach taking into account relevant traffic signs (TSs) that are visible from the ego-car - along its route - was also proposed. It was assumed that the TS data, namely the type and the location of each detected TS along the route, was made available for the purpose by an on-board TS recognition system (TSR). The TS data is constantly updated, aggregated and evaluated in a multi-scale manner by a RET detection system, so one can produce a probability series of occurrence of each TS type with respect to each of the considered urban RETs. In the present paper, we develop a heuristic for dynamic RET detection using fuzzy similarities on a special graph. We also propose the generic process of this approach, which will be the subject of further development and testing.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(148,NULL,1,'Platform-based service composition for manufacturing: A conceptualization','No aplica',NULL,NULL,'With the implementation of cyber-physical production systems, a multitude of isolated industrial services utilizing versatile hardware and software components in heterogeneous and rigid system architectures are an obstacle for the consequent extension of holistic automation within production networks. To address this issue, we conceptualize a platform-based system architecture enabling value-adding service bundles based on and extending proven architectural styles. Our proposal also aims on qualifying communication systems to work transboundary in value-adding networks. The presented architecture is applied to a use case in context of maintenance. Our findings provide an adaptive conceptualization for application-specific service composition and integration.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(149,NULL,1,'Intelligent Manufacturing in the Context of Industry 4.0: A Review','No aplica',NULL,NULL,'Our next generation of industry—Industry 4.0—holds the promise of increased flexibility in manufacturing, along with mass customization, better quality, and improved productivity. It thus enables companies to cope with the challenges of producing increasingly individualized products with a short lead-time to market and higher quality. Intelligent manufacturing plays an important role in Industry 4.0. Typical resources are converted into intelligent objects so that they are able to sense, act, and behave within a smart environment. In order to fully understand intelligent manufacturing in the context of Industry 4.0, this paper provides a comprehensive review of associated topics such as intelligent manufacturing, Internet of Things (IoT)-enabled manufacturing, and cloud manufacturing. Similarities and differences in these topics are highlighted based on our analysis. We also review key technologies such as the IoT, cyber-physical systems (CPSs), cloud computing, big data analytics (BDA), and information and communications technology (ICT) that are used to enable intelligent manufacturing. Next, we describe worldwide movements in intelligent manufacturing, including governmental strategic plans from different countries and strategic plans from major international companies in the European Union, United States, Japan, and China. Finally, we present current challenges and future research directions. The concepts discussed in this paper will spark new ideas in the effort to realize the much-anticipated Fourth Industrial Revolution.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(150,NULL,1,'ARC: Anomaly-aware Robust Cloud-integrated IoT service composition based on uncertainty in advertised quality of service values','No aplica',NULL,NULL,'From the IoT perspective, each intelligent device can be considered as a potential source of service. Since several services perform the same function, albeit with different quality of service (QoS) parameters, service composition becomes a crucial problem to find an optimal set of services to automate a typical business process. The majority of prior research has investigated the service composition problem with the assumption that advertised QoS values are deterministic and do not change over time. However, factors like sensors failure and network topology changes cause uncertainty in the advertised QoS values. To address this challenge, we propose a novel Anomaly-aware Robust service Composition (ARC) to deal with the problem of uncertainty of QoS values in a dynamic environment of Cloud and IoT. The proposed approach uses Bertsimas and Sim mathematical robust optimization method, which is independent of the statistical distribution of QoS values, to compose services. Moreover, our approach exploits a machine learning-based anomaly detection technique to improve the stability of the solution with a fine-grained identification of abnormal QoS records. The results demonstrate that our approach achieves 14.55% of the average improvement in finding optimal solutions compared to the previous works, such as information theory-based and clustering-based methods.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(151,NULL,1,'Cloud-based ubiquitous object sharing platform for heterogeneous logistics system integration','No aplica',NULL,NULL,'The intelligence of infrastructure gradually becomes the straw for logistics enterprises to make data-based or date-driven optimization. The integration of heterogeneous logistics systems with existing enterprise information systems is one of the most critical steps to achieve the intelligent infrastructure. Unfortunately, the integration is always a time-consuming process with heavy investment, which suppresses the longings of enterprises, especially for small and medium enterprises (SMEs). Aiming at simplifying the system integration, this paper proposed a cloud-based ubiquitous object sharing platform (CUOSP) to share the integration across SMEs based on the concept of sharing economy. CUOSP acts as a middleware system to make heterogeneous logistics systems universal plug-and-play (UPnP) for enterprise information systems. A kernel-based agent (KBA) is designed as the sharing entity of physical systems. It maintains the features of physical systems and is scalable for different application scenarios. A series of cloud gateway services are emerged not only to provide the basic running and sharing environment, but also to remedy KBA\'s weaknesses in computing capacity. A prototype system is developed and implemented based on the framework of CUOSP and a laboratory case according to the consolidation scenario in E-commerce logistics is demonstrated. Comparison experiments are also conducted to explore the real-time and multitasking capacity of KBAs with different kernel characteristics and different computing resources.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(152,NULL,1,'Landscaping systematic mapping studies in software engineering: A tertiary study','No aplica',NULL,NULL,'Context: A number of Systematic Mapping Studies (SMSs) that cover Software Engineering (SE) are reported in literature. Tertiary studies synthesize the secondary studies to provide a holistic view of an area. Objectives: We synthesize SMSs in SE to provide insights into existing SE areas and to investigate the trends and quality of SMSs. Methodology: We use Systematic Literature Review protocol to analyze and map the SMSs in SE, till August 2017, to SE Body of Knowledge (SWEBOK). Results: We analyze 210 SMSs and results show that: (1) Software design and construction are most active areas in SE; (2) Some areas lack SMSs, including mathematical foundations, software configuration management, and SE tools; (3) The quality of SMSs is improving with time; (4) SMSs in journals have higher quality than SMSs in conferences and are cited more often; (5) Low quality in SMSs can be attributed to a lack of quality assessment in SMSs and not reporting information about the primary studies. Conclusion: There is a potential for more SMSs in some SE areas. A number of SMSs do not provide the required information for an SMS, which leads to a low quality score.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(153,NULL,1,'Cloud-based manufacturing equipment and big data analytics to enable on-demand manufacturing services','No aplica',NULL,NULL,'Making manufacturing as on-demand cloud services is a transformative paradigm to achieve the required business flexibility in the context of Industry 4.0 via enabling rapid configuration of loosely-connected manufacturing devices to develop highly customized products. The research in this paper aimed to fill the gap that there is a lack of a feasible solution for cloud-based manufacturing equipment that can provide on-demand manufacturing services accessible via the Internet. The technical challenges in developing cloud-based manufacturing equipment and the enabling technologies are discussed. A generic system architecture for cloud-based manufacturing equipment based on cyber-physical production systems and big data analytics is proposed, allowing manufacturing equipment to be connected to the cloud and made available for the provision of on-demand manufacturing services. An industry implementation in a world-leading machinery solution provider confirms that the proposed system architecture for cloud-based manufacturing equipment can successfully enable on-demand manufacturing services provisioned via the Internet and can be extended to businesses that endeavor to transform legacy production systems into cloud-based cyber-physical production systems.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(154,NULL,1,'A Novel Integrated Real-time Simulation Platform for Assessing Photovoltaic Penetration Impacts in Smart Grids','No aplica',NULL,NULL,'For future planning and development of smart grids, it is important to evaluate the impacts of PV distributed generation, especially in densely populated urban areas. In this paper we present an integrated platform, constituted by two main components: a PV simulator and a real-time distribution network simulator. The first simulates real-sky solar radiation of rooftops and estimates the PV energy production; the second simulates the behaviour of the network when generation and consumption are provided at the different buses. The platform is tested on a case study based on real data for a district of the city of Turin, Italy.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(155,NULL,1,'An Introduction to Residuality Theory: Software Design Heuristics for Complex Systems','No aplica',NULL,NULL,'Residuality theory provides a basis for designing software systems with resilient and antifragile behaviour through understanding sensitivity to stress and the concept of residual behaviours. By considering systems as a set of residues that exist in connection to stressors, we can more easily understand the role of design decisions in the life cycle of software systems and the unpredictable complex contexts they exist in. Residuality theory provides an alternative to the vague methods by which OOP, SOA, microservice approaches arrive at system designs and most importantly places non-functional properties as first class citizens of design efforts. Residuality theory allows us to consider business, software, infrastructure architecture across many different platforms and paradigms and allows us to describe architecture in the same way regardless of perspective. It allows us to describe approaches both for functional and non-functional requirements and for design, delivery and operation of applications. Residuality Theory paves the way for expressing architectures as mathematical structures which makes approaches like Model Based Systems Engineering [1] possible.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(156,NULL,1,'Optimization of Deployment Architecture in SOA systems','No aplica',NULL,NULL,'Service-Oriented Architecture (SOA) has been a popular foundation in corporate architecture management for years. Numerous forms of integration following this approach are developing to such an extent that they automate entire business processes in the form of service call sequences. The level of complexity of integration is growing and the popularity of methods aimed at improving the efficiency of SOA systems is increasing. This article proposes a new method for improving the efficiency of SOA systems. It is organized in the following manner. The first chapter introduces the most important concepts related to SOA. The second presents results of the literature analysis. The third describes the optimization problem and the fourth shows a potential solution. Finally, some studies of the described method and a summary of thereof are presented.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(157,NULL,1,'A case-based reasoning approach to reuse quality-driven designs in service-oriented architectures','No aplica',NULL,NULL,'Service-Oriented Architecture (SOA) has become a dominant approach for developing distributed enterprise-wide applications. Most organizations capitalize on SOA by discovering and reusing services already accessible over the Internet. In addition to functional requirements, the implementation of a SOA design must consider quality-attribute properties (e.g., performance, interoperability or security, among others), which require developers to explore and assess candidate solutions fulfilling the same functional requirements. This exploration is usually driven by architectural knowledge and SOA principles, but it can be a time-consuming and error-prone process, even for expert developers. To deal with this issue, we present a case-based reasoning approach called AWESOME to assist developers in exploring different development alternatives, by modeling quality-attribute aspects and SOA design patterns as cases. Our approach has been evaluated with four case-studies, and the results have shown that the solutions generated by AWESOME are judged as satisfactory by a number of SOA experts.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(158,NULL,1,'A secure fish farm platform based on blockchain for agriculture data integrity','No aplica',NULL,NULL,'Internet of Things (IoT) has opened up a new dimension for smart farming and agriculture because of the natural feature that makes it possible to assign tasks made by a user or that transfers agriculture data obtained through sensors to producers for analysis on various terminal devices. In recent years, heightened interest in agriculture data has arisen since the commercialization of precision agriculture technology. Agriculture data are known to be messy, especially from combine yield monitors, and analysts are concerned with the validity of data, especially given that other people may have impacted data quality at various steps along the data path. The blockchain can be a possible solution to the analyst\'s problem of uncertain data quality from prior data manipulation since it ensures data have not been inappropriately manipulated or at the very least documents what changes have been made by specific individuals. This paper proposes a blockchain-based fish farm platform to ensure agriculture data integrity. The designed platform aims to provide fish farmers with secure storage for preserving the large amounts of agriculture data that cannot be tampered with. Diverse processes of the fish farm are executed automatically by using the smart contract to reduce the risk of error or manipulation. A proof of concept that integrates a legacy fish farm system with the Hyperledger Fabric blockchain is implemented on top of the proposed architecture. The efficiency and usability of the proposed platform are demonstrated through a series of experiments using various metrics.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(159,69,3,'The pains and gains of microservices: A Systematic grey literature review','RQ1 (posiblemente)\n\nEl diseño, el desarrollo y la operación de los microservicios están captando cada vez más impulso en la industria de TI. Al mismo tiempo, el trabajo académico sobre el tema está en una etapa temprana, y todavía en el camino a la destilación de los \"Pains & Gains\" reales de microservicios como un estilo arquitectónico. Después de haber presenciado esta brecha, nos propusimos analizar sistemáticamente la literatura gris industrial sobre microservicios, para identificar los dolores técnicos/operativos y las ganancias del estilo arquitectónico basado en microservicios. Concluimos discutiendo las instrucciones de investigación derivadas de nuestro análisis.',NULL,2,'The design, development, and operation of microservices are picking up more and more momentum in the IT industry. At the same time, academic work on the topic is at an early stage, and still on the way to distilling the actual “Pains & Gains” of microservices as an architectural style. Having witnessed this gap, we set forth to systematically analyze the industrial grey literature on microservices, to identify the technical/operational pains and gains of the microservice-based architectural style. We conclude by discussing research directions stemming out from our analysis.',23,'SPS013',0,'JOUR',1,'2018',1),(160,NULL,1,'Applications of model-driven engineering in cyber-physical systems: A systematic mapping study','No aplica',NULL,NULL,'Engineers face significant challenges in developing cyber-physical systems (CPS) due to their heterogeneous nature, i.e. the need for knowledge and skills from a wide range of academic and industrial disciplines, the integration of the artifacts of these disciplines and fields, and the difficulty of maintaining such heterogeneous artifacts should be taken into account. The development of CPS mostly needs a unified methodology that permits efficient raise of the abstraction level to overcome issues of heterogeneity induced by the multidisciplinary nature of the system. Model-driven engineering (MDE) is believed to be an alternative solution to overcome the challenges faced while developing CPS. This paper presents a systematic mapping study on using the MDE paradigm in CPS development and management. 140 research papers published during the period 2010–2018 are evaluated. The study mainly enables to find out the followed approaches when applying MDE for CPS, addressed CPS challenges, application domains and presented case studies. Results showed that the number of publications in this field is continuously increasing in recent years. Results also showed that metamodeling and model-based approaches are mostly adopted by the researchers affiliated to Europe, while DSL-based approach is adopted mostly by USA affiliated researchers. Only 45% of the studies consider a specific CPS application domain in which Smart Manufacturing is the most addressed domain followed by Critical Infrastructure, Health Care and Medicine. Moreover, the majority of the studies present case studies as the main evaluation method for the proposed MDE solutions. Conducting empirical evaluations is mostly missing. The results also revealed that various CPS challenges are addressed, and the most addressed ones are the complexity and interoperability aspects of CPS. Reporting on what previous researches have accomplished, as well as current research efforts and open challenges related to this field can guide researchers and developers in their further work on CPS design and implementation.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(161,NULL,1,'Emerging trends from advanced planning to integrated business planning','No aplica',NULL,NULL,'For more than 20 years, the conceptualization of SC planning processes has been paralleled by the development of related planning systems. Traditional approaches focused on volume-based planning that matches demand and supply quantities, but more recently, value-based aspects and financial criteria have gained importance for SC planning. This study analyzes recent trends towards integrated business planning and studies the emergence of related system solutions. Related scientific literature is briefly summarized before market-leading software vendors and system providers are assessed based on publicly accessible information.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(162,NULL,1,'Differed Restructuring of Neural Connectome Using Evolutionary Neurodynamic Algorithm for Improved M2M Online Learning','No aplica',NULL,NULL,'Ontological nodes and training material, in any case, contain however a little part of the quickly developing volume of unstructured contents accessible across training datasets ranging from the greater part of heterogeneous »learning». Recovery of these assets is constrained to keyword search, which is in a far-reaching way incognizant in regards to the normal sequential semantic connection in which the query is often requested and all the more essentially for more importantly for development of a perception about a learned concept through the sequential arrangement of information. Numerous core topics covered in several referential sources when no two are precisely similar, with one frequently more suitable when seen in a connection of an ontological relational modalities of semantic web and online training of network based on continuous streaming database; while other on giving major insights of practical implementation. The objective of this work is to present an evolutionary neurodynamic framework to mine such process based learning validated by the visual recording & extraction of neural weights through neurodynamic neural experiences when going through the referenced content. The motivation of this behavioral modeling of autonomous machine\'s reaction working as the feedback of the learning content set forth above hinges on the principal capacity to gather a structure of a curricular graph automatically from the training datasets. As it empowers the acknowledgment of: 1) Sharing of neural experiences with the help of structurally sequenced networked topology of such large sample of training datasets resources-with the idea of dynamic analysis and linking of key resources in the mechanism with which the learner develops a general concept about the subject which can be latter re-used or shared with other user\'s and thus facilitating the qualitative evaluation of the ontological nodes content and its contribution in facilitating deep grasp of the data from feedback loop. 2) Obtaining information driven ontological knowledge base from the curricular relations inside and crosswise over other learning resources and 3) Generating customized, focused curricula, utilizing the tremendous assets of heterogeneous modalities on the training datasets.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(163,NULL,1,'Analyzing the performance of a blockchain-based personal health record implementation','No aplica',NULL,NULL,'Background: The Personal Health Record (PHR) and Electronic Health Record (EHR) play a key role in more efficient access to health records by health professionals and patients. It is hard, however, to obtain a unified view of health data that is distributed across different health providers. In particular, health records are commonly scattered in multiple places and are not integrated. Objective: This article presents the implementation and evaluation of a PHR model that integrates distributed health records using blockchain technology and the openEHR interoperability standard. We thus follow OmniPHR architecture model, which describes an infrastructure that supports the implementation of a distributed and interoperable PHR. Methods: Our method involves implementing a prototype and then evaluating the integration and performance of medical records from different production databases. In addition to evaluating the unified view of records, our evaluation criteria also focused on non-functional performance requirements, such as response time, CPU usage, memory occupation, disk, and network usage. Results: We evaluated our model implementation using the data set of more than 40 thousand adult patients anonymized from two hospital databases. We tested the distribution and reintegration of the data to compose a single view of health records. Moreover, we profiled the model by evaluating a scenario with 10 superpeers and thousands of competing sessions transacting operations on health records simultaneously, resulting in an average response time below 500 ms. The blockchain implemented in our prototype achieved 98% availability. Conclusion: Our performance results indicated that data distributed via a blockchain could be recovered with low average response time and high availability in the scenarios we tested. Our study also demonstrated how OmniPHR model implementation can integrate distributed data into a unified view of health records.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(164,NULL,1,'Industrial image processing applications as orchestration of web services','No aplica',NULL,NULL,'Contemporary production lines often make extensive use of image recognition to achieve high levels of automation. Shorter product life cycles and smaller lot sizes force companies to adapt their processes very quickly. Still, industrial image processing algorithms typically run on dedicated computer systems next to the cameras, which is rather inflexible and leads to high costs for hardware and maintenance. In this paper, we propose a service-based architecture to tackle these problems. We divide image processing applications into universal building blocks, each of which is implemented as web service. The recognition application is conceived as a composition of these services, orchestrated using the Business Process Execution Language (BPEL). The composed application is provided with a standard industrial interface (OPC UA) for easy integration into the production process. This concept is evaluated by assessing proof-of-concept implementations. Main advantages (among others) are the flexible reuse of existing image processing operations and applications, and the freedom to implement services independently using the preferred language, framework and platform. Challenges are real-time constraints, which can be alleviated by emerging technologies like Time Sensitive Networking (TSN).',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(165,6,3,'Comparison of event choreography and orchestration techniques in Microservice Architecture','RQ1\nRQ2\n\nMicroservice Architecture (MSA) es un patrón de diseño arquitectónico que se introdujo para resolver los desafíos que implica lograr la escalabilidad horizontal, la alta disponibilidad, la modularidad y la agilidad de la infraestructura para las aplicaciones monolíticas tradicionales. Aunque MSA viene con un gran conjunto de beneficios, es difícil diseñar servicios aislados mediante el uso independiente de base de datos por patrón de servicio. Observamos que, cuando cada microservicio tiene su propia base de datos, cuando las transacciones abarcan varios servicios, se vuelve difícil garantizar la coherencia de los datos entre las bases de datos, especialmente en caso de reversiones. En el caso de aplicaciones monolíticas que utilizan bases de datos RDBMS, estas transacciones distribuidas y reviertas se pueden gestionar de forma eficiente mediante técnicas de confirmación de 2 fases. Estas técnicas no se pueden aplicar para bases de datos no-SQL aisladas en microservicios. Este documento de investigación tiene como objetivo abordar tres cosas: 1) aclarar los desafíos con transacciones distribuidas y reversiones en bases de datos aisladas No-SQL con colecciones dependientes en MSA, 2) examinar la aplicación de técnicas de coreografía y orquestación de eventos para la implementación del patrón Saga, y 3) presentar las recomendaciones basadas en hechos sobre las implementaciones de patrones de saga para los casos de uso.',NULL,5,'Microservice Architecture (MSA) is an architectural design pattern which was introduced to solve the challenges involved in achieving the horizontal scalability, high availability, modularity and infrastructure agility for the traditional monolithic applications. Though MSA comes with a large set of benefits, it is challenging to design isolated services using independent Database per Service pattern. We observed that with each micro service having its own database, when transactions span across multiple services, it becomes challenging to ensure data consistency across databases, particularly in case of roll backs. In case of monolithic applications using RDBMS databases, these distributed transactions and roll backs can be handled efficiently using 2 phase commit techniques. These techniques cannot be applied for isolated No-SQL databases in micro services. This research paper aims to address three things: 1) elucidate the challenges with distributed transactions and rollbacks in isolated No-SQL databases with dependent collections in MSA, 2) examine the application of event choreography and orchestration techniques for the Saga pattern implementation, and 3) present the fact-based recommendations on the saga pattern implementations for the use cases.',2,'SPS006',0,'JOUR',1,'2018',1),(166,0,3,'Cpn tools-based software solution for reliability analysis of processes in microservice environments','RQ1\nRQ2\n\nLos microservicios son un método contemporáneo popular para crear sistemas distribuidos escalables (por ejemplo, sitios web). Es difícil predecir la fiabilidad de las operaciones ejecutables del sistema futuro debido al gran número de componentes y sus relaciones no lineales. En este documento consideramos la operación ejecutada por varios microservicios como una sola transacción atómica. La transacción solo importa si se ha completado correctamente. En caso de error durante una ejecución, o debido a la necesidad de descartar los resultados, la transacción debe ser revertida o compensada. Para analizar la fiabilidad de la ejecución de una operación de este tipo, introducimos una solución de software dedicada basada en Colored Petri-Net, CPN, Tools. En consecuencia, el sistema interactivo de microservicios debe describirse utilizando términos Petri-net de color, y la operación debe cumplir con ciertas reglas de modelado de procesos de negocio, por ejemplo, para tener un punto de entrada/salida. La solución de software consta de varias unidades de interconexión que incluyen las herramientas CPN, ACCESS/CPN y PostgreSQL. Estos programas son controlados por un servidor de aplicaciones a través de la interfaz web. La solución de software permite que el análisis sea realizado simultáneamente por múltiples examinadores debido a la implicación de las tecnologías web.',NULL,5,'Microservices are a popular contemporary method to build scalable distributed systems (e.g. websites). It is hard to predict executable operations reliability of the future system due to the vast number of components and their nonlinear relations. In this paper we consider the operation executed by multiple microservices as a single atomic transaction. The transaction matters only if it is completed successfully. In case of an error during an execution, or due to the necessity to discard the results, the transaction must be reversed or compensated. To analyze the reliability of the execution of such an operation we introduce a dedicated software solution based on Coloured Petri-Net, CPN, Tools. Accordingly, the interactive microservices system has to be described using Coloured Petri-net terms, and the operation must comply with certain rules of business process modelling, e.g. to have an input/output point. The software solution consists of several interconnecting units which include the CPN Tools, ACCESS/CPN and PostgreSQL. These programs are controlled by an application server through the web-interface. The software solution allows the analysis to be performed simultaneously by multiple examiners due to the implication of web technologies.',0,'SPS008',0,'JOUR',1,'2018',1),(167,NULL,1,'IoTEF: A Federated Edge-Cloud Architecture for Fault-Tolerant IoT Applications','No aplica',NULL,NULL,'The evolution of Internet of Things (IoT) technology has led to an increased emphasis on edge computing for Cyber-Physical Systems (CPS), in which applications rely on processing data closer to the data sources, and sharing the results across heterogeneous clusters. This has simplified the data exchanges between IoT/CPS systems, the cloud, and the edge for managing low latency, minimal bandwidth, and fault-tolerant applications. Nonetheless, many of these applications administer data collection on the edge and offer data analytic and storage capabilities in the cloud. This raises the problem of separate software stacks between the edge and the cloud with no unified fault-tolerant management, hindering dynamic relocation of data processing. In such systems, the data must also be preserved from being corrupted or duplicated in the case of intermittent long-distance network connectivity issues, malicious harming of edge devices, or other hostile environments. Within this context, the contributions of this paper are threefold: (i) to propose a new Internet of Things Edge-Cloud Federation (IoTEF) architecture for multi-cluster IoT applications by adapting our earlier Cloud and Edge Fault-Tolerant IoT (CEFIoT) layered design. We address the fault tolerance issue by employing the Apache Kafka publish/subscribe platform as the unified data replication solution. We also deploy Kubernetes for fault-tolerant management, combined with the federated scheme, offering a single management interface and allowing automatic reconfiguration of the data processing pipeline, (ii) to formulate functional and non-functional requirements of our proposed solution by comparing several IoT architectures, and (iii) to implement a smart buildings use case of the ongoing Otaniemi3D project as proof-of-concept for assessing IoTEF capabilities. The experimental results conclude that the architecture minimizes latency, saves network bandwidth, and handles both hardware and network connectivity based failures.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(168,NULL,1,'A field-based service management and discovery method in multiple clouds context','No aplica',NULL,NULL,'In diverse and self-governed multiple clouds context, the service management and discovery are greatly challenged by the dynamic and evolving features of services. How to manage the features of cloud services and support accurate and efficient service discovery has become an open problem in the area of cloud computing. This paper proposes a field model of multiple cloud services and corresponding service discovery method to address the issue. Different from existing researches, our approach is inspired by Bohr atom model. We use the abstraction of energy level and jumping mechanism to describe services status and variations, and thereby to support the service demarcation and discovery. The contributions of this paper are threefold. First, we propose the abstraction of service energy level to represent the status of services, and service jumping mechanism to investigate the dynamic and evolving features as the variations and re-demarcation of cloud services according to their energy levels. Second, we present user acceptable service region to describe the services satisfying users’ requests and corresponding service discovery method, which can significantly decrease services search scope and improve the speed and precision of service discovery. Third, a series of algorithms are designed to implement the generation of field model, user acceptable service regions, service jumping mechanism, and user-oriented service discovery.We have conducted an extensive experiments on QWS dataset to validate and evaluate our proposed models and algorithms. The results show that field model can well support the representation of dynamic and evolving aspects of services in multiple clouds context and the algorithms can improve the accuracy and efficiency of service discovery.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(169,NULL,1,'Design principles, architectural smells and refactorings for microservices: a multivocal review','No aplica\nPodria servir como referencia\n\nLos beneficios potenciales, como la prestación ágil de servicios, han llevado a muchas empresas a ofrecer sus capacidades empresariales a través de microservicios. Sin embargo, los malos olores siempre están a la vuelta de la esquina, como lo demuestra el considerable cuerpo de literatura que habla de olores arquitectónicos que posiblemente violan los principios de diseño de los microservicios. En este artículo, revisamos sistemáticamente la literatura blanca y gris sobre el tema, con el fin de identificar los olores arquitectónicos más reconocidos para los microservicios y discutir las refactorizaciones arquitectónicas que permiten resolverlos.',NULL,1,'Potential benefits such as agile service delivery have led many companies to deliver their business capabilities through microservices. Bad smells are however always around the corner, as witnessed by the considerable body of literature discussing architectural smells that possibly violate the design principles of microservices. In this paper, we systematically review the white and grey literature on the topic, in order to identify the most recognised architectural smells for microservices and to discuss the architectural refactorings allowing to resolve them.',NULL,NULL,NULL,'CONF',NULL,'2019',1),(170,NULL,1,'Metric-centered and technology-independent architectural views for software comprehension','No aplica',NULL,NULL,'The maintenance of applications is a crucial activity in the software industry. The high cost of this process is due to the effort invested on software comprehension since, in most of cases, there is no up-to-date abstraction or documentation to ease this task but the source code. The goal of many commercial and academic tools is to build software architectural views from the code. The main disadvantages of such tools are: i) they are dependent on the language/technology on top of which the application is built; and ii) they offer pre-defined views that are too difficult to adapt to meet particular software comprehension needs. In this paper, we present a Technology-independent approach which is flexible enough to allow developers to define metric-centered architectural views by using annotations. These views display in a single canvas architectural elements whose look and feel maps software metrics. Our work results from joint projects with industry partners with software modernization needs in different technologies: Oracle Forms, Java EE, and Ruby on Rails. We present how our proposal was applied in these projects and compare the results with those of the previously followed process.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(171,NULL,1,'Blockchain Support for Collaborative Business Processes','No aplica',NULL,NULL,'Blockchain technology provides basic building blocks to support the execution of collaborative business processes involving mutually untrusted parties in a decentralized environment. Several research proposals have demonstrated the feasibility of designing blockchain-based collaborative business processes using a high-level notation, such as the Business Process Model and Notation (BPMN), and thereon automatically generating the code artifacts required to execute these processes on a blockchain platform. In this paper, we present the conceptual foundations of model-driven approaches for blockchain-based collaborative process execution and we compare two concrete approaches, namely Caterpillar and Lorikeet.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(172,NULL,1,'Search-based multi-vulnerability testing of XML injections in web applications','No aplica',NULL,NULL,'Modern web applications often interact with internal web services, which are not directly accessible to users. However, malicious user inputs can be used to exploit security vulnerabilities in web services through the application front-ends. Therefore, testing techniques have been proposed to reveal security flaws in the interactions with back-end web services, e.g., XML Injections (XMLi). Given a potentially malicious message between a web application and web services, search-based techniques have been used to find input data to mislead the web application into sending such a message, possibly compromising the target web service. However, state-of-the-art techniques focus on (search for) one single malicious message at a time. Since, in practice, there can be many different kinds of malicious messages, with only a few of them which can possibly be generated by a given front-end, searching for one single message at a time is ineffective and may not scale. To overcome these limitations, we propose a novel co-evolutionary algorithm (COMIX) that is tailored to our problem and uncover multiple vulnerabilities at the same time. Our experiments show that COMIX outperforms a single-target search approach for XMLi and other multi-target search algorithms originally defined for white-box unit testing.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(173,NULL,1,'Design, simulation and testing of a cloud platform for sharing digital fabrication resources for education','No aplica',NULL,NULL,'Cloud and IoT technologies have the potential to support applica- tions that are not strictly limited to technical fields. This paper shows how digital fabrication laboratories (Fab Labs) can leverage cloud technologies to enable resource sharing and provide remote access to distributed expensive fabrication resources over the internet. We call this new concept Fabrication as a Service (FaaS), since each resource is exposed to the internet as a web ser- vice through REST APIs. The cloud platform presented in this paper is part of the NEWTON Horizon 2020 technology-enhanced learning project. The NEWTON Fab Labs architecture is described in detail, from system concep- tion and simulation to system cloud deployment and testing in NEWTON project small and large-scale pilots for teaching and learning STEM subjects.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(174,NULL,1,'Cloud-based vs. blockchain-based IoT: a comparative survey and way forward','No aplica',NULL,NULL,'The Internet of Things (IoT) has been evolving for more than a decade. Technological advancements have increased its popularity, but concerns and risks related to IoT are growing considerably along with the increased number of connected devices. In 2013, a new cryptography-based infrastructure called blockchain emerged with the potential to replace the existing cloud-based infrastructure of IoT through decentralization. In this article, we provide a taxonomy of the challenges in the current IoT infrastructure, and a literature survey with a taxonomy of the issues to expect in the future of the IoT after adopting blockchain as an infrastructure. The two architectures are compared based on their strengths and weaknesses. Then a brief survey of ongoing key research activities in blockchain is presented, which will have considerable impact on overcoming the challenges encountered in the applicability of blockchain in IoT. Finally, considering the challenges and issues in both infrastructures and the latest research activities, we propose a high-level hybrid IoT approach that uses the cloud, edge/fog, and blockchain together to avoid the limitations of each infrastructure.',NULL,NULL,NULL,'GEN',NULL,'2020',1),(175,NULL,1,'A programmable distributed optimization framework for 5G','No aplica',NULL,NULL,NULL,NULL,NULL,NULL,'JOUR',NULL,'2020',1),(176,NULL,1,'Personal programming and the object computer','No aplica',NULL,NULL,'My objective is to create an intuitive computer for laypeople who want to go beyond ready-made apps and create programs to control their electronic environment. I submit Loke, a new kind of computer that is a universe of objects and nothing but objects. I call it an object computer. Loke is implemented in Squeak, a variant of Smalltalk, and is an extensible, conceptual model for execution, inspection, and exploration. It was first used to demonstrate how Ellen, a novice, programs a smart alarm clock through a GUI adapted to her competence, needs, and preferences. Informal demonstrations indicated that laypeople immediately grasp the idea of communicating objects that represent real things in their environment. They also wanted to use it for their own purposes. They were creative in identifying personal opportunities for Loke and in sketching out their implementations. Interestingly, expert programmers who attended the demonstration did not see the point of Loke. I have completed the programming of Loke qua conceptual model. The model underpins its potential security and privacy and sustains its object and message models. The Loke qua programming environment is still in its infancy, and its inherent security and privacy properties are still not realized in practice. A future Loke device will be accessible from anywhere and embedded in its own hardware to achieve them. The Loke IDE rests on Data–Context–Interaction (DCI), a new programming paradigm that leads to readable code with a clear architecture. I submit Loke for the pleasure of personal programming.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(177,NULL,1,'Supporting Programmable Autoscaling Rules for Containers and Virtual Machines on Clouds','No aplica',NULL,NULL,'With the increasing utilization of cloud computing and container technologies, orchestration is becoming an important area on both cloud and container levels. Beyond resource allocation, deployment and configuration, scaling is a key functionality in orchestration in terms of policy, description and flexibility. This paper presents an approach where the aim is to provide a high degree of flexibility in terms of available monitoring metrics and in terms of the definition of elasticity rules to implement practically any possible business logic for a given application. The aim is to provide a general interface for supporting programmable scaling policies utilizing monitoring metrics originating from infrastructure, application or any external components. The paper introduces a component, called Policy Keeper performing the auto-scaling based on user-defined rules, details how this component is operating in the auto-scaling framework, called MiCADO and demonstrates a deadline-based scaling use case.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(178,NULL,1,'Optimal deployment of components of cloud-hosted application for guaranteeing multitenancy isolation','No aplica',NULL,NULL,'One of the challenges of deploying multitenant cloud-hosted services that are designed to use (or be integrated with) several components is how to implement the required degree of isolation between the components when there is a change in the workload. Achieving the highest degree of isolation implies deploying a component exclusively for one tenant; which leads to high resource consumption and running cost per component. A low degree of isolation allows sharing of resources which could possibly reduce cost, but with known limitations of performance and security interference. This paper presents a model-based algorithm together with four variants of a metaheuristic that can be used with it, to provide near-optimal solutions for deploying components of a cloud-hosted application in a way that guarantees multitenancy isolation. When the workload changes, the model-based algorithm solves an open multiclass QN model to determine the average number of requests that can access the components and then uses a metaheuristic to provide near-optimal solutions for deploying the components. Performance evaluation showed that the obtained solutions had low variability and percent deviation when compared to the reference/optimal solution. We also provide recommendations and best practice guidelines for deploying components in a way that guarantees the required degree of isolation.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(179,NULL,1,'An empirical study of architecting for continuous delivery and deployment','No aplica',NULL,NULL,'Recently, many software organizations have been adopting Continuous Delivery and Continuous Deployment (CD) practices to develop and deliver quality software more frequently and reliably. Whilst an increasing amount of the literature covers different aspects of CD, little is known about the role of software architecture in CD and how an application should be (re-) architected to enable and support CD. We have conducted a mixed-methods empirical study that collected data through in-depth, semi-structured interviews with 21 industrial practitioners from 19 organizations, and a survey of 91 professional software practitioners. Based on a systematic and rigorous analysis of the gathered qualitative and quantitative data, we present a conceptual framework to support the process of (re-) architecting for CD. We provide evidence-based insights about practicing CD within monolithic systems and characterize the principle of “small and independent deployment units” as an alternative to the monoliths. Our framework supplements the architecting process in a CD context through introducing the quality attributes (e.g., resilience) that require more attention and demonstrating the strategies (e.g., prioritizing operations concerns) to design operations-friendly architectures. We discuss the key insights (e.g., monoliths and CD are not intrinsically oxymoronic) gained from our study and draw implications for research and practice.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(180,NULL,1,'Cost comparison of running web applications in the cloud using monolithic, microservice, and AWS Lambda architectures','Puede justificar económicamente la necesidad de migración a microservicios\n',NULL,3,'Large Internet companies like Amazon, Netflix, and LinkedIn are using the microservice architecture pattern to deploy large applications in the cloud as a set of small services that can be independently developed, tested, deployed, scaled, operated, and upgraded. However, aside from gaining agility, independent development, and scalability, how microservices affect the infrastructure costs is a major evaluation topic for companies adopting this pattern. This paper presents a cost comparison of a web application developed and deployed using the same scalable scenarios with three different approaches: 1) a monolithic architecture, 2) a microservice architecture operated by the cloud customer, and 3) a microservice architecture operated by the cloud provider. Test results show that microservices can help reduce infrastructure costs in comparison with standard monolithic architectures. Moreover, the use of services specifically designed to deploy and scale microservices, such as AWS Lambda, reduces infrastructure costs by 70% or more, and unlike microservices operated by cloud customers, these specialized services help to guarantee the same performance and response times as the number of users increases. Lastly, we also describe the challenges we faced while implementing and deploying microservice applications, and include a discussion on how to replicate the results on other cloud providers.',NULL,NULL,NULL,'JOUR',NULL,'2017',1),(181,NULL,1,'DataSynapse: A Social Data Curation Foundry','No aplica',NULL,NULL,'Social data analytics have become a vital asset for organizations and governments. For example, over the last few years, governments started to extract knowledge and derive insights from vastly growing open data to personalize the advertisements in elections, improve government services, predict intelligence activities, as well as to improve national security and public health. A key challenge in analyzing social data is to transform the raw data generated by social actors into curated data, i.e., contextualized data and knowledge that is maintained and made available for use by end-users and applications. To address this challenge, we present the notion of knowledge lake, i.e., a contextualized Data Lake, to provide the foundation for big data analytics by automatically curating the raw social data and to prepare them for deriving insights. We present a social data curation foundry, namely DataSynapse, to enable analysts engage with social data to uncover hidden patterns and generate insight. In DataSynapse, we present a scalable algorithm to transform social items (e.g., a Tweet in Twitter) into semantic items, i.e., contextualized and curated items. This algorithm offers customizable feature extraction to harness desired features from diverse data sources. To link contextualized information items to the domain knowledge, we present a scalable technique which leverages cross document coreference resolution assisting analysts to derive targeted insights. DataSynapse is offered as an extensible and scalable microservice-based architecture that are publicly available on GitHub supporting networks such as Twitter, Facebook, GooglePlus and LinkedIn. We adopt a typical scenario for analyzing urban social issues from Twitter as it relates to the government budget, to highlight how DataSynapse significantly improves the quality of extracted knowledge compared to the classical curation pipeline (in the absence of feature extraction, enrichment and domain-linking contextualization).',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(182,NULL,1,'System innovations in open WDM DCI networks','No aplica',NULL,NULL,'We review the most important WDM system innovations motivated by the evolution of DCI transport. State-of-the-art coherent transmission has already exceeded 6 b/s/Hz in transatlantic deployments. Moreover, the adoption of software innovations in automation and programmability, which DCI pioneered in transport networks, has also simplified operations and enables the emergence of open transport architectures. Combining these advances with emerging network analytic frameworks allows exciting innovations in network design and management optimization.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(183,NULL,1,'Securing SDN','No aplica',NULL,NULL,NULL,NULL,NULL,NULL,'JOUR',NULL,'2020',1),(184,NULL,1,'Automated synthesis of local time requirement for service composition','No aplica',NULL,NULL,'Service composition aims at achieving a business goal by composing existing service-based applications or components. The response time of a service is crucial, especially in time-critical business environments, which is often stated as a clause in service-level agreements between service providers and service users. To meet the guaranteed response time requirement of a composite service, it is important to select a feasible set of component services such that their response time will collectively satisfy the response time requirement of the composite service. In this work, we use the BPEL modeling language that aims at specifying Web services. We extend it with timing parameters and equip it with a formal semantics. Then, we propose a fully automated approach to synthesize the response time requirement of component services modeled using BPEL, in the form of a constraint on the local response times. The synthesized requirement will guarantee the satisfaction of the global response time requirement, statically or dynamically. We implemented our work into a tool, Selamat and performed several experiments to evaluate the validity of our approach.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(185,1,3,'Mochi: Composing Data Services for High-Performance Computing Environments','RQ1 (tal vez)\nLas mejoras tecnológicas y la creciente amplitud de los flujos de trabajo de aplicaciones que se ejecutan en plataformas informáticas de alto rendimiento (HPC) impulsan el desarrollo de nuevos servicios de datos que proporcionan un alto rendimiento en estas nuevas plataformas, proporcionan interfaces y abstracciones capaces y productivas para una variedad de aplicaciones y se adaptan fácilmente cuando se implementan nuevas tecnologías. El marco Mochi permite la composición de servicios de datos distribuidos especializados a partir de una colección de módulos y subservicios conectables. En lugar de obligar a todas las aplicaciones a utilizar una configuración de software de E/S y almacenamiento provisional de datos única, Mochi permite que cada aplicación utilice un servicio de datos especializado en sus necesidades y patrones de acceso. Este documento presenta el marco y la metodología de Mochi. Se describen los componentes principales y los microservicios de Mochi. Se detallan ejemplos de la aplicación de la metodología Mochi al desarrollo de cuatro servicios especializados. Por último, se realiza una evaluación de rendimiento de un componente principal de Mochi, un microservicio mochi y un servicio compuesto que proporciona un modelo de objetos. El documento concluye posicionando a Mochi en relación con el trabajo relacionado en el espacio HPC e indicando instrucciones para el trabajo futuro.',NULL,1,'Technology enhancements and the growing breadth of application workflows running on high-performance computing (HPC) platforms drive the development of new data services that provide high performance on these new platforms, provide capable and productive interfaces and abstractions for a variety of applications, and are readily adapted when new technologies are deployed. The Mochi framework enables composition of specialized distributed data services from a collection of connectable modules and subservices. Rather than forcing all applications to use a one-size-fits-all data staging and I/O software configuration, Mochi allows each application to use a data service specialized to its needs and access patterns. This paper introduces the Mochi framework and methodology. The Mochi core components and microservices are described. Examples of the application of the Mochi methodology to the development of four specialized services are detailed. Finally, a performance evaluation of a Mochi core component, a Mochi microservice, and a composed service providing an object model is performed. The paper concludes by positioning Mochi relative to related work in the HPC space and indicating directions for future work.',1,'SPS011',0,'JOUR',0,'2020',1),(186,NULL,1,'Incrementally updating unary inclusion dependencies in dynamic data','No aplica',NULL,NULL,'Inclusion dependencies form one of the most fundamental classes of integrity constraints. Their importance in classical data management is reinforced by modern applications like data profiling, data cleaning, entity resolution, and schema matching. Their discovery in an unknown dataset is at the core of any data-analysis effort. Therefore, several research approaches have focused on their efficient discovery in a given, static dataset. However, none of these approaches are appropriate for application on dynamic datasets. In these cases, discovery techniques should be able to efficiently update the inclusion dependencies after an update in the dataset, without reprocessing the entire dataset. We present the first approach for incrementally updating the unary inclusion dependencies. In particular, our approach is based on the concept of attribute clustering, from which the unary inclusion dependencies are efficiently derivable. We incrementally update the clusters after each update of the dataset. An update of the clusters does not need access to the dataset because of special data structures designed to efficiently support the updating process. We performed an exhaustive analysis of our approach by applying it to large datasets with several hundred attributes and more than 116.2 million tuples. The results showed that the incremental discovery significantly reduces the runtime needed by the static discovery. This reduction in the runtime is up to 99.9996% for both the insertion and the deletion.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(187,NULL,0,'Review of architectural patterns and tactics for microservices in academic and industrial literature',NULL,NULL,NULL,'Microservices are an emerging trend for development of service-oriented software. This approach proposes to build each application as a collection of small services running on separate process and inter-communicating with lightweight mechanisms. Systematic development of microservices is hampered by the lack of a catalog of emerging recurrent architectural solutions (architectural patterns) and design decisions (architectural tactics). This article describes a systematic review of academic and industrial literature regarding architectural patterns and architectural tactics for microservices. The review yield 44 architectural patterns in academic sources and 74 in industrial ones, as well as a few architectural tactics originally proposed to address related problems. Most architectural patterns and tactics are associated to one of just five quality attributes: Scalability, flexibility, testability, performance, and elasticity. Also, most microservices in academic (but not industrial) literature are related to DevOps and IoT. The findings lead to propose a new taxonomy of microservice architectural patterns.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(188,NULL,0,'Architectural principles for cloud software',NULL,NULL,NULL,'A cloud is a distributed Internet-based software system providing resources as tiered services. Through service-orientation and virtualization for resource provisioning, cloud applications can be deployed and managed dynamically. We discuss the building blocks of an architectural style for cloud-based software systems. We capture style-defining architectural principles and patterns for control-theoretic, model-based architectures for cloud software. While service orientation is agreed on in the form of service-oriented architecture and microservices, challenges resulting from multi-tiered, distributed and heterogeneous cloud architectures cause uncertainty that has not been sufficiently addressed. We define principles and patterns needed for effective development and operation of adaptive cloud-native systems.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(189,NULL,0,'Agile Network Access Control in the Container Age',NULL,NULL,NULL,'Linux containers, such as those managed by Docker, are an increasingly popular way to package and deploy complex applications. However, the fundamental security primitive of network access control for a distributed microservice deployment is often ignored or left to the network operations team. High-level application-specific security requirements are not appropriately enforced by low-level network access control lists. Apart from coarse-grained separation of virtual networks, Docker neither supports the application developer to specify nor the network operators to enforce fine-grained network access control between containers. In a fictional story, we follow DevOp engineer Alice through the lifecycle of a Web application. From the initial design and software engineering through network operations and automation, we show the task expected of Alice and propose tool-support to help. As a full-stack DevOp, Alice is involved in high-level design decisions as well as low-level network troubleshooting. Focusing on network access control, we demonstrate shortcomings in today\'s policy management and sketch a tool-supported solution. We survey related academic work and show that many existing tools fail to bridge between the different levels of abstractions a full-stack engineer is operating on. Our toolset is formally verified using Isabell/HOL and is available as an open source.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(190,NULL,0,'Comparison of event choreography and orchestration techniques in Microservice Architecture',NULL,NULL,NULL,'Microservice Architecture (MSA) is an architectural design pattern which was introduced to solve the challenges involved in achieving the horizontal scalability, high availability, modularity and infrastructure agility for the traditional monolithic applications. Though MSA comes with a large set of benefits, it is challenging to design isolated services using independent Database per Service pattern. We observed that with each micro service having its own database, when transactions span across multiple services, it becomes challenging to ensure data consistency across databases, particularly in case of roll backs. In case of monolithic applications using RDBMS databases, these distributed transactions and roll backs can be handled efficiently using 2 phase commit techniques. These techniques cannot be applied for isolated No-SQL databases in micro services. This research paper aims to address three things: 1) elucidate the challenges with distributed transactions and rollbacks in isolated No-SQL databases with dependent collections in MSA, 2) examine the application of event choreography and orchestration techniques for the Saga pattern implementation, and 3) present the fact-based recommendations on the saga pattern implementations for the use cases.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(191,NULL,0,'Docker Layer Placement for On-Demand Provisioning of Services on Edge Clouds',NULL,NULL,NULL,'Driven by the increasing popularity of the microservice architecture, we see an increase in services with unknown demand pattern located in the edge network. Pre-deployed instances of such services would be idle most of the time, which is economically infeasible. Also, the finite storage capacity limits the amount of deployed instances we can offer. Instead, we present an on-demand deployment scheme using the Docker platform. In Docker, service images consist of layers, each layer adding specific functionality. This allows different services to reuse layers, avoiding cluttering the storages with redundant replicas. We propose a layer placement method which allows users to connect to a server, retrieve all necessary layers -possibly from multiple locations- and deploy an instance of the requested service within the desired response time. We search for the best layer placement which maximizes the satisfied demand given the storage and delay constraints. We developed an iterative optimization heuristic which is less exhaustive by dividing the global problem in smaller subproblems. Our simulation results show that our heuristic is able to solve the problem with less system resources. Last, we present interesting use-cases to use this approach in real-life scenarios.',NULL,NULL,NULL,'JOUR',NULL,'2018',1),(192,NULL,0,'Scientific Visualization as a Microservice',NULL,NULL,NULL,'In this paper, we propose using a decoupled architecture to create a microservice that can deliver scientific visualization remotely with efficiency, scalability, and superior availability, affordability and accessibility. Through our effort, we have created an open source platform, Tapestry, which can be deployed on Amazon AWS as a production use microservice. The applications we use to demonstrate the efficacy of the Tapestry microservice in this work are: (1) embedding interactive visualizations into lightweight web pages, (2) creating scientific visualization movies that are fully controllable by the viewers, (3) serving as a rendering engine for high-end displays such as power-walls, and (4) embedding data-intensive visualizations into augmented reality devices efficiently. In addition, we show results of an extensive performance study, and suggest how applications can make optimal use of microservices such as Tapestry.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(193,NULL,0,'Exploring new opportunities to defeat low-rate DDoS attack in container-based cloud environment',NULL,NULL,NULL,'DDoS attacks are rampant in cloud environments and continually evolve into more sophisticated and intelligent modalities, such as low-rate DDoS attacks. But meanwhile, the cloud environment is also developing in constant. Now container technology and microservice architecture are widely applied in cloud environment and compose container-based cloud environment. Comparing with traditional cloud environments, the container-based cloud environment is more lightweight in virtualization and more flexible in scaling service. Naturally, a question that arises is whether these new features of container-based cloud environment will bring new possibilities to defeat DDoS attacks. In this paper, we establish a mathematical model based on queueing theory to analyze the strengths and weaknesses of the container-based cloud environment in defeating low-rate DDoS attack. Based on this, we propose a dynamic DDoS mitigation strategy, which can dynamically regulate the number of container instances serving for different users and coordinate the resource allocation for these instances to maximize the quality of service. And extensive simulations and testbed-based experiments demonstrate our strategy can make the limited system resources be utilized sufficiently to maintain the quality of service acceptable and defeat DDoS attack effectively in the container-based cloud environment.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(194,NULL,0,'RESTful API automated test case generation with Evomaster',NULL,NULL,NULL,'RESTful APIs are widespread in industry, especially in enterprise applications developed with a microservice architecture. A RESTful web service will provide data via an API over the network using HTTP, possibly interacting with databases and other web services. Testing a RESTful API poses challenges, because inputs/outputs are sequences of HTTP requests/responses to a remote server. Many approaches in the literature do black-box testing, because often the tested API is a remote service whose code is not available. In this article, we consider testing from the point of view of the developers, who have full access to the code that they are writing. Therefore, we propose a fully automated white-box testing approach, where test cases are automatically generated using an evolutionary algorithm. Tests are rewarded based on code coverage and fault-finding metrics. However, REST is not a protocol but rather a set of guidelines on how to design resources accessed over HTTP endpoints. For example, there are guidelines on how related resources should be structured with hierarchical URIs and how the different HTTP verbs should be used to represent well-defined actions on those resources. Test-case generation for RESTful APIs that only rely on white-box information of the source code might not be able to identify how to create prerequisite resources needed before being able to test some of the REST endpoints. Smart sampling techniques that exploit the knowledge of best practices in RESTful API design are needed to generate tests with predefined structures to speed up the search. We implemented our technique in a tool called EvoMaster, which is open source. Experiments on five open-source, yet non-trivial, RESTful services show that our novel technique automatically found 80 real bugs in those applications. However, obtained code coverage is lower than the one achieved by the manually written test suites already existing in those services. Research directions on how to further improve such an approach are therefore discussed, such as the handling of SQL databases.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(195,NULL,0,'GA-Par: Dependable Microservice Orchestration Framework for Geo-Distributed Clouds',NULL,NULL,NULL,'Recent advances in composing Cloud applications have been driven by deployments of inter-networking heterogeneous microservices across multiple Cloud datacenters. System dependability has been of the upmost importance and criticality to both service vendors and customers. Security, a measurable attribute, is increasingly regarded as the representative example of dependability. Literally, with the increment of microservice types and dynamicity, applications are exposed to aggravated internal security threats and externally environmental uncertainties. Existing work mainly focuses on the QoS-aware composition of native VM-based Cloud application components, while ignoring uncertainties and security risks among interactive and interdependent container-based microservices. Still, orchestrating a set of microservices across datacenters under those constraints remains computationally intractable. This paper describes a new dependable microservice orchestration framework GA-Par to effectively select and deploy microservices whilst reducing the discrepancy between user security requirements and actual service provision. We adopt a hybrid (both whitebox and blackbox based) approach to measure the satisfaction of security requirement and the environmental impact of network QoS on system dependability. Due to the exponential grow of solution space, we develop a parallel Genetic Algorithm framework based on Spark to accelerate the operations for calculating the optimal or near-optimal solution. Large-scale real world datasets are utilized to validate models and orchestration approach. Experiments show that our solution outperforms the greedy-based security aware method with 42.34 percent improvement. GA-Par is roughly 4x faster than a Hadoop-based genetic algorithm solver and the effectiveness can be constantly guaranteed under different application scales.',NULL,NULL,NULL,'JOUR',NULL,'2020',1),(196,NULL,0,'An NFV-Based Service Framework for IoT Applications in Edge Computing Environments',NULL,NULL,NULL,'Emerging Internet of Things (IoT) applications share the same characteristics of involving multiple processing components (i.e., function modules) and requiring a massive amount of data to be processed with low latency. To meet these needs, edge/fog computing has been proposed for next-generation mobile networks to migrate the computing from the cloud to the edge of the network. Thanks to the development of Network Functions Virtualization (NFV), with which edge computing platform can virtualize function modules and deploy them on any edge devices to provide flexible services on the edge networks. However, such platform would need to deal with complicated function module calling relationship (i.e., call graph) of applications and user mobility, and both are not thoroughly considered by existing works of NFV and edge computing. In this paper, based on our previous idea of virtual local-hub (VLH), we propose a complete design of edge computing framework, which applies NFV technology on edge computing environment for IoT applications. To handle the complicated call graphs of IoT applications with better resource utilization, the VLH framework adapts the technologies of container-based virtualization and microservice architecture, which enables remote function module sharing on the edge computing environment. The framework includes the heuristic algorithm for function module allocation with the objective of minimizing total bandwidth consumption. We also present a design of protocols for system operations and mobility handling in the framework. Then we implement the framework on commodity hardware as a testbed. Via simulations under a large-scale environment with practical settings and experiments on the testbed under real-world scenarios, we demonstrate and verify the effectiveness and practicability of the proposed VLH framework for IoT application service provision.',NULL,NULL,NULL,'JOUR',NULL,'2019',1),(197,NULL,0,'Performance modeling and workflow scheduling of microservice-based applications in clouds',NULL,NULL,NULL,'Microservice has been increasingly recognized as a promising architectural style for constructing large-scale cloud-based applications within and across organizational boundaries. This microservice-based architecture greatly increases application scalability, but meanwhile incurs an expensive performance overhead, which calls for a careful design of performance modeling and task scheduling. However, these problems have thus far remained largely unexplored. In this paper, we develop a performance modeling and prediction method for independent microservices, design a three-layer performance model for microservice-based applications, formulate a Microservice-based Application Workflow Scheduling problem for minimum end-to-end delay under a user-specified Budget Constraint (MAWS-BC), and propose a heuristic microservice scheduling algorithm. The performance modeling and prediction method are validated and justified by experimental results generated through a well-known microservice benchmark on disparate computing nodes, and the performance superiority of the proposed scheduling solution is illustrated by extensive simulation results in comparison with existing algorithms.',NULL,NULL,NULL,'JOUR',NULL,'2019',1);
/*!40000 ALTER TABLE `REFERENCIA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `REFERENCIA_TOPICO`
--

DROP TABLE IF EXISTS `REFERENCIA_TOPICO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `REFERENCIA_TOPICO` (
  `Referencia_ID` int(11) NOT NULL,
  `topicos_ID` int(11) NOT NULL,
  PRIMARY KEY (`Referencia_ID`,`topicos_ID`),
  KEY `FK_REFERENCIA_TOPICO_topicos_ID` (`topicos_ID`),
  CONSTRAINT `FK_REFERENCIA_TOPICO_Referencia_ID` FOREIGN KEY (`Referencia_ID`) REFERENCES `REFERENCIA` (`ID`),
  CONSTRAINT `FK_REFERENCIA_TOPICO_topicos_ID` FOREIGN KEY (`topicos_ID`) REFERENCES `TOPICO` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `REFERENCIA_TOPICO`
--

LOCK TABLES `REFERENCIA_TOPICO` WRITE;
/*!40000 ALTER TABLE `REFERENCIA_TOPICO` DISABLE KEYS */;
/*!40000 ALTER TABLE `REFERENCIA_TOPICO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `REVISION`
--

DROP TABLE IF EXISTS `REVISION`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `REVISION` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `DESCRIPCION` varchar(255) DEFAULT NULL,
  `NOMBRE` varchar(255) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `REVISION`
--

LOCK TABLES `REVISION` WRITE;
/*!40000 ALTER TABLE `REVISION` DISABLE KEYS */;
INSERT INTO `REVISION` VALUES (1,'Mapeo sistemático de microservicios','Microservicios');
/*!40000 ALTER TABLE `REVISION` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `TERMINO`
--

DROP TABLE IF EXISTS `TERMINO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `TERMINO` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `DESCRIPCION` varchar(255) NOT NULL,
  `REVISION_ID` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_TERMINO_REVISION_ID` (`REVISION_ID`),
  CONSTRAINT `FK_TERMINO_REVISION_ID` FOREIGN KEY (`REVISION_ID`) REFERENCES `REVISION` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `TERMINO`
--

LOCK TABLES `TERMINO` WRITE;
/*!40000 ALTER TABLE `TERMINO` DISABLE KEYS */;
/*!40000 ALTER TABLE `TERMINO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `TOPICO`
--

DROP TABLE IF EXISTS `TOPICO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `TOPICO` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `DESCRIPCION` varchar(255) DEFAULT NULL,
  `PREGUNTA_ID` int(11) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FK_TOPICO_PREGUNTA_ID` (`PREGUNTA_ID`),
  CONSTRAINT `FK_TOPICO_PREGUNTA_ID` FOREIGN KEY (`PREGUNTA_ID`) REFERENCES `PREGUNTA` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `TOPICO`
--

LOCK TABLES `TOPICO` WRITE;
/*!40000 ALTER TABLE `TOPICO` DISABLE KEYS */;
/*!40000 ALTER TABLE `TOPICO` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-09-24 15:23:30
